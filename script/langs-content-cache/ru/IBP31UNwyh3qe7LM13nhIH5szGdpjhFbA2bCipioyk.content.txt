revision: 130654311
title: "\u041F\u0440\u043E\u0442\u043E\u043A\u043E\u043B \u0414\u0438\u0444\u0444\u0438\
  \ \u2014 \u0425\u0435\u043B\u043B\u043C\u0430\u043D\u0430"
url: https://ru.wikipedia.org/wiki/%D0%9F%D1%80%D0%BE%D1%82%D0%BE%D0%BA%D0%BE%D0%BB_%D0%94%D0%B8%D1%84%D1%84%D0%B8_%E2%80%94_%D0%A5%D0%B5%D0%BB%D0%BB%D0%BC%D0%B0%D0%BD%D0%B0


---

Протокол Ди́ффи — Хе́ллмана (англ. Diffie–Hellman key exchange protocol, DH) — криптографический протокол, позволяющий двум и более сторонам получить общий секретный ключ, используя незащищенный от прослушивания канал связи. Полученный ключ используется для шифрования дальнейшего обмена с помощью алгоритмов симметричного шифрования.
Схема открытого распределения ключей, предложенная Диффи и Хеллманом, произвела настоящую революцию в мире шифрования, так как снимала основную проблему классической криптографии — проблему распределения ключей.
В чистом виде алгоритм Диффи — Хеллмана уязвим для модификации данных в канале связи, в том числе для атаки «Man-in-the-middle (человек посередине)», поэтому схемы с его использованием применяют дополнительные методы односторонней или двусторонней аутентификации.


== История ==
Передача ключа по открытым каналам была большой проблемой криптографии XX века. Но эту проблему удалось решить после появления алгоритма Диффи — Хеллмана. Данный алгоритм позволил дать ответ на главный вопрос: «Как при обмене зашифрованными посланиями уйти от необходимости передачи секретного кода расшифровки, который, как правило, не меньше самого послания?» Открытое распространение ключей Диффи — Хеллмана позволяет паре пользователей системы выработать общий секретный ключ, не обмениваясь секретными данными.
Основы криптографии с открытыми ключами были выдвинуты Уитфилдом Диффи (Whitfield Diffie) и Мартином Хеллманом (Martin Hellman), а также независимо от них Ральфом Мерклом (Ralph Merkle).
Их вкладом в криптографию было утверждение, что ключи можно использовать парами — ключ шифрования и ключ дешифрования — при условии, что исключается возможность определения содержимого ключа расшифровки, исходя из содержимого открыто передаваемого ключа шифрования. Диффи и Хеллман впервые представили эту идею на Национальной компьютерной конференции в 1976 году, а через несколько месяцев была опубликована их основополагающая работа «New Directions in Cryptography» («Новые направления в криптографии»).
Годом позже был изобретён первый алгоритм асимметричного шифрования RSA, который позволил решить проблему общения через незащищённый канал.
В 2002 году Мартин Хеллман писал:

В уже истёкшем патенте U.S. Patent 4 200 770 в качестве создателей данного алгоритма указано три автора: Хеллман, Диффи и Меркл.
Только в декабре 1997 года появилась обновлённая информация о том, что Малькольм Вильямсон уже в 1974 году изобрёл математический алгоритм, основанный на коммутативности показателей при последовательном возведении в степень (
  
    
      
        (
        
          b
          
            x
          
        
        
          )
          
            y
          
        
        =
        (
        
          b
          
            y
          
        
        
          )
          
            x
          
        
        =
        
          b
          
            x
            y
          
        
      
    
     
  ). Данный метод можно назвать аналогом алгоритма Диффи — Хеллмана.


== Описание алгоритма ==
Работу алгоритма можно описать следующим образом. Предположим, существует два абонента: Алиса и Боб. Обоим абонентам известны некоторые два числа 
  
    
      
        g
      
    
     
   и 
  
    
      
        p
      
    
     
  , которые не являются секретными и могут быть известны также другим заинтересованным лицам. Для того, чтобы создать неизвестный более никому секретный ключ, оба абонента генерируют большие случайные числа: Алиса — число 
  
    
      
        a
      
    
     
  , Боб — число 
  
    
      
        b
      
    
     
  . Затем Алиса вычисляет остаток от деления (1):

  
    
      
        A
        =
        
          g
          
            a
          
        
        
          mod
          
            p
          
        
      
    
     
   (1)
и пересылает его Бобу, а Боб вычисляет остаток от деления (2):

  
    
      
        B
        =
        
          g
          
            b
          
        
        
          mod
          
            p
          
        
      
    
     
   (2)
и передаёт Алисе. Предполагается, что злоумышленник может получить оба этих значения, но не модифицировать их (то есть, у него нет возможности вмешаться в процесс передачи).
На втором этапе Алиса на основе имеющегося у неё 
  
    
      
        a
      
    
     
   и полученного по сети 
  
    
      
        B
      
    
     
   вычисляет значение (3):

  
    
      
        
          B
          
            a
          
        
        
          mod
          
            p
          
        
        =
        
          g
          
            a
            b
          
        
        
          mod
          
            p
          
        
      
    
     
   (3)
Боб на основе имеющегося у него 
  
    
      
        b
      
    
     
   и полученного по сети 
  
    
      
        A
      
    
     
   вычисляет значение (4):

  
    
      
        
          A
          
            b
          
        
        
          mod
          
            p
          
        
        =
        
          g
          
            a
            b
          
        
        
          mod
          
            p
          
        
      
    
     
   (4)
Как нетрудно видеть, у Алисы и Боба получилось одно и то же число (5):

  
    
      
        K
        =
        
          g
          
            a
            b
          
        
        
          mod
          
            p
          
        
      
    
     
   (5)
Его они и могут использовать в качестве секретного ключа, поскольку здесь злоумышленник встретится с практически неразрешимой (за разумное время) проблемой вычисления (3) или (4) по перехваченным 
  
    
      
        
          g
          
            a
          
        
        
          mod
          
            p
          
        
      
    
     
   и 
  
    
      
        
          g
          
            b
          
        
        
          mod
          
            p
          
        
      
    
     
  , если числа 
  
    
      
        p
      
    
     
  , 
  
    
      
        a
      
    
     
  , 
  
    
      
        b
      
    
     
   выбраны достаточно большими. Работа алгоритма показана на рисунке.

При работе алгоритма каждая сторона:

генерирует случайное натуральное число a — закрытый ключ
совместно с удалённой стороной устанавливает открытые параметры p и g (обычно значения p и g генерируются на одной стороне и передаются другой), где
p является случайным простым числом
(p-1)/2 также должно быть случайным простым числом (для повышения безопасности)
g является первообразным корнем по модулю p (также является простым числом)
вычисляет открытый ключ A, используя преобразование над закрытым ключом
A = ga mod p
обменивается открытыми ключами с удалённой стороной
вычисляет общий секретный ключ K, используя открытый ключ удаленной стороны B и свой закрытый ключ a
K = Ba mod p
К получается равным с обеих сторон, потому что:
Ba mod p = (gb mod p)a mod p = gab mod p = (ga mod p)b mod p = Ab mod pВ практических реализациях для a и b используются числа порядка 10100 и p порядка 10300. Число g не обязано быть большим и обычно имеет значение в пределах первого десятка.


== Пример ==
Ева — криптоаналитик. Она читает пересылку Боба и Алисы, но не изменяет содержимого их сообщений.

s = секретный ключ. s = 2
g = первообразный корень по модулю р. g = 5
p = открытое простое число. p = 23
a = секретный ключ Алисы. a = 6
A = открытый ключ Алисы. A = ga mod p = 8
b = секретный ключ Боба. b = 15
B = открытый ключ Боба. B = gb mod p = 19


=== Алгоритм Диффи — Хеллмана с тремя и более участниками ===
Использование алгоритма Диффи — Хеллмана не ограничивается двумя участниками. Он может быть применен на неограниченное количество пользователей. Рассмотрим ситуацию, когда Алиса, Боб и Кэрол вместе генерируют исходный ключ. В данном случае последовательность действий будет следующая:
Все вычисления производятся по модулю p

Стороны договариваются о параметрах алгоритма p и g
Стороны, Алиса, Боб и Кэрол генерируют свои ключи — a, b и c соответственно.
Алиса вычисляет ga mod p и посылает его Бобу
Боб вычисляет (ga)b mod p = gab mod p и посылает его Кэрол
Кэрол вычисляет (gab)c mod p = gabc mod p и получает тем самым общий секретный ключ
Боб вычисляет gb mod p и посылает его Кэрол
Кэрол вычисляет (gb)c mod p = gbc mod p и посылает его Алисе
Алиса вычисляет (gbc)a mod p = gbca mod p = gabc mod p — общий секретный ключ
Кэрол вычисляет gc mod p и посылает его Алисе
Алиса вычисляет (gc)a mod p = gca mod p и посылает его Бобу
Боб вычисляет (gca)b mod p = gcab mod p = gabc mod p и также получает общий секретный ключЕсли кто-то будет прослушивать канал связи, то он сможет увидеть ga mod p, gb mod p, gc mod p, gab mod p, gac mod p, и gbc mod p, но при этом не сможет воспроизвести gabc mod p используя любые комбинации этих чисел.
Для того чтобы данный алгоритм был эффективно применен для большой группы людей, необходимо соблюдение двух основных принципов:

Передача ключа должна начинаться с «пустого» ключа g. Весь секрет состоит в повышении текущего значения показателя каждого участника один раз;
Любое промежуточное значение может быть раскрыто публично, но окончательное значение представляет собой секретный ключ, который никогда не должен быть публично раскрыт. Таким образом, каждый пользователь получает свою копию тайного ключа.


== Шифрование с открытым ключом ==
Алгоритм Диффи — Хеллмана также может быть использован при шифровании с открытым ключом. В этом случае общая схема остаётся аналогичной приведённой выше, но с небольшими отличиями. Алиса не передаёт значения p, g и A Бобу напрямую, а публикует их заранее в качестве своего открытого ключа. Боб выполняет свою часть вычислений, после чего шифрует сообщение симметричным алгоритмом, используя K в качестве ключа, и передает шифротекст Алисе вместе со значением B.
На практике алгоритм Диффи — Хеллмана таким образом не используется. В данной области доминирующим алгоритмом с открытым ключом является RSA. Это обусловлено больше коммерческими соображениями, так как именно компанией RSA Data Security был создан центр сертификации. К тому же алгоритм Диффи — Хеллмана не может быть использован при подписании сертификатов.


== Получение ключа без передачи ключа ==
Если имеется сообщество пользователей, каждый из пользователей может опубликовать открытый ключ X=
  
    
      
        
          g
          
            x
          
        
      
    
     
  mod n в общей базе данных. Если Алиса хочет установить связь с Бобом, ей надо получить открытый ключ Боба и сгенерировать их общий секретный ключ. Алиса может зашифровать сообщение сгенерированным секретным ключом и послать его Бобу. Боб извлечет открытый ключ Алисы и найдет общий секретный ключ.
Каждая пара пользователей может использовать свой уникальный секретный ключ, не требуя обмена данными между пользователями. При этом все открытые ключи должны пройти проверку подлинности для того, чтобы исключить «человека посередине».


== Криптографическая стойкость ==
Криптографическая стойкость алгоритма Диффи — Хеллмана (то есть сложность вычисления 
  
    
      
        K
        =
        
          g
          
            a
            b
          
        
        
          mod
          
            p
          
        
      
    
     
   по известным p, g, 
  
    
      
        A
        =
        
          g
          
            a
          
        
        
          mod
          
            p
          
        
      
    
     
   и 
  
    
      
        B
        =
        
          g
          
            b
          
        
        
          mod
          
            p
          
        
      
    
     
  ) основана на предполагаемой сложности задачи дискретного логарифмирования.
Протокол Диффи — Хеллмана отлично противостоит пассивному нападению, но в случае реализации атаки «человек посередине» он не устоит. В самом деле, в протоколе ни Алиса, ни Боб не могут достоверно определить, кем является их собеседник, поэтому вполне возможно представить случай, при котором Боб и Алиса установили связь с Меллори, которая Алисе выдает себя за Боба, а Бобу представляется Алисой. И тогда вместо протокола Диффи — Хеллмана получаем что-то похожее на следующее:

То есть Меллори получает один общий ключ с Алисой (которая считает, что это Боб) и один общий ключ с Бобом (который считает, что это Алиса). А, следовательно, она может получать от Алисы любое сообщение для Боба, расшифровать его ключом, прочитать, зашифровать ключом и передать Бобу. Таким образом, подлог может оставаться незамеченным очень долгое время.


== Задача Диффи — Хеллмана и задача дискретного логарифмирования ==
Стойкость разделенного ключа в протоколе Диффи — Хеллмана обеспечивается вычислением значения 
  
    
      
        
          g
          
            a
            b
          
        
        
          mod
          
            p
          
        
      
    
     
   по заданным числам 
  
    
      
        
          g
          
            a
          
        
      
    
     
   и 
  
    
      
        
          g
          
            b
          
        
      
    
     
  . Эта задача называется вычислительной задачей Диффи — Хеллмана.


=== Вычислительная задача Диффи — Хеллмана (в конечном поле) ===
ИСХОДНЫЕ ДАННЫЕ:
desq
  
    
      
        
          F
          
            q
          
        
      
    
     
   : описание конечного поля 
  
    
      
        
          F
          
            q
          
        
      
    
     
   ;
g∈ 
  
    
      
        
          F
          
            q
          
          
            ∗
          
        
      
    
     
  — порождающий элемент группы 
  
    
      
        
          F
          
            q
          
          
            ∗
          
        
      
    
     
   ;

  
    
      
        
          g
          
            a
          
        
      
    
     
  ,
  
    
      
        
          g
          
            b
          
        
      
    
     
  ∈
  
    
      
        
          F
          
            q
          
          
            ∗
          
        
      
    
     
  , где 0 < a, b < q.
РЕЗУЛЬТАТ:

  
    
      
        
          g
          
            a
            b
          
        
      
    
     
  

Такая формулировка представляет собой общую постановку задачи в конечном поле 
  
    
      
        
          F
          
            q
          
        
      
    
     
   представляет общий случай, для Диффи — Хеллмана используется специальный случай.
Если бы задачу Диффи — Хеллмана было легко решить, то значение 
  
    
      
        
          g
          
            a
            b
          
        
        
          mod
          
            p
          
        
      
    
     
   можно было бы найти, зная числа 
  
    
      
        p
      
    
     
  , 
  
    
      
        g
      
    
     
  , 
  
    
      
        
          g
          
            a
          
        
      
    
     
   и 
  
    
      
        
          g
          
            b
          
        
      
    
     
  , которые являются частью протокола. Предполагая, что противник обладает возможностями перехвата информации, следует предположить, что эти числа не являются для него секретом.
Задача Диффи — Хеллмана опирается на сложность вычисления дискретного логарифма.


=== Задача дискретного логарифмирования (в конечном поле) ===
ИСХОДНЫЕ ДАННЫЕ:
desq
  
    
      
        
          F
          
            q
          
        
      
    
     
   : описание конечного поля 
  
    
      
        
          F
          
            q
          
        
      
    
     
   ;
g∈ 
  
    
      
        
          F
          
            q
          
          
            ∗
          
        
      
    
     
  — порождающий элемент группы 
  
    
      
        
          F
          
            q
          
          
            ∗
          
        
      
    
     
   ;
h ∈
  
    
      
        
          

          
          
            U
          
        
      
    
     
  
  
    
      
        
          F
          
            q
          
          
            ∗
          
        
      
    
     
  
РЕЗУЛЬТАТ:
Уникальное число a < q, удовлетворяющее условию h = 
  
    
      
        
          g
          
            a
          
        
      
    
     
  .
Целое число a обозначается как 
  
    
      
        l
        o
        
          g
          
            g
          
        
      
    
     
  h.

Дискретное логарифмирование аналогично обычному логарифмированию в поле действительных чисел. Однако, в отличие от последней задачи, в которой решение является приближенным, задача о вычислении дискретного логарифма имеет точное решение.
Как уже стало понятным, в основе современной криптографии лежит теория вычислительной сложности. Это значит, что стойкость криптосистем с открытым ключом является условной и зависит от сложности решения некоторых задач.
Все это приводит к тому, что задача Диффи — Хеллмана и задача дискретного логарифмирования считаются трудноразрешимыми.
Интуитивно ясно, что сложность решения этих задач зависит как от размера поля Fq, так и от выбора параметров (открытого параметра g и секретных чисел a и b). Очевидно, что небольшие варианты этих задач являются разрешимыми.
Полученные сведения позволяют сформулировать точные предположения о неразрешимости задачи Диффи — Хеллмана и задачи дискретного логарифмирования.
Предположение 1 — Условия неразрешимости задачи Диффи — Хеллмана
Алгоритмом решения задачи Диффи — Хеллмана называется вероятностный полиномиальный алгоритм A с преимуществом ε > 0:

ε = Prob[
  
    
      
        
          g
          
            a
            b
          
        
      
    
     
  
  
    
      
        ⟵
      
    
     
  A(desc(
  
    
      
        
          F
          
            q
          
        
      
    
     
  ), g,
  
    
      
        
          g
          
            a
          
        
      
    
     
  ,
  
    
      
        
          g
          
            b
          
        
      
    
     
  )].
где входные данные А указаны в определении (Вычислительная задача Диффи — Хеллмана) (в конечном поле).
Пусть IG — генератор вариантов, получающий на вход число 
  
    
      
        
          1
          
            k
          
        
      
    
     
  , время работы которого является полиномом от параметра k, а результатом — 1) desq(
  
    
      
        
          F
          
            q
          
        
      
    
     
  ), где |q| = k, и 2) порождающий элемент g ∈
  
    
      
        
          F
          
            q
          
          
            ∗
          
        
      
    
     
  .
Будем говорить, что генератор IG удовлетворяет условиям неразрешимости задачи Диффи — Хеллмана, если для вариантов IG(
  
    
      
        
          1
          
            k
          
        
      
    
     
  ) не существует алгоритма решения с преимуществом ε> 0, которое не является пренебрежимо малым по сравнению со всеми достаточно большими числами k.
Предположение 2 — Условия неразрешимости задачи дискретного логарифмирования
Алгоритмом решения задачи дискретного логарифмирования называется вероятностный полиномиальный алгоритм A с преимуществом ε > 0:

ε = Prob[
  
    
      
        l
        o
        g
        h
      
    
     
  
  
    
      
        ⟵
      
    
     
  A(desc(
  
    
      
        
          F
          
            q
          
        
      
    
     
  ), g, h)]
где входные данные А указаны в определении (Вычислительная задача Диффи — Хеллмана) (в конечном поле).
Пусть IG — генератор вариантов, получающий на вход число 
  
    
      
        
          1
          
            k
          
        
      
    
     
  , время работы которого является полиномом от параметра k, а результатом — 1) desq(
  
    
      
        
          F
          
            q
          
        
      
    
     
  ), где |q| = k, и 2) порождающий элемент g ∈
  
    
      
        
          F
          
            q
          
          
            ∗
          
        
      
    
     
   и 3) элемент h ∈
  
    
      
        
          F
          
            q
          
          
            ∗
          
        
      
    
     
  
Будем говорить, что генератор IG удовлетворяет условиям неразрешимости задачи Диффи — Хеллмана, если для вариантов IG(
  
    
      
        
          1
          
            k
          
        
      
    
     
  ) не существует алгоритма решения с преимуществом ε> 0, которое не является пренебрежимо малым по сравнению со всеми достаточно большими числами k.
Иначе говоря, здесь предполагается, что почти все достаточно большие варианты указанных задач в конечных полях не имеют эффективного алгоритма решения. Доля слабых вариантов этих задач, поддающихся решению, пренебрежимо мала.


== Критика ==
Для безопасности протокола важным является выбор параметров. Многие реализации используют небольшое количество популярных наборов параметров алгоритма. В 2016 была представлена работа, показавшая возможность по подготовке специальных конечных полей для алгоритма Диффи — Хеллмана (DH). Выбранное исследователями простое число p специального вида (размером 1024 бита) выглядит обычным для пользователей, но упрощает на несколько порядков сложность вычислений по методу SNFS для решения задачи дискретного логарифмирования. Для борьбы с атакой предлагается увеличить размер модуля до 2048 бит.


== См. также ==
Обмен ключами
Протокол Диффи — Хеллмана на эллиптических кривых (ECDH)


== Примечания ==


== Источники ==
Брюс Шнайер. Прикладная криптография
Мао, В. Современная криптография: теория и практика. : Пер. с английского. М.: Издательский дом «Вильямс», 2005. — 768 с. : ил. — Парал. тит. англ. Шифрование — асимметричные методы. Глава 8 («Шифрование с открытым ключом», «Обмен ключом без обмена ключом», «Криптографическая стойкость», «Задача Диффи — Хеллмана и задача дискретного логарифмирования»)
Dieter Gollmann (2006). Computer Security Second Edition West Sussex, England: John Wiley & Sons, Ltd.
T. Kivinen; M. Kojo, SSH Communications Security.:  More Modular Exponential (MODP) Diffie-Hellman groups for Internet Key Exchange (IKE) (англ.) (TXT). Standards Track. Инженерный совет Интернета (май 2003). — Стандартные группы открытых чисел p и g, рекомендуемые Инженерным советом Интернета (IETF). Дата обращения: 15 февраля 2016.
The possibility of Non-Secret digital encryption J. H. Ellis, January 1970.
Non-Secret Encryption Using a Finite Field MJ Williamson, January 21, 1974.
Thoughts on Cheaper Non-Secret Encryption MJ Williamson, August 10, 1976.
New Directions in Cryptography W. Diffie and M. E. Hellman, IEEE Transactions on Information Theory, vol. IT-22, Nov. 1976, pp: 644—654.
Cryptographic apparatus and method Martin E. Hellman, Bailey W. Diffie, and Ralph C. Merkle, U.S. Patent #4,200,770, 29 April 1980
The History of Non-Secret Encryption[dead link] JH Ellis 1987 (28K PDF file) (HTML version[dead link])
The First Ten Years of Public-Key Cryptography Whitfield Diffie, Proceedings of the IEEE, vol. 76, no. 5, May 1988, pp: 560—577 (1.9MB PDF file)
Menezes, Alfred; van Oorschot, Paul; Vanstone, Scott (1997). Handbook of Applied Cryptography Boca Raton, Florida: CRC Press. ISBN 0-8493-8523-7. (Available online)
Singh, Simon (1999) The Code Book: the evolution of secrecy from Mary Queen of Scots to quantum cryptography New York: Doubleday ISBN 0-385-49531-5
An Overview of Public Key Cryptography Martin E. Hellman, IEEE Communications Magazine, May 2002, pp: 42—49. (123kB PDF file)
Diffie-Hellman key exchange explained in 5 minutes
Oral history interview with Martin Hellman, Charles Babbage Institute, University of Minnesota. Leading cryptography scholar *Martin Hellman discusses the circumstances and fundamental insights of his invention of public key cryptography with collaborators Whitfield Diffie and Ralph Merkle at Stanford University in the mid-1970s.
RFC 2631 — Diffie-Hellman Key Agreement Method E. Rescorla June 1999.
Summary of ANSI X9.42: Agreement of Symmetric Keys Using Discrete Logarithm Cryptography[dead link] (64K PDF file) (Description of ANSI 9 Standards)
Diffie-Hellman Key Exchange — A Non-Mathematician’s Explanation by Keith Palmgren
Crypt::DH Perl module from CPAN
Hands-on Diffie-Hellman demonstration
C implementation using GNU Multiple Precision Arithmetic Library[dead link]
Diffie Hellman in 2 lines of Perl (using dc)
Smart Account Management (SAcct) (using DH key exchange to derive session key)
Talk by Martin Hellman in 2007, Google video