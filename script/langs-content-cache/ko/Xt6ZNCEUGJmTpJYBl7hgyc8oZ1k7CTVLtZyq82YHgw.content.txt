revision: 33069915
title: Chmod
url: https://ko.wikipedia.org/wiki/Chmod


---

chmod(change mode의 축약어)명령어는 유닉스와 유닉스 계통 환경 안에서 쓰이는 셸 명령어이다. 이 명령어는 파일들이나 디렉터리의 파일 시스템 모드들을 바꾼다. 그 모드들은 허가나 특별한 모드들을 포함한다.


== 역사 ==
chmod 명령어는 AT&T 유닉스 버전 1에서 최초로 등장했고, 오늘날에도 여전히 유닉스 계통의 기계에서 사용된다.


== 사용법 ==
chmod 명령어 옵션들은 다음과 같이 지정된다:

$ chmod [options] mode[,mode] file1 [file2 ...]

현재 어떤 허가들이 있는지 보기 위해서는 다음과 같이 입력한다:

$ ls -l file


== 옵션 ==
chmod 명령어는 행동에 영향을 미치는, 수많은 명령어 옵션들을 가진다. 가장 일반적인 옵션들은 다음과 같다:

-R: 재귀적으로 파일들과 디렉터리들의 모드들을 바꾼다.
-v: 자세한 모드; 실행되고 있는 모든 파일을 나열한다.


== 문자열 모드 ==
chmod 유틸리티에 대해서는, 모든 허가들과 특수한 모드들은 모드 매개변수에 의해서 표현된다. 파일들이나 디렉터리들의 모드를 조절하기 위한 하나의 방법은 기호적인 모드를 지정하는 것이다. 이 기호적인 모드는 세 가지 구성요소로 구성되며, 그것들은 단순한 문자열을 구성하기 위해서 결합된다:

$ chmod [references][operator][modes] file1 ...

레퍼런스들 (혹은 클래스들)은 허가가 적용되는 사용자들을 구분하기 위해서 사용된다. 만약 어떠한 레퍼런스들도 그것이 "모든 것"에 대해 기본값으로 지정하지 않았다면, 그것들은 다음 아래에 있는 문자들 중 하나 혹은 몇 개로 표현된다:

chmod 프로그램은 파일의 모드들이 어떻게 조정될 수 있는지를 명시하기 위해서 연산자를 사용한다.
허용되는 연산자는 다음과 같다:

그 모드들은 어떤 허가들이 인정될 것인지 혹은 지정된 클래스들로부터 삭제될 것인지를 지정한다. 기본적인 허가들과 일치하는 세가지 기본적인 모드들이 있다:

이 세 가지 구성요소의 조합은 chmod 명령어에 의해 인식되는 문자열을 만든다. 쉼표로 다양한 기호적 모드들을 분리하므로 다양한 변화들을 지정할 수 있다.


=== 문자열 모드들의 예제 ===
예를 들어, 밑에 따라오는 명령어는 sample라는 이름의 파일 혹은 디렉터리의 사용자나 그룹 크래스들에게 쓰기나 읽기 허가들을 추가해 주는 데 사용된다:

$ chmod ug+rw sample
$ ls -ld sample
drw-rw----   2 unixguy  unixguy       96 Dec  8 12:53 sample

이 명령어는 모든 허가들을 지움으로써 어떠한 사람도 sample이라는 이름의 파일을 실행시키거나 읽거나 쓰게 허용하지 않는다.

$ chmod a-rwx sample
$ ls -l sample
----------   2 unixguy  unixguy       96 Dec  8 12:53 sample

아래의 명령어는 sample 파일에 대해서 사용자나 그룹의 읽기와 실행 기능만의 (쓰기 기능은 포함되지 않는다) 허가들을 변화시킨다.

Sample file permissions before command
$ ls -ld sample
drw-rw----   2 unixguy  unixguy       96 Dec  8 12:53 sample
$ chmod ug=rx sample
$ ls -ld sample
dr-xr-x---   2 unixguy  unixguy       96 Dec  8 12:53 sample


== 8진법 숫자 ==
chmod 명령어는 모드들을 나타내는 세 자리 혹은 네 자리 8진수도 받아들인다. 

예를 들어, sample이라는 이름의 파일이나 디렉터리가 있고, setuid, setgid 그리고 sticky 비트들을 설정하지 않는다 하자. 이 때, 유저에게 읽기와 쓰기 권한, 그룹에게 읽기와 쓰기 권한, 다른 사람들에게 읽기 권한만 주려고 한다. 그렇다면 위 표에서 허용하는 권한에 대응되는 수를 각 클래스마다 더한 뒤, 유저, 그룹, 다른 사람들의 순서로 다음과 같이 모드를 설정할 수 있다.

$ chmod 664 sample

또는 모든 대상에게 읽기 권한을 주고, 실행 권한을 제거하고, 유저와 그룹에게만 쓰기 권한을 주는 것으로도 볼 수 있으므로 다음과 같은 명령어를 입력해도 위 명령어와 같은 효과가 나타난다.

$ chmod +r,-x,ug+w sample

만약 허가에 대한 문제가 생겼더라도, 모든 사용자들에게 모든 권한을 허용하는 chmod 777를 사용하는 것은 권장되지 않는다.


== 특별한 모드들 ==

chmod 명령어는 파일이나 디렉터리의 특별한 모드들이나 추가적인 허가들 역시 바꿀 수 있다. 그 기호적인 모드들은 setuid 나 setgid 모드들을 나타내기 위해서 s를 사용하고, sticky 모드를 나타내기 위해서 t를 사용한다. 이 모드들은 다른 클래스들이 지정되었지는 아닌지와 관계없이 적절한 클래스들에게만 적용될 수 있다. 대부분의 운영 시스템들은 8진법 모드들을 사용하여 특별한 모드들을 지정하는 것을 보조하고 있지만 어떤 운영체제들은 그렇지 않다. 이러한 시스템들에서는 오직 기호적인 모드들만 사용될 수 있다.


== 예제들 ==


== 같이 보기 ==
파일 시스템 권한
chown: 유닉스 계통 시스템에서 파일이나 디렉터리의 소유권을 바꾸기 위해서 사용되는 명령어
chgrp: 유닉스 계통 시스템에서 파일이나 디렉터리의 그룹을 바꾸기 위해서 사용되는 명령어
cacls: 윈도우 NT나 그것의 모방 제품들에서 사용되는 명령어로 파일이나 디렉터리와 관련된 권한 통제 리스트들을 조정한다.
사용자 ID
그룹 ID
유닉스 명령어 목록


== 외부 링크 ==
(영어) chmod(1) – 리눅스 사용자 명령어 매뉴얼 페이지(영어) chmod – 명령어와 유틸리티 오픈 그룹의  단일 유닉스 규격, Issue 7 참고chmod — GNU coreutils로부터의 매뉴얼 페이지.
GNU "Setting Permissions" manual
Solaris 9 chmod man page
Mac OS X chmod man page, 이 또한 접근 제어 목록들을 보조한다.
CHMOD-Win 3.0 — Freeware Windows' ACL ←→ CHMOD converter.
What CHMOD? File Permissions Calculator, web-based CHMOD calculator.
Beginners tutorial with on-line "live" example