revision: 38660965
title: "\u0410\u043B\u0433\u043E\u0440\u0438\u0442\u043C \u0414\u0436\u043E\u043D\u0441\
  \u043E\u043D\u0430"
url: https://uk.wikipedia.org/wiki/%D0%90%D0%BB%D0%B3%D0%BE%D1%80%D0%B8%D1%82%D0%BC_%D0%94%D0%B6%D0%BE%D0%BD%D1%81%D0%BE%D0%BD%D0%B0


---

Алгоритм Джонсона дозволяє знайти найкоротші шляхи між усіма парами вершин зваженого орієнтованого графу. Цей алгоритм працює, якщо у графі містяться ребра з додатною чи від'ємною вагою, але відсутні цикли з від'ємною вагою. Названо на честь Д. Б. Джонсона, який опублікував цей алгоритм 1977 року.


== Алгоритм ==
Дано граф 
  
    
      
        G
        =
        (
        V
        ,
        E
        )
      
    
     
   з ваговою функцією 
  
    
      
        ω
        :
        E
        →
        R
      
    
     
  . Якщо ваги всіх ребер 
  
    
      
        ω
      
    
     
   у графі є невід'ємними, то можливо знайти найкоротші шляхи між усіма парами вершин, запустивши алгоритм Дейкстри по одному разу для кожної з вершин. Якщо в графі містяться ребра з від'ємною вагою, але відсутні цикли з від'ємною вагою, то можливо обчислити нову множину ребер з невід'ємними вагами, що дозволяє скористатися попереднім методом. Нова множина, що складається з ваг ребер 
  
    
      
        
          
            
              ω
              ^
            
          
        
      
    
     
  , повинна відповідати таким властивостям:

Для всіх ребер 
  
    
      
        (
        u
        ,
        
        v
        )
      
    
     
   нова вага 
  
    
      
        
          
            
              ω
              ^
            
          
        
        (
        u
        ,
        
        v
        )
        >
        0
      
    
     
  .
Для всіх пар вершин 
  
    
      
        u
        ,
        
        v
        ∈
        V
      
    
     
   шлях 
  
    
      
        p
      
    
     
   є найкоротшим шляхом з вершини 
  
    
      
        u
      
    
     
   до вершини 
  
    
      
        v
      
    
     
   з використанням вагової функції 
  
    
      
        ω
      
    
     
   тоді й лише тоді, коли 
  
    
      
        p
      
    
     
   є також найкоротшим шляхом з вершини 
  
    
      
        u
      
    
     
   до вершини 
  
    
      
        v
      
    
     
   з ваговою функцією 
  
    
      
        
          
            
              ω
              ^
            
          
        
      
    
     
  .


=== Збереження найкоротших шляхів ===
Лема (Зміна ваг зберігає найкоротші шляхи). Нехай дано зважений орієнтований граф 
  
    
      
        G
        =
        (
        V
        ,
        
        E
        )
      
    
     
   з ваговою функцією 
  
    
      
        ω
        :
        E
        →
        R
      
    
     
  , і нехай 
  
    
      
        h
        :
        V
        →
        R
      
    
     
   — довільна функція, що відображує вершини на дійсні числа. Для кожного ребра 
  
    
      
        (
        u
        ,
        
        v
        )
        ∈
        E
      
    
     
   визначмо

  
    
      
        
          
            
              ω
              ^
            
          
        
        (
        u
        ,
        
        v
        )
        =
        ω
        (
        u
        ,
        
        v
        )
        +
        h
        (
        u
        )
        −
        h
        (
        v
        )
        .
      
    
     
  Нехай 
  
    
      
        p
        =
        ⟨
        
          v
          
            0
          
        
        ,
        
        
          v
          
            1
          
        
        ,
        
        …
        ,
        
        
          v
          
            k
          
        
        ⟩
      
    
     
   є довільним шляхом з вершини 
  
    
      
        
          v
          
            0
          
        
      
    
     
   до вершини 
  
    
      
        
          v
          
            k
          
        
      
    
     
  . 
  
    
      
        p
      
    
     
   є найкоротшим шляхом з ваговою функцією 
  
    
      
        ω
      
    
     
   тоді й лише тоді, коли він є найкоротшим шляхом з ваговою функцією 
  
    
      
        
          
            
              ω
              ^
            
          
        
      
    
     
  , тобто рівність 
  
    
      
        ω
        (
        p
        )
        =
        δ
        (
        
          v
          
            0
          
        
        ,
        
        
          v
          
            k
          
        
        )
      
    
     
   є рівносильною рівності 
  
    
      
        
          
            
              ω
              ^
            
          
        
        (
        p
        )
        =
        
          
            
              δ
              ^
            
          
        
        (
        
          v
          
            0
          
        
        ,
        
        
          v
          
            k
          
        
        )
      
    
     
  . Крім того, граф 
  
    
      
        G
      
    
     
   містить цикл з від'ємною вагою з використанням вагової функції 
  
    
      
        ω
      
    
     
   тоді й лише тоді, коли він містить цикл з від'ємною вагою з використанням вагової функції 
  
    
      
        
          
            
              ω
              ^
            
          
        
      
    
     
  .


=== Зміна ваги ===
Для даного графу створімо новий граф 
  
    
      
        
          G
          ′
        
        =
        (
        
          V
          ′
        
        ,
        
        
          E
          ′
        
        )
      
    
     
  , де 
  
    
      
        
          V
          ′
        
        =
        V
        ∪
        {
        s
        }
      
    
     
  , для деякої нової вершини 
  
    
      
        s
        ∉
        V
      
    
     
  , а 
  
    
      
        
          E
          ′
        
        =
        E
        ∪
        {
        (
        s
        ,
        
        v
        )
        :
        v
        ∈
        V
        }
      
    
     
  .
Розширмо вагову функцію 
  
    
      
        ω
      
    
     
   таким чином, щоби для всіх вершин 
  
    
      
        v
        ∈
        V
      
    
     
   зберігалася рівність 
  
    
      
        ω
        (
        s
        ,
        
        v
        )
        =
        0
      
    
     
  .
Далі визначмо для всіх вершин 
  
    
      
        v
        ∈
        
          V
          ′
        
      
    
     
   величину 
  
    
      
        h
        (
        v
        )
        =
        δ
        (
        s
        ,
        
        v
        )
      
    
     
   та нові ваги для всіх ребер 
  
    
      
        
          
            
              ω
              ^
            
          
        
        (
        u
        ,
        
        v
        )
        =
        ω
        (
        u
        ,
        
        v
        )
        +
        h
        (
        u
        )
        −
        h
        (
        v
        )
        ⩾
        0
      
    
     
  .


=== Основна процедура ===
В алгоритмі Джонсона використовують алгоритм Беллмана — Форда та алгоритм Дейкстри, втілені у вигляді підпрограм. Ребра зберігають у вигляді переліків суміжних вершин. Алгоритм повертає звичайну матрицю 
  
    
      
        D
        =
        
          d
          
            i
            j
          
        
      
    
     
   розміром 
  
    
      
        
          |
        
        V
        
          |
        
        ×
        
          |
        
        V
        
          |
        
      
    
     
  , де 
  
    
      
        
          d
          
            i
            j
          
        
        =
        δ
        (
        i
        ,
        
        j
        )
      
    
     
  , або видає повідомлення про те, що вхідний граф містить цикл із від'ємною вагою.
Алгоритм Джонсона

 Збудувати граф 
  
    
      
        
          G
          ′
        
      
    
     
  
 if Bellman_Ford 
  
    
      
        (
        
          G
          ′
        
        ,
        
        ω
        ,
        
        s
        )
      
    
     
   = FALSE
    then print «Вхідний граф містить цикл з від'ємною вагою»
    else for для кожної 
  
    
      
        v
        ∈
        
          V
          ′
        
      
    
     
  
         do призначити величині 
  
    
      
        h
        (
        v
        )
      
    
     
   значення 
  
    
      
        δ
        (
        s
        ,
        
        v
        )
      
    
     
  ,
            обчислене алгоритмом Беллмана — Форда
         for для кожного ребра 
  
    
      
        (
        u
        ,
        
        v
        )
        ∈
        
          E
          ′
        
      
    
     
  
             do 
  
    
      
        
          
            
              ω
              ^
            
          
        
        (
        u
        ,
        
        v
        )
        ←
        ω
        (
        u
        ,
        
        v
        )
        +
        h
        (
        u
        )
        −
        h
        (
        v
        )
      
    
     
  
         for для кожної вершини 
  
    
      
        u
        ∈
        V
      
    
     
  
             do обчислення за допомогою алгоритму Дейкстри
             
  
    
      
        (
        G
        ,
        
        
          
            
              ω
              ^
            
          
        
        ,
        
        u
        )
      
    
     
   величин 
  
    
      
        
          
            
              δ
              ^
            
          
        
        (
        u
        ,
        
        v
        )
      
    
     
  
             для всіх вершин 
  
    
      
        v
        ∈
        V
      
    
     
  
             for для кожної вершини 
  
    
      
        v
        ∈
        V
      
    
     
  
                 do 
  
    
      
        
          d
          
            u
            v
          
        
        ←
        
          
            
              δ
              ^
            
          
        
        (
        u
        ,
        
        v
        )
        +
        h
        (
        v
        )
        −
        h
        (
        u
        )
      
    
     
  
    return D


== Складність ==
Якщо в алгоритмі Дейкстри неспадну чергу з пріоритетами втілено у вигляді фібоначчієвої купи, то тривалість роботи алгоритму Джонсона дорівнює 
  
    
      
        O
        (
        
          V
          
            2
          
        
        log
        ⁡
        V
        +
        V
        E
        )
      
    
     
  . За простішого втілення неспадної черги з пріоритетами тривалість роботи стає рівною 
  
    
      
        O
        (
        V
        E
        log
        ⁡
        V
        )
      
    
     
  , але для розріджених графів ця величина в асимптотичній границі поводиться краще, ніж тривалість роботи алгоритму Флойда — Воршелла.


== Див. також ==
Алгоритм Дейкстри
Алгоритм Беллмана — Форда
Алгоритм Флойда — Воршелла


== Посилання ==
Унаочнювач алгоритму


== Література ==
Томас Х. Кормен и др. Алгоритмы: построение и анализ. — 2-е изд. — М. : Издательский дом «Вильямс», 2007. — 726 с. — ISBN 5-8459-0857-4. (рос.)
Томас Х. Кормен и др. Алгоритмы: построение и анализ. — 1-е изд. — М. : МЦНМО, 2004. — 523 с. — ISBN 5-900916-37-5. (рос.)