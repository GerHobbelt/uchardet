revision: 9893337
title: "\u03A7\u03B9\u03BF\u03C5 \u039C\u03B1\u03BA\u03B3\u03BA\u03C1\u03AD\u03B3\u03BA\
  \u03BF\u03C1 \u03A1\u03BF\u03C2"
url: https://el.wikipedia.org/wiki/ASCII


---

Ο κώδικας ASCII (προφέρεται: [ˈæski] μεταγραφή: άσκι, ακ: American Standard Code for Information Interchange, Αμερικανικός Πρότυπος Κώδικας για Ανταλλαγή Πληροφοριών) είναι ένα κωδικοποιημένο σύνολο χαρακτήρων του λατινικού αλφάβητου όπως αυτό χρησιμοποιείται σήμερα στην Αγγλική γλώσσα και σε άλλες δυτικοευρωπαϊκές γλώσσες. Χρησιμοποιείται για αναπαράσταση κειμένου στους υπολογιστές, σε συσκευές τηλεπικοινωνίας, καθώς και σε άλλες συσκευές που δουλεύουν με κείμενο. Οι περισσότερες σύγχρονες κωδικοποιήσεις χαρακτήρων βασίζονται στον ASCII, αν και υποστηρίζουν πολύ περισσότερους χαρακτήρες.
Ιστορικά, ο ASCII αναπτύχθηκε από τηλεγραφικούς κώδικες. Η πρώτη εμπορική χρήση του ήταν ως κώδικας ενός τηλέτυπου επτά bit της Bell. Η δουλειά για τον ASCII ξεκίνησε επίσημα στις 6 Οκτωβρίου 1940, με την πρώτη συνάντηση της υποεπιτροπής X3.2 του Αμερικανικού Οργανισμού Τυποποίησης (American Standards Association, ASA). Η πρώτη έκδοση δημοσιεύτηκε το 1963, μία μείζων αναθεώρηση το 1967, και η πλέον πρόσφατη ενημέρωση το 1986. Σε σύγκριση με τους παλαιότερους τηλεγραφικούς κώδικες, ο προτεινόμενος κώδικας της Bell και ο ASCII ήταν διατεταγμένοι για πιο άνετη ταξινόμηση (π.χ. αλφαβητική σειρά) καταλόγων ενώ είχαν χαρακτηριστικά και για άλλες συσκευές εκτός από τηλέτυπα.
Ο ASCII περιλαμβάνει ορισμούς για 128 χαρακτήρες: 33 είναι μη εκτυπώσιμοι χαρακτήρες ελέγχου (πλέον κατά κύριο λόγο παρωχημένοι) που επηρεάζουν το πως γίνεται οι επεξεργασία του κειμένου και των κενών, 94 είναι εκτυπώσιμοι χαρακτήρες, και το κενό που θεωρείται αόρατο γραφικό. Η πλέον κοινώς χρησιμοποιούμενη κωδικοποίηση χαρακτήρων στο διαδίκτυο ήταν η US-ASCII μέχρι τον Δεκέμβριο του 2007, οπότε ξεπεράστηκε από την κωδικοποίηση UTF-8.


== Ιστορία ==

Ο ASCII αναπτύχθηκε υπό την αιγίδα μίας επιτροπής του Αμερικανικού Οργανισμού Τυποποίησης, ονόματι επιτροπή X3, από την υποεπιτροπή της, X3.2 (αργότερα X3L2), και αργότερα από την ομάδα εργασίας X3.2.4 αυτής της υποεπιτροπής. Ο Αμερικανικός Οργανισμός Τυποποίησης εξελίχθηκε σε Ινστιτούτο Τυποποίησης των Ηνωμένων Πολιτειών της Αμερικής (United States of America Standards Institute, USASI) . Όπως και άλλες κωδικοποιήσεις χαρακτήρων, ο ASCII καθορίζει μία αντιστοιχία μεταξύ ψηφιακών μοτίβων και σύμβολα χαρακτήρων (γραφήματα και χαρακτήρες ελέγχου). Αυτό επιτρέπει σε ψηφιακές συσκευές να επικοινωνούν μεταξύ τους και να επεξεργάζονται, να αποθηκεύουν και να μεταδίδουν πληροφορίες σχετικές με χαρακτήρες, όπως η γραπτή γλώσσα. Πριν την ανάπτυξη του ASCII, οι κωδικοποιήσεις που ήταν σε χρήση περιλάμβαναν 26 αλφαβητικούς χαρακτήρες, 10 αριθμητικά ψηφία, και από 11 έως 25 ειδικά γραφικά σύμβολα. Για να συμπεριληφθούν όλα αυτά, καθώς και χαρακτήρες ελέγχου συμβατοί με το πρότυπο της Comité Consultatif International Téléphonique et Télégraphique, το Fieldata και το πρώιμο EBCDIC, απαιτούνταν πάνω από 64 κωδικοί για τον ASCII.
Η επιτροπή συζήτησε την πιθανότητα λειτουργίας πλήκτρου αλλαγής (swift, όπως στην κωδικοποίηση Baudot), η οποία θα επέτρεπε  παραπάνω από 64 κωδικούς να αναπαρασταθούν με έξι bit. Σε ένα κωδικό με shift κάποιοι κάποιοι κωδικοί χαρακτήρων καθορίζουν επιλογή ανάμεσα σε κάποιες επιλογές για τους επόμενους κωδικούς χαρακτήρων. Αυτό επιτρέπει συμπαγή κωδικοποίηση, αλλά είναι λιγότερο αξιόπιστο για μετάδοση δεδομένων. Ένα σφάλμα στην μετάδοση του κωδικού swift εν γένει κάνει ένα μεγάλο τμήμα της μετάδοσης ακατάληπτο. Η επιτροπή τυποποίησης αποφάσισε κατά του shit και έτσι για τον ASCII απαιτούνταν κωδικοποίηση τουλάχιστον επτά bit.Η επιτροπή εξέτασε την πιθανότητα κωδικοποίησης 8-bit, καθώς οκτώ bit θα επέτρεπαν αποδοτική κωδικοποίηση με μοτίβα τεσσάρων bit ψηφίων με δυαδικά κωδικοποιημένους δεκαδικούς (binary coded decimal). Αυτό ωστόσο θα απαιτούσε όλες οι μεταδόσεις δεδομένων να γίνονται με οκτώ bit, όταν επτά θα ήταν αρκετά. Η επιτροπή ψήφισε να χρησιμοποιηθεί κωδικοποίηση επτά bit ώστε να ελαχιστοποιηθεί το κόστος της μετάδοσης δεδομένων. Καθώς η διάτρητη ταινία εκείνη την εποχή μπορούσε να καταγράψει οκτώ bit σε μία θέση, επέτρεπε την χρήση bit ισοτιμίας για έλεγχο σφαλμάτων αν αυτό ήταν επιθυμητό. Συσκευές με δυφιοοκτάδες (octet, ομαδοποίηση 8 bit) ως μητρικό τύπο δεδομένων που δεν χρησιμοποιούσαν έλεγχο ισοτιμίας συνήθως έθεταν το όγδοο bit στο 0.Η κωδικοποίηση διατάχθηκε έτσι ώστε οι περισσότεροι κωδικοί ελέγχου να είναι μαζί, και όλοι οι γραφικοί κωδικοί μαζί. Οι πρώτες δύο στήλες (32 θέσεις) δεσμεύθηκαν για χαρακτήρες ελέγχου. Ο χαρακτήρας κενού (space) τοποθετήθηκε πριν από τους γραφικούς χαρακτήρες έτσι ώστε να γίνουν ευκολότεροι οι αλγόριθμοι ταξινόμησης, έτσι κατέλαβε την θέση 0x20. Η επιτροπή αποφάσισε ότι ήταν σημαντικό να υποστηρίζονται κεφαλαιογράμματα αλφάβητα 64 χαρακτήρων, και έτσι επέλεξε να δομήσει έτσι τον ASCII ώστε να μπορεί εύκολα να μετατραπεί σε σύνολο 64 γραφικών χαρακτήρων. Τα μικρά γράμματα έτσι δεν ανακατεύτηκαν με τα κεφαλαία. Οι ειδικοί και αριθμητικοί κωδικοί τοποθετήθηκαν πριν από τα γράμματα ώστε να υπάρχει ευελιξία, ενώ το γράμμα 'A' τοποθετήθηκε στη θέση 0x41 ώστε να ταιριάζει με το προσχέδιο του αντίστοιχου Βρετανικού προτύπου. Τα ψηφία 0-9 διατάχθηκαν έτσι ώστε να αντιστοιχούν σε τιμές με ψηφιακό πρόθεμα 011, κάνοντας έτσι εύκολη την αποκωδικοποίηση στο δεκαδικό.
Πολλοί από τους μη αλφαριθμητικούς χαρακτήρες τοποθετήθηκαν έτσι ώστε να αντιστοιχούν με την αλλαγμένη (shifted) θέση της γραφομηχανής. Έτσι τα #, $ και % τοποθετήθηκαν ώστε να αντιστοιχούν στα 3, 4, και 5 στη διπλανή στήλη. Οι παρενθέσεις ωστόσο, δεν ήταν δυνατόν να αντιστοιχούν στο 9 και 0, καθώς η αντίστοιχη θέση του είχε καταληφθεί από τον χαρακτήρα κενού. Τελικώς επιλέχθηκαν οι θέσεις 8 και 9, καθώς πολλές ευρωπαϊκές γραφομηχανές είχαν εκεί τις παρενθέσεις. Το σύμβολο @ δεν χρησιμοποιούνταν στην ηπειρωτική Ευρώπη και έτσι η επιτροπή περίμενε ότι στη γαλλική εκδοχή θα αντικαθιστούνταν με το À, έτσι το @ τοποθετήθηκε στη θέση 0x40 δίπλα στο γράμμα A.Οι χαρακτήρες ελέγχου που θεωρήθηκε ότι ήταν θεμελιώδεις για την μετάδοση δεδομένων ήταν οι: αρχή μηνύματος (start of message, SOM), τέλος διεύθυνσης (end of address, EOA), τέλος μηνύματος (end of message, EOM), τέλος μετάδοσης (end of transmission, EOT), ποιος είσαι; (who are you?, WRU), είσαι; (are you?, RU), έλεγχος συσκευής (device control, DCO), σύγχρονα ανενεργό (synchronous idle, SYNC), αναγνώριση (acknowledge , ACK). Αυτοί τοποθετήθηκαν έτσι ώστε να μεγιστοποιηθεί η απόσταση Hamming μεταξύ των δυαδικών τους μοτίβων.Όταν συμπληρώθηκαν και οι άλλοι χαρακτήρες ελέγχου, ο ASCII δημοσιεύτηκε ως ASA X3.4-1963, έχοντας 28 θέσεις κωδικών κενές για μελλοντική τυποποίηση, και ένα κενό κωδικό χαρακτήρα ελέγχου. Υπήρχαν κάποιες διαφωνίες τότε για το αν θα πρέπει να υπάρχουν περισσότεροι χαρακτήρες ελέγχου αντί για το μικρογράμματο αλφάβητο. Η αναποφασιστικότητα δεν κράτησε πολύ: τον Μάιο του 1963 η Ομάδα Εργασίας CCITT στο Νέο Τηλεγραφικό Αλφάβητο (New Telegraph Alphabet) πρότεινε την τοποθέτηση των μικρογράμματων χαρακτήρων στις στήλες 6 και 7, και ο Διεθνής Οργανισμός Τυποποίησης TC 97 SC 2 ψήφισε υπέρ της ενσωμάτωσης της αλλαγής στο προσχέδιο του προτύπου του. Η ομάδα εργασίας X3.2.4 ψήφισε την αποδοχή της αλλαγής στον ASCII στη συνεδρίασή του Μαΐου 1963. Με την τοποθέτηση των μικρογράμματων χαρακτήρων στις στήλες 6 και 7, οι χαρακτήρες διέφεραν στο μοτίβο bit τους από τους κεφαλαιογράμματους μόνο κατά ένα bit, γεγονός που απλοποιούσε την ταύτιση χαρακτήρων χωρίς διάκριση κεφαλαίων-μικρών καθώς και την κατασκευή πληκτρολογίων και εκτυπωτών.
Η επιτροπή X3 έκανε άλλες αλλαγές, συμπεριλαμβάνοντας νέους χαρακτήρες (τους χαρακτήρες αγκύλης και κατακόρυφης γραμμής), μετονομάζοντας κάποιους χαρακτήρες (ο SOM έγινε αρχή κεφαλίδας (SOH)) μεκακινώντας ή αφαιρώντας άλλους (ο RU αφαιρέθηκε). Ο ASCII εν συνεχεία ενημερώθηκε ως USASI X3.4-1967, μετά USASI X3.4-1968, ANSI X3.4-1977, και τέλος, ANSI X3.4-1986 (οι πρώτοι δύο σποραδικά ονομάζονταν εκ των υστέρων ANSI X3.4-1967, και ANSI X3.4-1968).
Η επιτροπή X3 όρισε επίσης πως θα έπρεπε να μεταδίδεται ο ASCII (το λιγότερο σημαντικό bit (LSB) πρώτα), και πως θα έπρεπε να καταγράφεται σε διάτρητη ταινία. Πρότειναν ένα πρότυπο 9 τροχιών για μαγνητική ταινία και αποπειράθηκαν να λύσουν προβλήματα με κάποιους τύπους διάτρητων δελτίων.
Ο ASCII χρησιμοποιήθηκε πρώτη φορά εμπορικά το 1963 ως κωδικοποίηση 7 bit για το δίκτυο TWX (Teletype Wide-area eXchange) της American Telephone & Telegraph. Το TWX αρχικά χρησιμοποιούσε την παλαιότερη κωδικοποίηση Baudot 5-bit, η οποία χρησιμοποιούνταν και από το ανταγωνιστικό σύστημα τηλέτυπων Telex. Ο Μπομπ Μπέμερ εισήγαγε χαρακτηριστικά όπως η ακολουθία διαφυγής (escape sequence). Ο βρετανός συνάδελφός του Χιου Μακγκρέγκορ Ρος βοήθησε στην διάδοση αυτού του έργου, σύμφωνα με τον Μπέμερ «τόσο, ώστε αυτό που επρόκειτο να γίνει ο ASCII, αρχικά αποκαλούνταν στην Ευρώπη: Κώδικας Μπέμερ-Ρος». Εξαιτίας του εκτεταμένου έργου του στον ASCII, ο Μπέμερ αποκαλέστηκε ο «πατέρας του ASCII».Στις 11 Μαρτίου 1968, ο πρόεδρος των ΗΠΑ Λίντον Τζόνσον έδωσε εντολή όλοι οι υπολογιστές που αγοράζονταν από την ομοσπονδιακή κυβέρνηση των ΗΠΑ να υποστηρίζουν τον ASCII.Άλλα διεθνή σώματα τυποποίησης επικύρωσαν κωδικοποιήσεις χαρακτήρων όπως ο ISO/IEC 646 που είναι ταυτόσημοι ή σχεδόν ταυτόσημοι με τον ASCII, με επεκτάσεις για χαρακτήρες που δεν υπάρχουν στο αγγλικό αλφάβητο και σύμβολα που δεν χρησιμοποιούνται στις Ηνωμένες Πολιτείες, όπως το σύμβολο για την στερλίνα του Ηνωμένου Βασιλείου (£). Σχεδόν κάθε χώρα χρειάζονταν μία προσαρμοσμένη εκδοχή του ASCII καθώς ο ASCII ήταν κατάλληλος μόνο για τις ανάγκες των ΗΠΑ και ελάχιστων άλλων χωρών. Για παράδειγμα ο Καναδάς είχε δική του εκδοχή που υποστήριζε γαλλικούς χαρακτήρες. Άλλες προσαρμοσμένες εκδοχές περιλαμβάνουν τους ISCII (Ινδία), VISCII (Βιετνάμ), και YUSCII (Γιουγκοσλαβία). Παρότι και αυτές οι κωδικοποιήσεις αναφέρονται κάποιες φορές ως ASCII, ο πραγματικός ASCII καθορίζεται αυστηρά μόνο από το πρότυπο της ANSI.
Ο ASCII ενσωματώθηκε στο σύνολο χαρακτήρων της Unicode ως τα πρώτα 128 σύμβολα, έτσι οι χαρακτήρες του ASCII έχουν τις ίδιες αριθμητικές τιμές και στα δύο σύνολα. Αυτό επιτρέπει στην UTF-8 να είναι προς τα πίσω συμβατή με τον ASCII.


== Χαρακτήρες ελέγχου ==
Οι πρώτοι 32 κωδικοί (0-31 στο δεκαδικό) στον ASCII είναι δεσμευμένοι για χαρακτήρες ελέγχου, κωδικοί που αρχικά δεν προορίζονταν για την αναπαράσταση εκτυπώσιμων πληροφοριών αλλά για τον έλεγχο συσκευών (όπως οι εκτυπωτές) που χρησιμοποιούν ASCII, ή για να παρέχουν μετα-πληροφορίες για την ροή δεδομένων όπως αυτά που αποθηκεύονται σε μαγνητική ταινία. Για παράδειγμα ο χαρακτήρας 10 αναπαριστά την λειτουργία «τροφοδοσίας γραμμής» (η οποία δίνει εντολή στον εκτυπωτή να προχωρήσει το χαρτί), και ο χαρακτήρας 8 αναπαριστά το backspace.
Το αρχικό πρότυπο ASCII χρησιμοποιούσε μόνο σύντομες περιγραφικές φράσεις για κάθε χαρακτήρα ελέγχου. Η αμφισημία που προέκυπτε ήταν κάποιες φορές εσκεμμένη (όπου ένας χαρακτήρας επρόκειτο να χρησιμοποιηθεί ελαφρώς διαφορετικά σε ένα τερματικό σύνδεσμο από ότι σε μία ροή δεδομένων) και κάποιες φορές τυχαία (όπως για παράδειγμα η σημασία του «delete»).
Η συσκευή που πιθανώς επηρέασε την ερμηνεία αυτών των χαρακτήρων περισσότερο ήταν η σειρά τηλέτυπων ASR-33, το οποίο ήταν τερματικό εκτύπωσης με δυνατότητα ανάγνωσης και διάτρησης χαρτοταινίας. Η χαρτοταινία ήταν πολύ δημοφιλές μέσο για μακροπρόθεσμη αποθήκευση προγραμμάτων την δεκαετία του 1980, καθώς ήταν φτηνότερη και λιγότερο ευάλωτη από την μαγνητοταινία. Πιο συγκεκριμένα, οι ρυθμίσεις της συσκευής Teletype 33 για τους κωδικούς 17 (Control-Q, DC1, γνωστό και ως XON), 19 (Control-S, DC3, γνωστό και ως XOFF), και 127 (Delete) έγιναν ντε φάκτο πρότυπο. 
Ο κωδικός 127 ονομάζεται επίσημα «delete» (διαγραφή) αλλά στην Teletype ονομάζονταν «rubout» (σβήσε). Καθώς το πρωτότυπο πρότυπο δεν έδινε λεπτομερή ερμηνεία για τους περισσότερους κωδικούς ελέγχου, οι ερμηνείες αυτού του κωδικού ποίκιλαν. Η αρχική σημασία στην Teletype αλλά και η πρόθεση του προτύπου ήταν να είναι χαρακτήρας αγνόησης, όπως και ο χαρακτήρας NUL (όλα μηδενικά). Αυτό ήταν ιδιαίτερα χρήσιμο για χαρτοταινίες, επειδή η διάτρηση του μοτίβου με όλα τα bit μονάδες πάνω από ένα υπάρχον σημάδι το εξαφάνιζε. Οι ταινίες που επρόκειτο να επεξεργαστούν με το χέρι παράγονταν και με έξτρα χαρακτήρες NUL έτσι ώστε ένας χαρακτήρας να μπορεί να σβηστεί και να μπει η αντικατάστασή του στον κενό χώρο.
Καθώς οι οθόνες άρχισαν να αντικαθιστούν τα τερματικά εκτύπωσης η αξία του χαρακτήρα «rubout» χάθηκε. Τα συστήματα DEC, για παράδειγμα, ερμήνευσαν το «Delete» ώστε να σημαίνει «αφαίρεσε τον χαρακτήρα πριν από τον δρομέα» και αυτή η ερμηνεία έγινε κοινή στα συστήματα Unix. Τα περισσότερα άλλα συστήματα χρησιμοποιούσαν το «Backspace» για αυτή την δουλειά και χρησιμοποιούσαν το «delete» με την έννοια «αφαίρεσε τον χαρακτήρα που βρίσκεται στον δρομέα». Η τελευταία ερμηνεία είναι η πλέον κοινή τώρα.
Πολλοί περισσότεροι από τους κωδικούς ελέγχου πήρες σημασία αρκετά διαφορετική από την αρχική που προβλέπονταν. Ο χαρακτήρας διαφυγής (escape, κωδικός 27), για παράδειγμα, είχε σκοπό αρχικά να επιτρέπει την μετάδοση των χαρακτήρων ελέγχου με το κυριολεκτικό τους νόημα αντί να κληθεί η λειτουργία τους. Αυτή είναι η ίδια σημασία με την διαφυγή στις κωδικοποιήσεις URL, στις συμβολοσειρές της γλώσσας προγραμματισμού C, και σε άλλα συστήματα όπου κάποιοι χαρακτήρες έχουν δεσμευμένη σημασία. Σταδιακά δόθηκε νέα σημασία η οποία τελικά επικράτησε. Πλέον η αποστολή ενός ESC συνήθως υποδηλώνει την αρχή μιας αλληλουχίας εντολών, συνήθως με την μορφή του αποκαλούμενου «κωδικού διαφυγής ANSI» (ANSI escape code, ή πιο σωστά «Εισαγωγέας Αλληλουχίας Ελέγχου», Control Sequence Introducer) που ξεκινά με το ESC ακολουθούμενο από ένα χαρακτήρα αριστερής αγκύλης «[». Ένα ESC που στέλνεται από το τερματικό πιο συχνά χρησιμοποιείται ως χαρακτήρας εκτός ζώνης (out of band) που χρησιμοποιείται για τον τερματισμό μιας λειτουργίας, όπως στους επεξεργαστές κειμένου TECO και vi. Σε γραφικό περιβάλλον χρήστη(GUI) ή συστήματα παραθύρων, το ESC συνήθως προκαλεί τον τερματισμό της τρέχουσας λειτουργίας της εφαρμογής ή και τον τερματισμό της ίδιας της εφαρμογής.
Η εγγενής αμφισημία πολλών χαρακτήρων ελέγχου, σε συνδυασμό με την ιστορική τους χρήση, δημιούργησαν προβλήματα όταν μεταφέρονταν απλό κείμενο μεταξύ διαφορετικών συστημάτων. Το καλύτερο παράδειγμα για αυτό είναι το πρόβλημα με την νέα γραμμή (newline) σε διάφορα λειτουργικά συστήματα. Τα τηλέτυπα απαιτούσαν να δηλώνεται το τέλος της γραμμή και με «επιστροφή φορέα» και με «τροφοδοσία γραμμής». Το πρώτο επιστρέφει τον φορέα εκτύπωσης στην αρχή της γραμμής και το δεύτερο προωθεί την δεύτερη γραμμή χωρίς να επηρεάζει τον φορέα. Ωστόσο, η ανάγκη να σημειώνεται το τέλος γραμμής με δύο χαρακτήρες εισήγαγε μη αναγκαία πολυπλοκότητα και ερωτήματα ως προς το πως να ερμηνεύεται κάθε χαρακτήρας όταν εμφανιζόταν μόνος του. Για να απλοποιηθεί το ζήτημα, αρχεία απλού κειμένου στα συστήματα Unix και Amiga χρησιμοποιούσαν μόνο τροφοδοσία γραμμής για την αλλαγή γραμμής. Παρομοίως παλιότερα συστήματα Macintosh μεταξύ άλλων, χρησιμοποιούσαν μόνο επιστροφή φορέα. Διάφορα λειτουργικά συστήματα της IBM χρησιμοποιούσαν και τους δύο χαρακτήρες για το τέλος της γραμμής, πιθανώς για συμβατότητα με τα τηλέτυπα. Αυτό το ντε φάκτο πρότυπο αντιγράφηκε και στο CP/M και μετά στο MS-DOS και τελικώς στα Microsoft Windows. Η μετάδοση κειμένου στο Διαδίκτυο, για πρωτόκολλα (UHU) όπως το E-mail και το World Wide Web, χρησιμοποιεί και τους δύο χαρακτήρες.
Κάποια λειτουργικά συστήματα όπως τα προ-VMS λειτουργικά συστήματα DEC μαζί με το CP/M, κατέγραφαν το μήκος αρχείων μόνο σε μονάδες μπλοκ δίσκου και χρησιμοποιούσαν το Control-Z (SUB) για να σημειώσουν το πραγματικό τέλος του κειμένου σε ένα αρχείο. Για αυτό τον λόγο χρησιμοποιούνταν ως ακρωνύμιο το EOF (end of file, τέλος αρχείου) για το Control-Z αντί για SUB. Για διάφορους λόγους το τέλος κειμένου (EXT, end of text) ή Control-C ενώ η χρήση του Z ώς κωδικού ελέγχου καθώς είναι και το τελευταίο γράμμα του αλφαβήτου ήταν πολύ βολικό. Συμβολοσειρές κειμένου που τελειώνουν με τον μηδενικό χαρακτήρα (null character) είναι γνωστοί ως ASCIZ, ASCIIZ ή C strings


== Εκτυπώσιμοι χαρακτήρες ==
Οι κωδικοί 0x21 έως 0x7E, γνωστοί ως εκτυπώσιμοι χαρακτήρες, αναπαριστούν γράμματα, αριθμούς, σημεία στίξης και μερικά άλλα σύμβολα.
Ο κωδικός 0x20, ο χαρακτήρας κενού, αναπαριστά το κενό μεταξύ λέξεων, όπως παράγεται από το πάτημα του πλήκτρου space-bar ενός τυπικού πληκτρολογίου. Καθώς ο χαρακτήρας κενού θεωρείται αόρατο γραφικό παρά χαρακτήρας ελέγχου και έτσι εν γένει δεν είναι ορατός, αναπαρίσταται από τον Unicode χαρακτήρα U+2420 «␠». Χρησιμοποιούνται επίσης και οι Unicode χαρακτήρες U+2422 "␢" ή U+2423 "␣" όταν είναι αναγκαία η οπτική αναπαράσταση του κενού.
Ο κωδικός 0x7F αντιστοιχεί στον μη εκτυπώσιμο χαρακτήρα «Delete» (DEL) και έτσι παραλείπεται από το διάγραμμα καθώς καλύπτεται στο προηγούμενο διάγραμμα.


== Άλλες ονομασίες ==
Ένα RFC του 1992 και η καταχώριση συνόλων χαρακτήρων της IANA (Internet Assigned Numbers Authority) αναγνωρίζουν τις ακόλουθες ονομασίες για τον ASCII ως άλλες ονομασίες κατάλληλες για χρήση στο Διαδίκτυο:
Από αυτά η IANA ενθαρρύνει την χρήση του ονόματος «US-ASCII» στο Διαδίκτυο. Βρίσκει κανείς αυτή την ονομασία στην προαιρετική παράμετρο «charset» στις κεφαλίδες κάποιων μηνυμάτων MIME, στο αντίστοιχο μετα-στοιχείο κάποιων εγγράφων HTML, και στο τμήμα του προλόγου όπου γίνεται η δήλωση της κωδικοποίησης σε κάποια έγγραφα XML.


== Παραλλαγές ==
Καθώς η τεχνολογία των υπολογιστών διαδόθηκε σε όλο τον κόσμο, διάφορα σώματα τυποποίησης και εταιρείες ανέπτυξαν ποικιλίες του ASCII ώστε να εκφραστούν γλώσσες που χρησιμοποιούν το λατινικό αλφάβητο. Κάποιες μπορούν να ταξινομηθούν ως επεκτάσεις του ASCII, αν και ο όρος κάποιες φορές χρησιμοποιείται κακώς περιλαμβάνοντας όλες τις ποικιλίες, περιλαμβάνοντας αυτές που δεν διατηρούν τον χάρτη χαρακτήρων του ASCII στο εύρος των 7-bit.
Η κωδικοποίηση PETSCII που χρησιμοποίησε η Commodore International για τα 8-bit συστήματά της είναι πιθανώς μοναδική ανάμεσα στις μετά το 1970 κωδικοποιήσεις καθώς βασίζεται στον ASCII-1963 αντί για τον πιο κοινό ASCII-1967, όπως για παράδειγμα οι κωδικοποιήσεις του ZX Spectrum. Τα συστήματα Atari και Galaksija χρησιμοποιούσαν επίσης ποικιλίες του ASCII.


=== Ασυμβατότητα και διασυμβατότητα ===
Από την αρχή της ανάπτυξης του ASCII, υπήρχε η πρόθεση να είναι απλώς μία από αρκετές εθνικές παραλλαγές ενός διεθνούς προτύπου κωδικοποίησης χαρακτήρων, που τελικώς δημοσιεύτηκε ως ISO/IEC 646 (1972), το οποίο θα είχε κοινούς τους περισσότερους χαρακτήρες αλλά διαφορετικούς χρήσιμους τοπικά χαρακτήρες σε δεσμευμένες για εθνική χρήση θέσεις. Ωστόσο στα τέσσερα χρόνια που πέρασαν από την δημοσίευση του ASCII-1963 και την πρώτη αποδοχή του ISO ως διεθνή πρόταση το 1967 ήταν η αιτία η επιλογές του ASCII για την εθνική χρήση χαρακτήρων να μοιάζουν με ντε φάκτο πρότυπο για τον κόσμο, προκαλώντας σύγχυση και ασυμβατότητα όταν οι άλλες χώρες ξεκίνησαν να θέτουν δικούς τους χαρακτήρες σε αυτά τα σημεία.
Ο ISO/IEC 646 όπως και ο ASCII είναι σύνολο χαρακτήρων 7-bit. Δεν διέθετε έτσι επιπλέον θέσεις, έτσι στις ίδιες θέσεις κωδικοποιήθηκαν διαφορετικοί χαρακτήρες σε διαφορετικές χώρες. Ορίστηκαν κωδικοί διαφυγής για να υποδεικνύουν ποια εθνική παραλλαγή εφαρμόστηκε σε ένα κομμάτι κειμένου, αλλά χρησιμοποιούνταν σπάνια, έτσι ήταν συχνά αδύνατο να γνωρίζει κανείς σε ποια παραλλαγή έπρεπε να δουλέψει και συνεπώς ποιους χαρακτήρες αναπαριστούσε ένας κωδικός, ενώ τα συστήματα επεξεργασίας κειμένου δεν μπορούσαν εν γένει να εργαστούν με πάνω από μία παραλλαγή. 
Επειδή οι χαρακτήρες για τις αγκύλες στον ASCII είχαν τοποθετηθεί στις θέσεις εθνικής χρήσης, που χρησιμοποιούνταν για γράμματα με διακριτικά στις εθνικές παραλλαγές του ISO/IEC 646, ένας Γερμανός, Γάλλος ή Σουηδός κτλ., προγραμματιστής χρησιμοποιώντας την εθνική παραλλαγή του ISO/IEC 646 αντί του ASCII έπρεπε να γράφει και συνεπώς να διαβάζει κάτι σαν:

ä aÄiÜ='Ön'; üαντί για:

{ a[i]='\n'; }Έτσι δημιουργήθηκαν τριγράμματοι κωδικοί για την C ώστε να λυθεί αυτό το πρόβλημα για την ANSI C, αν και η καθυστερημένη εισαγωγή τους και η ασυνεπής εφαρμογή τους στους μεταγλωττιστές περιόρισαν την χρήση τους. 
Τελικά, καθώς οι υπολογιστές 18 και 32 bit άρχισαν να αντικαθίστανται από 8, 16 και 32 bit, διαδόθηκε η χρήση των 8-bit για την αποθήκευση κάθε χαρακτήρα στην μνήμη, δίνοντας έτσι τη δυνατότητα για εκτεταμένες παραλλαγές 8-bit του ASCII, όπου οι 128 επιπλέον χαρακτήρες παρείχαν χώρο για την αποφυγή του μεγαλύτερου μέρους της αμφισημίας που ήταν απαραίτητη στις κωδικοποιήσεις 7-bit.
Για παράδειγμα, η IBM ανέπτυξε κωδικοσελίδες 8-bit, όπως η κωδικοσελίδα 437, στις οποίες αντικατέστησε τους χαρακτήρες ελέγχου με γραφικά σύμβολα, όπως οι φατσούλες, και προσέθεσε επιπλέον χαρακτήρες στις τελευταίες 128 θέσεις. Λειτουργικά συστήματα όπως το DOS υποστήριζαν αυτές τις κωδικοσελίδες, και οι κατασκευαστές των IBM PC τους υποστήριζαν στο υλικό. Η Digital Equipment Corporation ανέπτυξε το Multinational Character Set (DEC-MCS) για χρήση στο δημοφιλές τερματικός της VT220.
Πρότυπα οκτώ bit όπως το ISO/IEC 8859 (προέκυψε από το DEC-MCS) και το Mac OS Roman αναπτύχθηκαν ως πραγματικές επεκτάσεις του ASCII, αφήνοντας την αρχική διάταξη χαρακτήρων ανέπαφη, προσθέτοντας όμως επιπλέον ορισμούς χαρακτήρων μετά τους πρώτους 128. Αυτό επέτρεψε την αναπαράσταση χαρακτήρων που χρησιμοποιούνταν από μεγαλύτερο φάσμα γλωσσών. Επειδή υπήρξαν πολλά ανταγωνιστικά πρότυπα 8-bit, εξακολούθησαν να υπάρχουν ασυμβατότητες και περιορισμοί. Σήμερα ακόμα, η ISO-8859-1 (Latin 1), η παραλλαγή του, Windows-1252 (που συχνά χαρακτηρίζεται εσφαλμένα ως ISO-8859-1), και η πρωτότυπη 7-bit ASCII παραμένουν οι πιο κοινές κωδικοποιήσεις.


== Unicode ==
Το Unicode και το ISO/IEC 10646 Universal Character Set (UCS) έχουν πολύ ευρύτερο μητρώο χαρακτήρων, και οι διάφορες μορφές κωδικοποίησής τους άρχισαν να εκτοπίζουν το ISO/IEC 8859 και το ASCII ταχύτατα σε πολλά περιβάλλοντα. Ενώ ο ASCII περιορίζεται σε 128 χαρακτήρες, το Unicode και το UCS υποστηρίζουν πολύ περισσότερους διαχωρίζοντας τις έννοιες της μοναδικής ταυτοποίησης (χρησιμοποιώντας φυσικούς αριθμούς που αποκαλούνται κωδικά σημεία, code points) και της κωδικοποίησης (σε δυαδικές μορφές 8, 16 ή 32 bit, που ονομάζονται UTF-8, UTF-16 και UTF-32).
Για να είναι δυνατή η προς τα πίσω συμβατότητα, οι 128 χαρακτήρες του ASCII και οι 256 του ISO-8859-1 (Latin 1) έχουν τοποθετηθεί στα ίδια κωδικά σημεία της κωδικοποίησης Unicode/UCS. συνεπώς ο ASCII μπορεί να θεωρηθεί διάταξη 7-bit για ένα πολύ μικρό υποσύνολο της Unicode/UCS και αντίστοιχα οι μορφές κωδικοποίησης UTF- είναι δυαδικά συμβατές με τον ASCII για κωδικά σημεία κάτω από το 128, που σημαίνει ότι όλος ο ASCII είναι έγκυρος εντός του UTF-8. Οι άλλες μορφές κωδικοποίησης αναπαριστούν τον ASCII με τον τρόπο που αναπαριστούν τους πρώτους 128 χαρακτήρες του Unicode, αλλά χρησιμοποιούν 16 ή 32 bit ανά χαρακτήρα και έτσι απαιτούν μετατροπή για να είναι συμβατές.


== Ταξινόμηση ==
Η ταξινόμηση σύμφωνα με την σειρά τον χαρακτήρων όπως αυτοί βρίσκονται στον ASCII ονομάζεται στα αγγλικά ASCIIbetical order. Η ταξινόμηση δεδομένων γίνεται συχνά με αυτό τον τρόπο αντί για την τυπική αλφαβητική σειρά. Οι κύριες αποκλίσεις από την σειρά στο ASCII είναι:

Όλοι οι κεφαλαιογράμματοι χαρακτήρες είναι πριν από τους μικρογράμματους, π.χ. Το «Z» είναι από πριν το «a»
Τα ψηφία και πολλά σημεία στίξης βρίσκονται πριν από τα γράμματα, π.χ. το «4» είναι πριν το «one»Ένα ενδιάμεσο σύστημα ταξινόμησης που μπορεί εύκολα να προγραμματιστεί σε υπολογιστή είναι η μετατροπή όλων των κεφαλαίων σε μικρά πριν την σύγκριση των αξιών κατά ASCII.


== Παραπομπές ==


== Περαιτέρω ανάγνωση ==
R.W. Bemer, "A Proposal for Character Code Compatibility," Communications of the ACM, Vol. 3. No. 2, February, 1960, pp. 71–72
R.W. Bemer, "The Babel of Codes Prior to ASCII: The 1960 Survey of Coded Character Sets: The Reasons for ASCII", May 23, 2003 (from H.J. Smith, Jr., F.A. Williams, "Survey of punched card codes", Communications of the ACM 3, 639 & 642, December 1960)
G.S. Robinson & C. Cargill (October 1996). «History and impact of computer standards». Computer Vol. 29, no. 10:  σελ. 79–85. 
American National Standards Institute·  και άλλοι. (1977). American National Standard Code for Information Interchange. The Institute. 
Charles E. Mackenzie (1980). Coded Character Sets, History and Development. Addison-Wesley. ISBN 0-201-14460-3. 


== Δείτε επίσης ==
Unicode
UTF-8


== Εξωτερικοί σύνδεσμοι ==
A history of ASCII, its roots and predecessors (Ιστορία του ASCII, οι ρίζες του και οι πρόδρομοί του) του Tom Jennings (29 Οκτωβρίου, 2004)
Το υποσύνολο ASCII του Unicode
Η εξέλιξη των Κωδικών Χαρακτήρων, 1874–1968
Σκαναρισμένο αντίγραφο του προτύπου X3.4-1963 της American Standard Code for Information Interchange ASA