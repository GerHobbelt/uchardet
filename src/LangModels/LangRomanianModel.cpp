/* -*- Mode: C++; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */
/* ***** BEGIN LICENSE BLOCK *****
 * Version: MPL 1.1/GPL 2.0/LGPL 2.1
 *
 * The contents of this file are subject to the Mozilla Public License Version
 * 1.1 (the "License"); you may not use this file except in compliance with
 * the License. You may obtain a copy of the License at
 * http://www.mozilla.org/MPL/
 *
 * Software distributed under the License is distributed on an "AS IS" basis,
 * WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
 * for the specific language governing rights and limitations under the
 * License.
 *
 * The Original Code is Mozilla Communicator client code.
 *
 * The Initial Developer of the Original Code is
 * Netscape Communications Corporation.
 * Portions created by the Initial Developer are Copyright (C) 1998
 * the Initial Developer. All Rights Reserved.
 *
 * Contributor(s):
 *
 * Alternatively, the contents of this file may be used under the terms of
 * either the GNU General Public License Version 2 or later (the "GPL"), or
 * the GNU Lesser General Public License Version 2.1 or later (the "LGPL"),
 * in which case the provisions of the GPL or the LGPL are applicable instead
 * of those above. If you wish to allow use of your version of this file only
 * under the terms of either the GPL or the LGPL, and not to allow others to
 * use your version of this file under the terms of the MPL, indicate your
 * decision by deleting the provisions above and replace them with the notice
 * and other provisions required by the GPL or the LGPL. If you do not delete
 * the provisions above, a recipient may use your version of this file under
 * the terms of any one of the MPL, the GPL or the LGPL.
 *
 * ***** END LICENSE BLOCK ***** */

#include "../nsSBCharSetProber.h"
#include "../nsSBCharSetProber-generated.h"
#include "../nsLanguageDetector.h"

#include "../nsLanguageDetector-generated.h"

/********* Language model for: Romanian *********/

/**
 * Generated by BuildLangModel.py
 * On: 2023-07-06 22:42:52.344894
 **/

/* Character Mapping Table:
 * ILL: illegal character.
 * CTR: control character specific to the charset.
 * RET: carriage/return.
 * SYM: symbol (punctuation) that does not belong to word.
 * NUM: 0 - 9.
 *
 * Other characters are ordered by probabilities
 * (0 is the most common character in the language).
 *
 * Orders are generic to a language. So the codepoint with order X in
 * CHARSET1 maps to the same character as the codepoint with the same
 * order X in CHARSET2 for the same language.
 * As such, it is possible to get missing order. For instance the
 * ligature of 'o' and 'e' exists in ISO-8859-15 but not in ISO-8859-1
 * even though they are both used for French. Same for the euro sign.
 */
static const unsigned char Iso_8859_2_CharToOrderMap[] =
{
  CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,RET,CTR,CTR,RET,CTR,CTR, /* 0X */
  CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR, /* 1X */
  SYM,SYM,SYM,SYM,SYM,SYM,SYM,SYM,SYM,SYM,SYM,SYM,SYM,SYM,SYM,SYM, /* 2X */
  NUM,NUM,NUM,NUM,NUM,NUM,NUM,NUM,NUM,NUM,SYM,SYM,SYM,SYM,SYM,SYM, /* 3X */
  SYM,  2, 16,  9, 11,  0, 15, 17, 23,  1, 25, 27,  7, 12,  4,  8, /* 4X */
   13, 30,  3, 10,  5,  6, 18, 29, 26, 28, 22,SYM,SYM,SYM,SYM,SYM, /* 5X */
  SYM,  2, 16,  9, 11,  0, 15, 17, 23,  1, 25, 27,  7, 12,  4,  8, /* 6X */
   13, 30,  3, 10,  5,  6, 18, 29, 26, 28, 22,SYM,SYM,SYM,SYM,CTR, /* 7X */
  CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR, /* 8X */
  CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR, /* 9X */
  SYM, 61,SYM, 47,SYM, 55, 63,SYM,SYM, 36, 60, 65, 53,SYM, 45, 70, /* AX */
  SYM, 61,SYM, 47,SYM, 55, 63,SYM,SYM, 36, 60, 65, 53,SYM, 45, 70, /* BX */
   75, 32, 24, 14, 38, 76, 39, 43, 40, 31, 74, 42, 64, 41, 20, 77, /* CX */
   48, 52, 73, 35, 49, 44, 34,SYM, 72, 71, 50, 66, 33, 59, 78, 56, /* DX */
   79, 32, 24, 14, 38, 80, 39, 43, 40, 31, 74, 42, 64, 41, 20, 81, /* EX */
   48, 52, 73, 35, 49, 44, 34,SYM, 72, 71, 50, 66, 33, 59, 82,SYM, /* FX */
};
/* X0  X1  X2  X3  X4  X5  X6  X7  X8  X9  XA  XB  XC  XD  XE  XF */

static const unsigned char Iso_8859_16_CharToOrderMap[] =
{
  CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,RET,CTR,CTR,RET,CTR,CTR, /* 0X */
  CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR, /* 1X */
  SYM,SYM,SYM,SYM,SYM,SYM,SYM,SYM,SYM,SYM,SYM,SYM,SYM,SYM,SYM,SYM, /* 2X */
  NUM,NUM,NUM,NUM,NUM,NUM,NUM,NUM,NUM,NUM,SYM,SYM,SYM,SYM,SYM,SYM, /* 3X */
  SYM,  2, 16,  9, 11,  0, 15, 17, 23,  1, 25, 27,  7, 12,  4,  8, /* 4X */
   13, 30,  3, 10,  5,  6, 18, 29, 26, 28, 22,SYM,SYM,SYM,SYM,SYM, /* 5X */
  SYM,  2, 16,  9, 11,  0, 15, 17, 23,  1, 25, 27,  7, 12,  4,  8, /* 6X */
   13, 30,  3, 10,  5,  6, 18, 29, 26, 28, 22,SYM,SYM,SYM,SYM,CTR, /* 7X */
  CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR, /* 8X */
  CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR, /* 9X */
  SYM, 61, 61, 47,SYM,SYM, 36,SYM, 36,SYM, 19,SYM, 53,SYM, 53, 70, /* AX */
  SYM,SYM, 40, 47, 45,SYM,SYM,SYM, 45, 40, 19,SYM, 69, 69, 83, 70, /* BX */
   46, 32, 24, 14, 38, 39, 58, 43, 37, 31, 51, 42, 68, 41, 20, 57, /* CX */
   48, 52, 54, 35, 49, 44, 34, 63, 66, 62, 50, 67, 33, 74, 21, 56, /* DX */
   46, 32, 24, 14, 38, 39, 58, 43, 37, 31, 51, 42, 68, 41, 20, 57, /* EX */
   48, 52, 54, 35, 49, 44, 34, 63, 66, 62, 50, 67, 33, 74, 21, 84, /* FX */
};
/* X0  X1  X2  X3  X4  X5  X6  X7  X8  X9  XA  XB  XC  XD  XE  XF */

static const unsigned char Windows_1250_CharToOrderMap[] =
{
  CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,RET,CTR,CTR,RET,CTR,CTR, /* 0X */
  CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR, /* 1X */
  SYM,SYM,SYM,SYM,SYM,SYM,SYM,SYM,SYM,SYM,SYM,SYM,SYM,SYM,SYM,SYM, /* 2X */
  NUM,NUM,NUM,NUM,NUM,NUM,NUM,NUM,NUM,NUM,SYM,SYM,SYM,SYM,SYM,SYM, /* 3X */
  SYM,  2, 16,  9, 11,  0, 15, 17, 23,  1, 25, 27,  7, 12,  4,  8, /* 4X */
   13, 30,  3, 10,  5,  6, 18, 29, 26, 28, 22,SYM,SYM,SYM,SYM,SYM, /* 5X */
  SYM,  2, 16,  9, 11,  0, 15, 17, 23,  1, 25, 27,  7, 12,  4,  8, /* 6X */
   13, 30,  3, 10,  5,  6, 18, 29, 26, 28, 22,SYM,SYM,SYM,SYM,CTR, /* 7X */
  SYM,ILL,SYM,ILL,SYM,SYM,SYM,SYM,ILL,SYM, 36,SYM, 63, 65, 45, 53, /* 8X */
  ILL,SYM,SYM,SYM,SYM,SYM,SYM,SYM,ILL,SYM, 36,SYM, 63, 65, 45, 53, /* 9X */
  SYM,SYM,SYM, 47,SYM, 61,SYM,SYM,SYM,SYM, 60,SYM,SYM,SYM,SYM, 70, /* AX */
  SYM,SYM,SYM, 47,SYM,SYM,SYM,SYM,SYM, 61, 60,SYM, 55,SYM, 55, 70, /* BX */
   85, 32, 24, 14, 38, 86, 39, 43, 40, 31, 74, 42, 64, 41, 20, 87, /* CX */
   48, 52, 73, 35, 49, 44, 34,SYM, 72, 71, 50, 66, 33, 59, 88, 56, /* DX */
   89, 32, 24, 14, 38, 90, 39, 43, 40, 31, 74, 42, 64, 41, 20, 91, /* EX */
   48, 52, 73, 35, 49, 44, 34,SYM, 72, 71, 50, 66, 33, 59, 92,SYM, /* FX */
};
/* X0  X1  X2  X3  X4  X5  X6  X7  X8  X9  XA  XB  XC  XD  XE  XF */

static const unsigned char Ibm852_CharToOrderMap[] =
{
  CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,RET,CTR,CTR,RET,CTR,CTR, /* 0X */
  CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR, /* 1X */
  SYM,SYM,SYM,SYM,SYM,SYM,SYM,SYM,SYM,SYM,SYM,SYM,SYM,SYM,SYM,SYM, /* 2X */
  NUM,NUM,NUM,NUM,NUM,NUM,NUM,NUM,NUM,NUM,SYM,SYM,SYM,SYM,SYM,SYM, /* 3X */
  SYM,  2, 16,  9, 11,  0, 15, 17, 23,  1, 25, 27,  7, 12,  4,  8, /* 4X */
   13, 30,  3, 10,  5,  6, 18, 29, 26, 28, 22,SYM,SYM,SYM,SYM,SYM, /* 5X */
  SYM,  2, 16,  9, 11,  0, 15, 17, 23,  1, 25, 27,  7, 12,  4,  8, /* 6X */
   13, 30,  3, 10,  5,  6, 18, 29, 26, 28, 22,SYM,SYM,SYM,SYM,CTR, /* 7X */
   43, 33, 31, 24, 38, 71, 39, 43, 47, 42, 44, 44, 20, 53, 38, 39, /* 8X */
   31, 93, 94, 49, 34, 55, 55, 63, 63, 34, 33, 65, 65, 47,SYM, 40, /* 9X */
   32, 41, 35, 50, 61, 61, 45, 45, 74, 74,SYM, 53, 40, 60,SYM,SYM, /* AX */
  SYM,SYM,SYM,SYM,SYM, 32, 24, 64, 60,SYM,SYM,SYM,SYM, 70, 70,SYM, /* BX */
  SYM,SYM,SYM,SYM,SYM,SYM, 14, 14,SYM,SYM,SYM,SYM,SYM,SYM,SYM,SYM, /* CX */
   48, 48, 95, 42, 96, 73, 41, 20, 64,SYM,SYM,SYM,SYM, 97, 71,SYM, /* DX */
   35, 56, 49, 52, 52, 73, 36, 36, 98, 50, 99, 66, 59, 59,100,SYM, /* EX */
  SYM,SYM,SYM,SYM,SYM,SYM,SYM,SYM,SYM,SYM,SYM, 66, 72, 72,SYM,SYM, /* FX */
};
/* X0  X1  X2  X3  X4  X5  X6  X7  X8  X9  XA  XB  XC  XD  XE  XF */

#define Unicode_Char_size    62

static const unsigned int Unicode_CharOrder[] =
{
  65,  2, 66, 16, 67,  9, 68, 11, 69,  0, 70, 15, 71, 17, 72, 23,
  73,  1, 74, 25, 75, 27, 76,  7, 77, 12, 78,  4, 79,  8, 80, 13,
  81, 30, 82,  3, 83, 10, 84,  5, 85,  6, 86, 18, 87, 29, 88, 26,
  89, 28, 90, 22, 97,  2, 98, 16, 99,  9, 100, 11, 101,  0, 102, 15,
  103, 17, 104, 23, 105,  1, 106, 25, 107, 27, 108,  7, 109, 12, 110,  4,
  111,  8, 112, 13, 113, 30, 114,  3, 115, 10, 116,  5, 117,  6, 118, 18,
  119, 29, 120, 26, 121, 28, 122, 22, 194, 24, 206, 20, 226, 24, 238, 20,
  258, 14, 259, 14, 536, 19, 537, 19, 538, 21, 539, 21,
};

static const float OrderToRatio[] =
{
  0.115128636,  0.115128636,  0.108086687,  0.108086687,  0.103110536,  0.103110536,  0.074540556,  0.074540556, 
  0.066621212,  0.066621212,  0.065164688,  0.065164688,  0.054728103,  0.054728103,  0.054373224,  0.054373224, 
  0.051048438,  0.051048438,  0.047448914,  0.047448914,  0.040469705,  0.040469705,  0.034188491,  0.034188491, 
  0.029070682,  0.029070682,  0.028464104,  0.028464104,  0.021161876,  0.021161876,  0.012818049,  0.012818049, 
  0.011653418,  0.011653418,  0.011083112,  0.011083112,  0.010893663,  0.010893663,  0.009831967,  0.009831967, 
  0.009646684,  0.009646684,  0.009382486,  0.009382486,  0.007546574,  0.007546574,  0.007310805,  0.007310805, 
  0.003810540,  0.003810540,  0.002488321,  0.002488321,  0.002470430,  0.002470430,  0.002441510,  0.002441510, 
  0.002154764,  0.002154764,  0.001754789,  0.001754789,  0.000207585,  0.000207585, 
};


/* Model Table:
 * Number of web pages processed for this model: 905
 * Number of characters consumed for this model: 4080262
 * Total considered sequences: 1485 / 961
 *
 * - Positive sequences: first 480 (0.9950004665264973)
 * - Probable sequences: next 282 (762-480) (0.004001861274647078)
 * - Neutral sequences: last 199 (0.0009976721988556037)
 * - Negative sequences: -524 (off-ratio, TODO)
 */


#define RomanianUnicodeAlphabetWidth         31
#define RomanianUnicodeCharToOrderIsReduced  0


#define RomanianFCMLowerBound  97
#define RomanianFCMUpperBound  539


static const PRUint8 RomanianUnicodeCharToOrder[] =
{
  3,17,10,12,1,16,18,24,2,26,28,8,13,5,9,14,31,4,11,6,
  7,19,30,27,29,23,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
  0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
  0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
  0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
  0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
  0,0,0,0,0,0,0,0,0,25,0,0,0,0,0,0,0,0,0,0,
  0,21,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
  0,0,15,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
  0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
  0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
  0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
  0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
  0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
  0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
  0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
  0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
  0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
  0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
  0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
  0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
  0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
  20,0,22,
};

static const PRUint8 RomanianCompactedLangModel[] =
{
  0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
  0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
  0,3,3,3,3,3,3,3,3,3,3,3,3,3,3,1,3,
  3,3,3,3,3,3,3,3,1,3,3,3,3,3,2,
  0,3,3,3,3,3,3,3,3,3,3,3,3,3,3,1,3,
  3,3,3,3,1,3,3,3,1,3,3,3,2,2,2,
  0,3,3,3,3,3,3,3,3,3,3,3,3,3,3,0,3,
  3,3,3,3,1,3,3,3,0,3,3,3,3,3,2,
  0,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,
  3,3,3,3,2,3,3,3,3,2,2,3,3,2,2,
  0,3,3,3,3,3,3,3,3,3,3,3,3,3,2,3,3,
  3,3,3,3,2,3,3,3,3,3,2,3,3,2,2,
  0,3,3,3,3,3,3,3,3,3,3,3,2,3,3,3,3,
  3,2,3,1,2,1,3,3,3,1,1,2,3,3,1,
  0,3,3,3,3,3,3,2,3,3,3,3,3,3,3,3,3,
  3,3,3,3,1,3,3,2,2,3,3,3,2,2,1,
  0,3,3,3,2,3,3,3,3,3,3,3,3,3,3,3,3,
  3,3,3,1,2,3,2,2,3,2,1,3,3,2,1,
  0,3,3,3,3,3,3,3,3,3,3,3,3,3,3,0,3,
  3,3,3,3,1,3,3,3,0,3,3,3,3,3,1,
  0,3,3,3,3,3,3,3,3,3,3,3,3,3,2,3,2,
  2,2,3,2,2,3,2,3,3,2,1,3,3,2,2,
  0,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,
  3,2,2,0,2,3,3,3,3,1,1,3,3,3,2,
  0,3,3,3,3,3,2,3,3,3,2,3,3,3,2,3,3,
  2,3,3,0,1,0,2,2,3,3,1,1,3,3,1,
  0,3,3,3,2,3,2,3,2,3,2,3,2,3,3,3,2,
  3,2,3,1,2,2,1,2,3,1,1,1,3,3,0,
  0,3,3,3,3,2,3,3,3,3,2,3,2,2,3,3,2,
  2,2,1,2,2,3,1,3,3,2,0,1,2,2,0,
  0,1,3,1,3,3,3,3,3,1,3,3,3,3,3,0,0,
  3,3,3,3,1,3,3,1,0,2,0,0,0,0,0,
  0,3,3,3,3,1,3,3,3,3,2,2,2,2,1,3,3,
  2,2,0,0,1,0,1,1,3,1,1,1,2,1,0,
  0,3,3,3,3,3,2,3,3,3,2,3,2,3,1,3,0,
  3,1,2,1,1,3,1,2,2,2,0,1,3,1,0,
  0,3,3,3,3,3,3,3,3,3,2,3,2,3,2,3,2,
  2,3,2,1,1,0,1,3,3,1,1,1,3,2,0,
  0,3,3,3,3,2,1,3,3,3,2,2,2,1,1,3,1,
  1,2,1,0,2,1,1,1,3,1,1,2,2,0,0,
  0,3,3,3,0,2,3,3,2,3,3,0,1,2,1,2,1,
  1,0,1,0,1,0,0,0,1,0,0,1,0,1,0,
  0,1,3,0,2,3,2,1,3,1,1,1,1,3,1,0,0,
  1,0,1,3,1,1,1,1,0,1,0,2,1,0,0,
  0,3,3,3,0,0,1,3,1,2,1,1,0,0,0,3,0,
  0,0,1,0,2,0,0,1,2,0,0,1,0,0,0,
  0,3,3,3,1,2,2,3,2,3,1,2,3,2,2,3,1,
  3,2,3,0,1,0,3,2,3,0,1,2,2,1,0,
  0,3,3,3,3,3,3,3,3,3,1,2,2,3,2,2,2,
  2,2,2,0,1,0,2,1,2,1,0,1,3,2,1,
  0,0,3,0,3,3,3,3,3,0,1,2,1,3,1,0,1,
  1,1,1,3,0,2,1,0,0,0,0,0,0,0,0,
  0,3,3,3,2,2,1,3,3,3,1,2,2,2,2,2,1,
  2,1,1,0,1,0,0,1,1,1,0,1,1,0,0,
  0,3,3,3,1,0,3,3,1,3,3,1,1,1,3,2,2,
  1,1,3,0,0,0,0,1,1,1,3,0,2,1,1,
  0,3,3,3,3,2,2,3,3,3,1,3,1,3,1,1,2,
  2,2,2,1,2,0,1,3,1,1,0,2,3,2,1,
  0,3,2,3,3,3,3,2,3,3,3,3,2,2,3,0,2,
  3,2,2,0,0,0,2,2,0,1,1,2,2,2,1,
  0,3,3,3,2,3,2,2,2,3,1,3,1,1,1,0,1,
  1,1,0,0,0,0,0,3,0,1,1,2,2,3,0,
  0,0,1,2,1,0,0,3,2,1,1,1,0,1,0,0,0,
  0,1,1,0,0,0,0,0,0,0,1,0,1,0,1,
};


const SequenceModel Iso_8859_2RomanianModel =
{
  Iso_8859_2_CharToOrderMap,
  RomanianFCMLowerBound,
  RomanianFCMUpperBound,
  RomanianUnicodeCharToOrder,
  RomanianCompactedLangModel,
  31,
  (float)0.9990023278011444,
  PR_TRUE,
  "ISO-8859-2",
  "ro"
};

const SequenceModel Iso_8859_16RomanianModel =
{
  Iso_8859_16_CharToOrderMap,
  RomanianFCMLowerBound,
  RomanianFCMUpperBound,
  RomanianUnicodeCharToOrder,
  RomanianCompactedLangModel,
  31,
  (float)0.9990023278011444,
  PR_TRUE,
  "ISO-8859-16",
  "ro"
};

const SequenceModel Windows_1250RomanianModel =
{
  Windows_1250_CharToOrderMap,
  RomanianFCMLowerBound,
  RomanianFCMUpperBound,
  RomanianUnicodeCharToOrder,
  RomanianCompactedLangModel,
  31,
  (float)0.9990023278011444,
  PR_TRUE,
  "WINDOWS-1250",
  "ro"
};

const SequenceModel Ibm852RomanianModel =
{
  Ibm852_CharToOrderMap,
  RomanianFCMLowerBound,
  RomanianFCMUpperBound,
  RomanianUnicodeCharToOrder,
  RomanianCompactedLangModel,
  31,
  (float)0.9990023278011444,
  PR_TRUE,
  "IBM852",
  "ro"
};

const LanguageModel RomanianModel =
{
  "ro",
  Unicode_CharOrder,
  62,
  RomanianFCMLowerBound,
  RomanianFCMUpperBound,
  RomanianUnicodeCharToOrderIsReduced,

  RomanianUnicodeCharToOrder,
  OrderToRatio,
  RomanianCompactedLangModel,
  31,
  4,
  (float)0.4008664149508046,
  21,
  (float)0.030185316531144323,
  (float)0.9991005479550088,
};
