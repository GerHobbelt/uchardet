/* -*- Mode: C++; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */
/* ***** BEGIN LICENSE BLOCK *****
 * Version: MPL 1.1/GPL 2.0/LGPL 2.1
 *
 * The contents of this file are subject to the Mozilla Public License Version
 * 1.1 (the "License"); you may not use this file except in compliance with
 * the License. You may obtain a copy of the License at
 * http://www.mozilla.org/MPL/
 *
 * Software distributed under the License is distributed on an "AS IS" basis,
 * WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
 * for the specific language governing rights and limitations under the
 * License.
 *
 * The Original Code is Mozilla Communicator client code.
 *
 * The Initial Developer of the Original Code is
 * Netscape Communications Corporation.
 * Portions created by the Initial Developer are Copyright (C) 1998
 * the Initial Developer. All Rights Reserved.
 *
 * Contributor(s):
 *
 * Alternatively, the contents of this file may be used under the terms of
 * either the GNU General Public License Version 2 or later (the "GPL"), or
 * the GNU Lesser General Public License Version 2.1 or later (the "LGPL"),
 * in which case the provisions of the GPL or the LGPL are applicable instead
 * of those above. If you wish to allow use of your version of this file only
 * under the terms of either the GPL or the LGPL, and not to allow others to
 * use your version of this file under the terms of the MPL, indicate your
 * decision by deleting the provisions above and replace them with the notice
 * and other provisions required by the GPL or the LGPL. If you do not delete
 * the provisions above, a recipient may use your version of this file under
 * the terms of any one of the MPL, the GPL or the LGPL.
 *
 * ***** END LICENSE BLOCK ***** */

#include "../nsSBCharSetProber.h"
#include "../nsSBCharSetProber-generated.h"
#include "../nsLanguageDetector.h"

#include "../nsLanguageDetector-generated.h"

/********* Language model for: Catalan *********/

/**
 * Generated by BuildLangModel.py
 * On: 2023-07-06 22:42:28.337858
 **/

/* Character Mapping Table:
 * ILL: illegal character.
 * CTR: control character specific to the charset.
 * RET: carriage/return.
 * SYM: symbol (punctuation) that does not belong to word.
 * NUM: 0 - 9.
 *
 * Other characters are ordered by probabilities
 * (0 is the most common character in the language).
 *
 * Orders are generic to a language. So the codepoint with order X in
 * CHARSET1 maps to the same character as the codepoint with the same
 * order X in CHARSET2 for the same language.
 * As such, it is possible to get missing order. For instance the
 * ligature of 'o' and 'e' exists in ISO-8859-15 but not in ISO-8859-1
 * even though they are both used for French. Same for the euro sign.
 */
static const unsigned char Iso_8859_1_CharToOrderMap[] =
{
  CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,RET,CTR,CTR,RET,CTR,CTR, /* 0X */
  CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR, /* 1X */
  SYM,SYM,SYM,SYM,SYM,SYM,SYM,SYM,SYM,SYM,SYM,SYM,SYM,SYM,SYM,SYM, /* 2X */
  NUM,NUM,NUM,NUM,NUM,NUM,NUM,NUM,NUM,NUM,SYM,SYM,SYM,SYM,SYM,SYM, /* 3X */
  SYM,  1, 15,  9, 10,  0, 18, 14, 17,  3, 24, 28,  6, 12,  5,  8, /* 4X */
   13, 19,  4,  2,  7, 11, 16, 31, 21, 20, 29,SYM,SYM,SYM,SYM,SYM, /* 5X */
  SYM,  1, 15,  9, 10,  0, 18, 14, 17,  3, 24, 28,  6, 12,  5,  8, /* 6X */
   13, 19,  4,  2,  7, 11, 16, 31, 21, 20, 29,SYM,SYM,SYM,SYM,CTR, /* 7X */
  CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR, /* 8X */
  CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR, /* 9X */
  SYM,SYM,SYM,SYM,SYM,SYM,SYM,SYM,SYM,SYM,SYM,SYM,SYM,SYM,SYM,SYM, /* AX */
  SYM,SYM,SYM,SYM,SYM, 58,SYM,SYM,SYM,SYM,SYM,SYM,SYM,SYM,SYM,SYM, /* BX */
   25, 36, 40, 38, 42, 50, 46, 32, 26, 23, 43, 47, 55, 27, 51, 34, /* CX */
   52, 37, 30, 22, 45, 48, 39,SYM, 49, 57, 33, 56, 35, 44, 59, 54, /* DX */
   25, 36, 40, 38, 42, 50, 46, 32, 26, 23, 43, 47, 55, 27, 51, 34, /* EX */
   52, 37, 30, 22, 45, 48, 39,SYM, 49, 57, 33, 56, 35, 44, 60, 61, /* FX */
};
/* X0  X1  X2  X3  X4  X5  X6  X7  X8  X9  XA  XB  XC  XD  XE  XF */

static const unsigned char Windows_1252_CharToOrderMap[] =
{
  CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,RET,CTR,CTR,RET,CTR,CTR, /* 0X */
  CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR, /* 1X */
  SYM,SYM,SYM,SYM,SYM,SYM,SYM,SYM,SYM,SYM,SYM,SYM,SYM,SYM,SYM,SYM, /* 2X */
  NUM,NUM,NUM,NUM,NUM,NUM,NUM,NUM,NUM,NUM,SYM,SYM,SYM,SYM,SYM,SYM, /* 3X */
  SYM,  1, 15,  9, 10,  0, 18, 14, 17,  3, 24, 28,  6, 12,  5,  8, /* 4X */
   13, 19,  4,  2,  7, 11, 16, 31, 21, 20, 29,SYM,SYM,SYM,SYM,SYM, /* 5X */
  SYM,  1, 15,  9, 10,  0, 18, 14, 17,  3, 24, 28,  6, 12,  5,  8, /* 6X */
   13, 19,  4,  2,  7, 11, 16, 31, 21, 20, 29,SYM,SYM,SYM,SYM,CTR, /* 7X */
  SYM,ILL,SYM, 62,SYM,SYM,SYM,SYM,SYM,SYM, 41,SYM, 63,ILL, 53,ILL, /* 8X */
  ILL,SYM,SYM,SYM,SYM,SYM,SYM,SYM,SYM,SYM, 41,SYM, 64,ILL, 53, 65, /* 9X */
  SYM,SYM,SYM,SYM,SYM,SYM,SYM,SYM,SYM,SYM,SYM,SYM,SYM,SYM,SYM,SYM, /* AX */
  SYM,SYM,SYM,SYM,SYM, 66,SYM,SYM,SYM,SYM,SYM,SYM,SYM,SYM,SYM,SYM, /* BX */
   25, 36, 40, 38, 42, 50, 46, 32, 26, 23, 43, 47, 55, 27, 51, 34, /* CX */
   52, 37, 30, 22, 45, 48, 39,SYM, 49, 57, 33, 56, 35, 44, 67, 54, /* DX */
   25, 36, 40, 38, 42, 50, 46, 32, 26, 23, 43, 47, 55, 27, 51, 34, /* EX */
   52, 37, 30, 22, 45, 48, 39,SYM, 49, 57, 33, 56, 35, 44, 68, 69, /* FX */
};
/* X0  X1  X2  X3  X4  X5  X6  X7  X8  X9  XA  XB  XC  XD  XE  XF */

#define Unicode_Char_size    72

static const unsigned int Unicode_CharOrder[] =
{
  65,  1, 66, 15, 67,  9, 68, 10, 69,  0, 70, 18, 71, 14, 72, 17,
  73,  3, 74, 24, 75, 28, 76,  6, 77, 12, 78,  5, 79,  8, 80, 13,
  81, 19, 82,  4, 83,  2, 84,  7, 85, 11, 86, 16, 87, 31, 88, 21,
  89, 20, 90, 29, 97,  1, 98, 15, 99,  9, 100, 10, 101,  0, 102, 18,
  103, 14, 104, 17, 105,  3, 106, 24, 107, 28, 108,  6, 109, 12, 110,  5,
  111,  8, 112, 13, 113, 19, 114,  4, 115,  2, 116,  7, 117, 11, 118, 16,
  119, 31, 120, 21, 121, 20, 122, 29, 192, 25, 199, 32, 200, 26, 201, 23,
  205, 27, 207, 34, 210, 30, 211, 22, 218, 33, 220, 35, 224, 25, 231, 32,
  232, 26, 233, 23, 237, 27, 239, 34, 242, 30, 243, 22, 250, 33, 252, 35,
};

static const float OrderToRatio[] =
{
  0.123957851,  0.123957851,  0.123124306,  0.123124306,  0.075912824,  0.075912824,  0.075438345,  0.075438345, 
  0.070286014,  0.070286014,  0.064416638,  0.064416638,  0.064174508,  0.064174508,  0.058324694,  0.058324694, 
  0.052836336,  0.052836336,  0.043252196,  0.043252196,  0.040394885,  0.040394885,  0.035641178,  0.035641178, 
  0.031344996,  0.031344996,  0.028721122,  0.028721122,  0.014649096,  0.014649096,  0.014571501,  0.014571501, 
  0.014457826,  0.014457826,  0.010712850,  0.010712850,  0.009742590,  0.009742590,  0.006749652,  0.006749652, 
  0.005680062,  0.005680062,  0.004561786,  0.004561786,  0.004249668,  0.004249668,  0.003787143,  0.003787143, 
  0.003291145,  0.003291145,  0.003079010,  0.003079010,  0.002870786,  0.002870786,  0.002722770,  0.002722770, 
  0.002649305,  0.002649305,  0.002009420,  0.002009420,  0.001855969,  0.001855969,  0.001742512,  0.001742512, 
  0.001035465,  0.001035465,  0.000729651,  0.000729651,  0.000471437,  0.000471437,  0.000251694,  0.000251694, 
};


/* Model Table:
 * Number of web pages processed for this model: 696
 * Number of characters consumed for this model: 4600830
 * Total considered sequences: 1330 / 1296
 *
 * - Positive sequences: first 559 (0.9950027158857442)
 * - Probable sequences: next 216 (775-559) (0.004003859573898039)
 * - Neutral sequences: last 521 (0.000993424540357779)
 * - Negative sequences: -34 (off-ratio, TODO)
 */


#define CatalanUnicodeAlphabetWidth         36
#define CatalanUnicodeCharToOrderIsReduced  0


#define CatalanFCMLowerBound  97
#define CatalanFCMUpperBound  252


static const PRUint8 CatalanUnicodeCharToOrder[] =
{
  2,16,10,11,1,19,15,18,4,25,29,7,13,6,9,14,20,5,3,8,
  12,17,32,22,21,30,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
  0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
  0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
  0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
  0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
  0,0,0,0,0,0,0,26,0,0,0,0,0,0,33,27,24,0,0,0,
  28,0,35,0,0,31,23,0,0,0,0,0,0,34,0,36,
};

static const PRUint8 CatalanCompactedLangModel[] =
{
  0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
  0,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,1,3,2,0,1,3,3,2,3,2,1,3,1,
  0,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,1,3,1,2,3,3,3,1,3,3,1,3,1,
  0,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,3,3,3,3,2,3,3,2,3,3,3,3,2,3,3,0,2,0,1,
  0,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,3,3,2,3,3,2,3,3,3,1,3,3,3,2,2,1,1,1,
  0,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,3,3,3,3,2,3,2,3,3,1,1,
  0,3,3,3,3,3,3,3,3,3,3,3,3,3,2,3,3,3,3,3,3,3,2,3,3,3,3,3,3,3,3,3,2,3,3,0,0,
  0,3,3,3,3,2,2,3,3,3,3,3,3,3,3,3,3,3,3,3,1,3,2,3,3,2,3,3,3,3,2,3,2,2,2,0,1,
  0,3,3,3,3,3,3,3,3,3,3,2,3,3,3,3,3,3,3,2,1,3,3,3,3,3,3,3,3,2,3,3,3,0,2,0,1,
  0,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,0,1,3,2,1,1,3,3,1,3,1,0,2,1,
  0,3,3,3,3,3,3,3,3,3,3,2,3,2,2,2,2,1,3,2,2,3,1,2,3,1,3,3,3,3,2,3,1,0,2,1,0,
  0,3,3,3,3,3,3,3,2,3,2,3,3,3,1,3,2,3,3,2,3,3,1,2,3,3,3,3,3,1,2,3,3,0,3,0,1,
  0,3,3,3,3,3,3,3,3,3,3,3,2,3,3,3,3,3,2,3,2,2,3,1,3,3,3,3,3,3,2,1,2,1,0,3,0,
  0,3,3,3,3,2,3,2,3,3,3,2,3,3,3,1,3,1,2,3,1,3,1,3,3,1,3,3,3,2,1,3,1,0,3,0,1,
  0,3,3,3,3,3,2,3,3,3,3,2,3,2,3,2,2,1,3,2,1,3,1,3,2,1,3,3,3,1,1,3,1,2,3,0,1,
  0,3,3,3,3,3,3,3,3,3,2,2,3,3,1,3,2,1,3,1,0,3,1,2,2,1,3,3,3,1,1,2,2,0,2,0,3,
  0,3,3,3,3,3,3,3,3,3,3,3,3,3,1,1,3,1,3,1,0,3,1,2,3,3,3,3,2,1,1,2,1,0,2,0,1,
  0,3,3,2,3,2,1,2,1,3,1,2,3,1,1,1,1,1,1,1,0,2,1,0,3,1,2,2,3,1,1,1,0,0,0,1,0,
  0,3,3,2,3,3,3,3,3,3,2,2,3,3,1,1,2,1,1,1,1,3,1,1,2,1,2,2,2,2,2,2,2,1,0,0,1,
  0,3,3,2,3,3,2,3,3,3,3,1,3,2,1,2,2,1,1,3,1,1,2,2,2,1,3,2,3,1,1,3,1,0,1,0,1,
  0,1,3,1,1,1,0,0,1,1,1,0,3,1,0,0,1,1,0,1,1,1,0,0,0,0,1,0,0,0,0,0,1,0,0,0,3,
  0,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,1,1,2,0,1,2,1,1,1,2,1,0,2,2,0,2,0,0,0,0,
  0,3,3,2,3,1,1,1,3,3,3,1,3,2,3,1,1,3,2,2,1,3,3,1,1,1,2,3,3,1,0,3,1,0,1,0,0,
  0,1,1,3,1,2,3,2,1,1,1,1,0,1,2,1,2,2,0,1,0,0,0,0,0,0,0,0,0,1,1,0,1,0,0,0,0,
  0,2,1,3,3,3,2,2,2,2,2,2,3,2,1,1,1,1,1,1,1,0,1,0,0,1,0,0,1,1,1,0,0,0,0,0,0,
  0,3,3,1,3,2,2,1,1,3,1,1,3,1,1,1,1,0,1,1,0,1,0,1,1,1,3,1,1,2,0,1,1,0,2,0,1,
  0,1,1,3,2,3,3,3,3,0,3,2,2,3,3,3,3,2,1,3,2,1,3,0,0,1,0,0,0,1,1,0,1,0,0,0,0,
  0,0,0,3,3,3,3,3,3,1,3,3,1,3,3,3,1,2,0,2,1,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
  0,1,3,3,2,3,3,3,3,3,3,3,0,3,2,3,2,2,1,3,2,0,1,0,0,1,0,0,0,2,1,0,0,0,0,0,0,
  0,3,3,3,3,3,2,3,2,3,1,1,3,3,1,2,2,1,3,1,1,3,1,2,2,1,1,1,2,2,1,1,2,1,1,0,1,
  0,3,3,1,3,1,2,2,1,3,1,1,3,1,1,1,1,1,2,1,1,2,1,2,2,1,2,1,0,1,3,2,1,0,1,0,1,
  0,1,0,3,1,3,3,3,3,0,3,2,0,3,3,3,3,1,0,3,2,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
  0,3,3,3,3,2,3,2,2,3,1,2,2,2,1,1,1,1,3,2,0,2,0,0,1,0,1,1,0,2,1,0,2,0,0,0,0,
  0,1,3,0,0,0,0,1,0,3,0,0,2,1,0,0,0,0,0,0,0,0,0,2,0,0,2,0,0,0,0,1,0,0,0,0,0,
  0,1,1,3,1,2,3,3,2,0,1,1,0,3,2,0,3,1,1,1,1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,0,0,
  0,2,2,3,1,1,3,2,3,0,2,3,1,1,0,1,1,0,0,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
  0,3,0,1,1,1,1,1,1,0,1,0,0,0,0,1,1,0,1,0,0,0,0,0,0,0,0,3,2,0,0,0,0,0,0,0,0,
};


const SequenceModel Iso_8859_1CatalanModel =
{
  Iso_8859_1_CharToOrderMap,
  CatalanFCMLowerBound,
  CatalanFCMUpperBound,
  CatalanUnicodeCharToOrder,
  CatalanCompactedLangModel,
  36,
  (float)0.9990065754596422,
  PR_TRUE,
  "ISO-8859-1",
  "ca"
};

const SequenceModel Windows_1252CatalanModel =
{
  Windows_1252_CharToOrderMap,
  CatalanFCMLowerBound,
  CatalanFCMUpperBound,
  CatalanUnicodeCharToOrder,
  CatalanCompactedLangModel,
  36,
  (float)0.9990065754596422,
  PR_TRUE,
  "WINDOWS-1252",
  "ca"
};

const LanguageModel CatalanModel =
{
  "ca",
  Unicode_CharOrder,
  72,
  CatalanFCMLowerBound,
  CatalanFCMUpperBound,
  CatalanUnicodeCharToOrderIsReduced,

  CatalanUnicodeCharToOrder,
  OrderToRatio,
  CatalanCompactedLangModel,
  36,
  5,
  (float)0.46871933977130215,
  21,
  (float)0.030745974095978335,
  (float)0.9996972285435456,
};
