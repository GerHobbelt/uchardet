/* -*- Mode: C++; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */
/* ***** BEGIN LICENSE BLOCK *****
 * Version: MPL 1.1/GPL 2.0/LGPL 2.1
 *
 * The contents of this file are subject to the Mozilla Public License Version
 * 1.1 (the "License"); you may not use this file except in compliance with
 * the License. You may obtain a copy of the License at
 * http://www.mozilla.org/MPL/
 *
 * Software distributed under the License is distributed on an "AS IS" basis,
 * WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
 * for the specific language governing rights and limitations under the
 * License.
 *
 * The Original Code is Mozilla Communicator client code.
 *
 * The Initial Developer of the Original Code is
 * Netscape Communications Corporation.
 * Portions created by the Initial Developer are Copyright (C) 1998
 * the Initial Developer. All Rights Reserved.
 *
 * Contributor(s):
 *
 * Alternatively, the contents of this file may be used under the terms of
 * either the GNU General Public License Version 2 or later (the "GPL"), or
 * the GNU Lesser General Public License Version 2.1 or later (the "LGPL"),
 * in which case the provisions of the GPL or the LGPL are applicable instead
 * of those above. If you wish to allow use of your version of this file only
 * under the terms of either the GPL or the LGPL, and not to allow others to
 * use your version of this file under the terms of the MPL, indicate your
 * decision by deleting the provisions above and replace them with the notice
 * and other provisions required by the GPL or the LGPL. If you do not delete
 * the provisions above, a recipient may use your version of this file under
 * the terms of any one of the MPL, the GPL or the LGPL.
 *
 * ***** END LICENSE BLOCK ***** */

#include "../nsSBCharSetProber.h"
#include "../nsSBCharSetProber-generated.h"
#include "../nsLanguageDetector.h"

#include "../nsLanguageDetector-generated.h"

/********* Language model for: Italian *********/

/**
 * Generated by BuildLangModel.py
 * On: 2023-07-08 23:28:33.770345
 **/

/* Character Mapping Table:
 * ILL: illegal character.
 * CTR: control character specific to the charset.
 * RET: carriage/return.
 * SYM: symbol (punctuation) that does not belong to word.
 * NUM: 0 - 9.
 * IRR: irrelevant character (which does belong to a word)
 *
 * Other characters are ordered by probabilities
 * (0 is the most common character in the language).
 *
 * Orders are generic to a language. So the codepoint with order X in
 * CHARSET1 maps to the same character as the codepoint with the same
 * order X in CHARSET2 for the same language.
 * As such, it is possible to get missing order. For instance the
 * ligature of 'o' and 'e' exists in ISO-8859-15 but not in ISO-8859-1
 * even though they are both used for French. Same for the euro sign.
 */



#define IRR                     (-1)

#define ItalianOrderWidth        36


static const unsigned char Iso_8859_1_CharToOrderMap[] =
{
  CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,RET,CTR,CTR,RET,CTR,CTR, /* 0X */
  CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR, /* 1X */
  SYM,SYM,SYM,SYM,SYM,SYM,SYM,SYM,SYM,SYM,SYM,SYM,SYM,SYM,SYM,SYM, /* 2X */
  NUM,NUM,NUM,NUM,NUM,NUM,NUM,NUM,NUM,NUM,SYM,SYM,SYM,SYM,SYM,SYM, /* 3X */
  SYM,  2, 18,  9, 10,  0, 16, 14, 17,  1, 26, 23,  6, 12,  4,  3, /* 4X */
   13, 21,  7,  8,  5, 11, 15, 22, 28, 20, 19,SYM,SYM,SYM,SYM,SYM, /* 5X */
  SYM,  2, 18,  9, 10,  0, 16, 14, 17,  1, 26, 23,  6, 12,  4,  3, /* 6X */
   13, 21,  7,  8,  5, 11, 15, 22, 28, 20, 19,SYM,SYM,SYM,SYM,CTR, /* 7X */
  CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR, /* 8X */
  CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR, /* 9X */
  SYM,SYM,SYM,SYM,SYM,SYM,SYM,SYM,SYM,SYM,SYM,SYM,SYM,SYM,SYM,SYM, /* AX */
  SYM,SYM,SYM,SYM,SYM,249,SYM,SYM,SYM,SYM,SYM,SYM,SYM,SYM,SYM,SYM, /* BX */
   25, 33,249,249,249,249,249,249, 24, 30,249,249, 31,249,249,249, /* CX */
  249,249, 27, 35,249,249, 32,SYM,249, 29,249,249, 34,249,249,249, /* DX */
   25, 33,249,249,249,249,249,249, 24, 30,249,249, 31,249,249,249, /* EX */
  249,249, 27, 35,249,249, 32,SYM,249, 29,249,249, 34,249,249,249, /* FX */
};
/* X0  X1  X2  X3  X4  X5  X6  X7  X8  X9  XA  XB  XC  XD  XE  XF */

static const unsigned char Iso_8859_3_CharToOrderMap[] =
{
  CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,RET,CTR,CTR,RET,CTR,CTR, /* 0X */
  CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR, /* 1X */
  SYM,SYM,SYM,SYM,SYM,SYM,SYM,SYM,SYM,SYM,SYM,SYM,SYM,SYM,SYM,SYM, /* 2X */
  NUM,NUM,NUM,NUM,NUM,NUM,NUM,NUM,NUM,NUM,SYM,SYM,SYM,SYM,SYM,SYM, /* 3X */
  SYM,  2, 18,  9, 10,  0, 16, 14, 17,  1, 26, 23,  6, 12,  4,  3, /* 4X */
   13, 21,  7,  8,  5, 11, 15, 22, 28, 20, 19,SYM,SYM,SYM,SYM,SYM, /* 5X */
  SYM,  2, 18,  9, 10,  0, 16, 14, 17,  1, 26, 23,  6, 12,  4,  3, /* 6X */
   13, 21,  7,  8,  5, 11, 15, 22, 28, 20, 19,SYM,SYM,SYM,SYM,CTR, /* 7X */
  CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR, /* 8X */
  CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR, /* 9X */
  SYM,249,SYM,SYM,SYM,ILL,249,SYM,SYM,249,249,249,249,SYM,ILL,249, /* AX */
  SYM,249,SYM,SYM,SYM,SYM,249,SYM,SYM,249,249,249,249,SYM,ILL,249, /* BX */
   25, 33,249,ILL,249,249,249,249, 24, 30,249,249, 31,249,249,249, /* CX */
  ILL,249, 27, 35,249,249, 32,SYM,249, 29,249,249, 34,249,249,249, /* DX */
   25, 33,249,ILL,249,249,249,249, 24, 30,249,249, 31,249,249,249, /* EX */
  ILL,249, 27, 35,249,249, 32,SYM,249, 29,249,249, 34,249,249,SYM, /* FX */
};
/* X0  X1  X2  X3  X4  X5  X6  X7  X8  X9  XA  XB  XC  XD  XE  XF */

static const unsigned char Iso_8859_9_CharToOrderMap[] =
{
  CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,RET,CTR,CTR,RET,CTR,CTR, /* 0X */
  CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR, /* 1X */
  SYM,SYM,SYM,SYM,SYM,SYM,SYM,SYM,SYM,SYM,SYM,SYM,SYM,SYM,SYM,SYM, /* 2X */
  NUM,NUM,NUM,NUM,NUM,NUM,NUM,NUM,NUM,NUM,SYM,SYM,SYM,SYM,SYM,SYM, /* 3X */
  SYM,  2, 18,  9, 10,  0, 16, 14, 17,  1, 26, 23,  6, 12,  4,  3, /* 4X */
   13, 21,  7,  8,  5, 11, 15, 22, 28, 20, 19,SYM,SYM,SYM,SYM,SYM, /* 5X */
  SYM,  2, 18,  9, 10,  0, 16, 14, 17,  1, 26, 23,  6, 12,  4,  3, /* 6X */
   13, 21,  7,  8,  5, 11, 15, 22, 28, 20, 19,SYM,SYM,SYM,SYM,CTR, /* 7X */
  CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR, /* 8X */
  CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR, /* 9X */
  SYM,SYM,SYM,SYM,SYM,SYM,SYM,SYM,SYM,SYM,SYM,SYM,SYM,SYM,SYM,SYM, /* AX */
  SYM,SYM,SYM,SYM,SYM,249,SYM,SYM,SYM,SYM,SYM,SYM,SYM,SYM,SYM,SYM, /* BX */
   25, 33,249,249,249,249,249,249, 24, 30,249,249, 31,249,249,249, /* CX */
  249,249, 27, 35,249,249, 32,SYM,249, 29,249,249, 34,249,249,249, /* DX */
   25, 33,249,249,249,249,249,249, 24, 30,249,249, 31,249,249,249, /* EX */
  249,249, 27, 35,249,249, 32,SYM,249, 29,249,249, 34,249,249,249, /* FX */
};
/* X0  X1  X2  X3  X4  X5  X6  X7  X8  X9  XA  XB  XC  XD  XE  XF */

static const unsigned char Iso_8859_15_CharToOrderMap[] =
{
  CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,RET,CTR,CTR,RET,CTR,CTR, /* 0X */
  CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR, /* 1X */
  SYM,SYM,SYM,SYM,SYM,SYM,SYM,SYM,SYM,SYM,SYM,SYM,SYM,SYM,SYM,SYM, /* 2X */
  NUM,NUM,NUM,NUM,NUM,NUM,NUM,NUM,NUM,NUM,SYM,SYM,SYM,SYM,SYM,SYM, /* 3X */
  SYM,  2, 18,  9, 10,  0, 16, 14, 17,  1, 26, 23,  6, 12,  4,  3, /* 4X */
   13, 21,  7,  8,  5, 11, 15, 22, 28, 20, 19,SYM,SYM,SYM,SYM,SYM, /* 5X */
  SYM,  2, 18,  9, 10,  0, 16, 14, 17,  1, 26, 23,  6, 12,  4,  3, /* 6X */
   13, 21,  7,  8,  5, 11, 15, 22, 28, 20, 19,SYM,SYM,SYM,SYM,CTR, /* 7X */
  CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR, /* 8X */
  CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR, /* 9X */
  SYM,SYM,SYM,SYM,SYM,SYM,249,SYM,249,SYM,SYM,SYM,SYM,SYM,SYM,SYM, /* AX */
  SYM,SYM,SYM,SYM,249,249,SYM,SYM,249,SYM,SYM,SYM,249,249,249,SYM, /* BX */
   25, 33,249,249,249,249,249,249, 24, 30,249,249, 31,249,249,249, /* CX */
  249,249, 27, 35,249,249, 32,SYM,249, 29,249,249, 34,249,249,249, /* DX */
   25, 33,249,249,249,249,249,249, 24, 30,249,249, 31,249,249,249, /* EX */
  249,249, 27, 35,249,249, 32,SYM,249, 29,249,249, 34,249,249,249, /* FX */
};
/* X0  X1  X2  X3  X4  X5  X6  X7  X8  X9  XA  XB  XC  XD  XE  XF */

static const unsigned char Windows_1252_CharToOrderMap[] =
{
  CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,RET,CTR,CTR,RET,CTR,CTR, /* 0X */
  CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR, /* 1X */
  SYM,SYM,SYM,SYM,SYM,SYM,SYM,SYM,SYM,SYM,SYM,SYM,SYM,SYM,SYM,SYM, /* 2X */
  NUM,NUM,NUM,NUM,NUM,NUM,NUM,NUM,NUM,NUM,SYM,SYM,SYM,SYM,SYM,SYM, /* 3X */
  SYM,  2, 18,  9, 10,  0, 16, 14, 17,  1, 26, 23,  6, 12,  4,  3, /* 4X */
   13, 21,  7,  8,  5, 11, 15, 22, 28, 20, 19,SYM,SYM,SYM,SYM,SYM, /* 5X */
  SYM,  2, 18,  9, 10,  0, 16, 14, 17,  1, 26, 23,  6, 12,  4,  3, /* 6X */
   13, 21,  7,  8,  5, 11, 15, 22, 28, 20, 19,SYM,SYM,SYM,SYM,CTR, /* 7X */
  SYM,ILL,SYM,249,SYM,SYM,SYM,SYM,SYM,SYM,249,SYM,249,ILL,249,ILL, /* 8X */
  ILL,SYM,SYM,SYM,SYM,SYM,SYM,SYM,SYM,SYM,249,SYM,249,ILL,249,249, /* 9X */
  SYM,SYM,SYM,SYM,SYM,SYM,SYM,SYM,SYM,SYM,SYM,SYM,SYM,SYM,SYM,SYM, /* AX */
  SYM,SYM,SYM,SYM,SYM,249,SYM,SYM,SYM,SYM,SYM,SYM,SYM,SYM,SYM,SYM, /* BX */
   25, 33,249,249,249,249,249,249, 24, 30,249,249, 31,249,249,249, /* CX */
  249,249, 27, 35,249,249, 32,SYM,249, 29,249,249, 34,249,249,249, /* DX */
   25, 33,249,249,249,249,249,249, 24, 30,249,249, 31,249,249,249, /* EX */
  249,249, 27, 35,249,249, 32,SYM,249, 29,249,249, 34,249,249,249, /* FX */
};
/* X0  X1  X2  X3  X4  X5  X6  X7  X8  X9  XA  XB  XC  XD  XE  XF */

#define Unicode_Char_size    72

static const PRUint32 Unicode_CharOrder[] =
{
   65,  2,  66, 18,  67,  9,  68, 10,  69,  0,  70, 16,  71, 14,  72, 17,
   73,  1,  74, 26,  75, 23,  76,  6,  77, 12,  78,  4,  79,  3,  80, 13,
   81, 21,  82,  7,  83,  8,  84,  5,  85, 11,  86, 15,  87, 22,  88, 28,
   89, 20,  90, 19,  97,  2,  98, 18,  99,  9, 100, 10, 101,  0, 102, 16,
  103, 14, 104, 17, 105,  1, 106, 26, 107, 23, 108,  6, 109, 12, 110,  4,
  111,  3, 112, 13, 113, 21, 114,  7, 115,  8, 116,  5, 117, 11, 118, 15,
  119, 22, 120, 28, 121, 20, 122, 19, 192, 25, 193, 33, 200, 24, 201, 30,
  204, 31, 210, 27, 211, 35, 214, 32, 217, 29, 220, 34, 224, 25, 225, 33,
  232, 24, 233, 30, 236, 31, 242, 27, 243, 35, 246, 32, 249, 29, 252, 34,
};

static const float OrderToRatio[] =
{
  0.112850734f,  0.112279451f,  0.104513961f,  0.086183160f,  0.073169286f,  0.067161550f,  0.065351839f,  0.065114008f, 
  0.051429084f,  0.041686791f,  0.039220909f,  0.030505314f,  0.027946983f,  0.026404374f,  0.019452144f,  0.014518430f, 
  0.011975710f,  0.011581765f,  0.011123665f,  0.008754868f,  0.002916663f,  0.002873244f,  0.002524669f,  0.002502715f, 
  0.001549927f,  0.001515533f,  0.001176959f,  0.001076704f,  0.000793746f,  0.000646657f,  0.000384920f,  0.000367602f, 
  0.000074886f,  0.000050249f,  0.000043419f,  0.000037809f, 
  0    /* value slot for out-of-bounds index values; range: 0..freq_count(36) */
};


/* Model Table:
 * Number of web pages processed for this model: 558
 * Number of characters consumed for this model: 4099548
 * Total considered sequences: 1329 / 1296
 *
 * - Positive sequences: first 388 (0.9950063065539928)
 * - Probable sequences: next 231 (619-388) (0.003995256217321663)
 * - Neutral sequences: last 677 (0.0009984372286855336)
 * - Negative sequences: -33 (off-ratio, TODO)
 */
#define ItalianUnicodeCharToOrderIsReduced  0


#define ItalianFCMLowerBound  65
#define ItalianFCMUpperBound  252


static const PRInt16 ItalianUnicodeCharToOrder[] =
{
  2,18,9,10,0,16,14,17,1,26,23,6,12,4,3,13,21,7,8,5,
  11,15,22,28,20,19,IRR,IRR,IRR,IRR,IRR,IRR,2,18,9,10,0,16,14,17,
  1,26,23,6,12,4,3,13,21,7,8,5,11,15,22,28,20,19,IRR,IRR,
  IRR,IRR,IRR,IRR,IRR,IRR,IRR,IRR,IRR,IRR,IRR,IRR,IRR,IRR,IRR,IRR,IRR,IRR,IRR,IRR,
  IRR,IRR,IRR,IRR,IRR,IRR,IRR,IRR,IRR,IRR,IRR,IRR,IRR,IRR,IRR,IRR,IRR,IRR,IRR,IRR,
  IRR,IRR,IRR,IRR,IRR,IRR,IRR,IRR,IRR,IRR,IRR,IRR,IRR,IRR,IRR,IRR,IRR,IRR,IRR,IRR,
  IRR,IRR,IRR,IRR,IRR,IRR,IRR,25,33,IRR,IRR,IRR,IRR,IRR,IRR,24,30,IRR,IRR,31,
  IRR,IRR,IRR,IRR,IRR,27,35,IRR,IRR,32,IRR,IRR,29,IRR,IRR,34,IRR,IRR,IRR,25,
  33,IRR,IRR,IRR,IRR,IRR,IRR,24,30,IRR,IRR,31,IRR,IRR,IRR,IRR,IRR,27,35,IRR,
  IRR,32,IRR,IRR,29,IRR,IRR,34,
};



#define ItalianUnicodeCharToOrderFirstTableChunkSize    58
#define ItalianUnicodeCharToOrderSecondTableChunkOffset 127
#define ItalianUnicodeCharToOrderSecondTableChunkSize   61


static const PRInt16 ItalianUnicodeCharToOrder2[] =
{
  25,33,IRR,IRR,IRR,IRR,IRR,IRR,24,30,IRR,IRR,31,IRR,IRR,IRR,IRR,IRR,27,35,
  IRR,IRR,32,IRR,IRR,29,IRR,IRR,34,IRR,IRR,IRR,25,33,IRR,IRR,IRR,IRR,IRR,IRR,
  24,30,IRR,IRR,31,IRR,IRR,IRR,IRR,IRR,27,35,IRR,IRR,32,IRR,IRR,29,IRR,IRR,
  34,
};

static const PRUint8 ItalianCompactedLangModel[] =
{
  3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,1,0,2,2,3,0,0,1,1,0,0,1,
  3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,3,3,2,3,2,3,2,3,2,3,3,3,1,0,0,1,0,2,
  3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,3,3,0,0,3,0,3,0,1,0,0,0,1,0,
  3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,3,3,2,1,3,0,3,0,0,0,0,0,0,0,
  3,3,3,3,3,3,3,3,3,3,3,3,2,2,3,3,3,2,3,3,3,3,2,3,1,1,2,3,2,1,3,2,1,2,0,1,
  3,3,3,3,3,3,3,3,3,3,2,3,3,3,2,3,2,3,3,3,3,1,3,2,1,3,1,3,1,2,2,2,1,1,1,1,
  3,3,3,3,3,3,3,2,3,3,3,3,3,3,3,3,3,2,3,2,3,2,2,3,1,2,2,2,1,1,2,2,1,2,1,1,
  3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,3,3,2,3,1,3,1,1,2,3,1,1,1,2,
  3,3,3,3,3,3,3,3,3,3,2,3,3,3,2,3,3,3,3,2,3,3,3,3,1,0,1,3,1,2,2,3,1,1,1,1,
  3,3,3,3,3,3,3,3,3,3,2,3,2,2,2,1,2,3,3,2,3,3,2,3,1,1,1,3,1,0,2,3,0,1,0,1,
  3,3,3,3,3,2,3,3,3,2,3,3,3,2,3,2,2,2,3,2,3,1,3,2,1,2,2,2,1,1,2,2,1,1,1,1,
  3,3,3,3,3,3,3,3,3,3,3,1,3,3,3,2,3,2,3,3,2,1,2,3,1,0,2,3,2,0,2,2,0,1,0,0,
  3,3,3,3,2,2,3,2,3,3,3,3,3,3,2,2,2,1,3,1,3,1,2,2,1,1,1,2,1,1,2,0,1,1,2,1,
  3,3,3,3,2,3,3,3,3,2,2,3,2,3,1,1,2,3,2,2,2,0,2,2,1,1,1,2,1,1,1,2,0,1,0,1,
  3,3,3,3,3,3,3,3,3,2,2,3,3,2,3,1,2,3,2,1,3,1,2,2,1,1,2,2,1,1,2,1,2,0,1,1,
  3,3,3,3,1,1,2,3,2,1,2,3,1,1,1,3,2,1,1,1,2,0,0,1,0,1,1,2,0,1,1,1,1,1,0,0,
  3,3,3,3,1,3,3,3,2,2,1,3,2,1,2,1,3,1,2,1,2,0,2,1,2,1,1,1,1,1,1,0,1,1,2,0,
  3,3,3,3,3,3,3,3,2,1,2,3,3,2,1,2,2,1,2,1,3,1,2,1,1,0,1,1,1,0,3,1,1,1,1,1,
  3,3,3,3,3,2,3,3,3,2,2,3,2,2,1,1,2,2,3,1,3,1,1,1,1,1,3,1,1,2,2,2,1,1,1,1,
  3,3,3,3,1,1,2,1,1,1,1,3,1,1,2,1,1,2,1,3,2,1,2,2,0,1,1,2,1,0,1,0,0,1,1,1,
  3,2,3,3,3,3,3,2,3,3,3,2,3,2,2,1,1,2,2,1,1,1,2,2,1,0,1,0,1,0,1,0,0,1,0,0,
  1,1,1,1,0,1,2,1,1,0,1,3,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
  3,3,3,3,3,2,2,3,3,2,2,2,1,1,1,1,2,3,2,1,2,0,3,2,0,0,0,0,1,0,1,0,1,1,1,1,
  3,3,3,3,3,2,3,3,3,1,2,3,2,1,2,2,2,2,2,1,3,1,2,2,1,1,2,1,0,0,1,0,2,1,1,1,
  0,1,1,0,1,1,1,2,2,1,1,1,1,0,1,1,0,0,0,1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
  1,1,0,0,1,1,1,1,1,1,0,0,1,1,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,
  3,3,3,3,1,1,1,2,2,2,2,3,1,2,1,1,1,1,1,1,1,0,1,1,0,0,1,1,0,0,1,0,3,1,1,1,
  0,0,0,0,1,1,1,1,1,1,1,0,0,0,1,0,0,0,1,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,
  3,3,2,2,1,3,2,1,2,2,0,1,2,2,1,3,2,2,1,1,2,1,1,0,0,0,1,0,2,0,1,0,0,0,0,0,
  0,0,0,0,1,0,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
  2,1,2,2,2,2,2,2,1,2,2,0,2,2,1,1,1,1,1,1,0,1,0,0,0,0,0,0,1,0,0,0,0,0,0,0,
  1,0,1,0,0,1,0,0,1,1,1,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
  0,1,0,0,1,1,2,3,1,1,1,0,1,1,1,1,1,1,1,1,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,
  1,1,0,0,2,1,2,2,1,1,1,0,1,1,1,0,1,1,0,1,0,0,0,1,0,0,1,0,1,0,0,0,0,0,0,0,
  1,0,0,0,2,1,2,2,1,1,1,0,1,0,1,0,1,2,1,1,0,0,0,1,0,0,0,0,1,0,0,0,0,0,0,0,
  0,0,0,0,2,1,1,1,1,1,1,0,1,1,1,1,1,0,1,1,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,
};


const SequenceModel Iso_8859_1ItalianModel =
{
  Iso_8859_1_CharToOrderMap,
  ItalianCompactedLangModel,
  ItalianOrderWidth,
  0.9990015627713145f,
  PR_TRUE,
  "ISO-8859-1",
  "it"
};

const SequenceModel Iso_8859_3ItalianModel =
{
  Iso_8859_3_CharToOrderMap,
  ItalianCompactedLangModel,
  ItalianOrderWidth,
  0.9990015627713145f,
  PR_TRUE,
  "ISO-8859-3",
  "it"
};

const SequenceModel Iso_8859_9ItalianModel =
{
  Iso_8859_9_CharToOrderMap,
  ItalianCompactedLangModel,
  ItalianOrderWidth,
  0.9990015627713145f,
  PR_TRUE,
  "ISO-8859-9",
  "it"
};

const SequenceModel Iso_8859_15ItalianModel =
{
  Iso_8859_15_CharToOrderMap,
  ItalianCompactedLangModel,
  ItalianOrderWidth,
  0.9990015627713145f,
  PR_TRUE,
  "ISO-8859-15",
  "it"
};

const SequenceModel Windows_1252ItalianModel =
{
  Windows_1252_CharToOrderMap,
  ItalianCompactedLangModel,
  ItalianOrderWidth,
  0.9990015627713145f,
  PR_TRUE,
  "WINDOWS-1252",
  "it"
};

const LanguageModel ItalianModel =
{
  "it",
  Unicode_CharOrder,
  Unicode_Char_size,

  ItalianFCMLowerBound,
  ItalianFCMUpperBound,
  ItalianUnicodeCharToOrderIsReduced,
  ItalianUnicodeCharToOrder,
  ItalianUnicodeCharToOrderFirstTableChunkSize,
  ItalianUnicodeCharToOrderSecondTableChunkOffset,
  ItalianUnicodeCharToOrderSecondTableChunkSize,
  ItalianUnicodeCharToOrder2,
  OrderToRatio,
  ItalianCompactedLangModel,
  ItalianOrderWidth,
  4,
  0.4158273058395706f,
  17,
  0.03841423493516846f,
  0.9997597296092153f,
};
