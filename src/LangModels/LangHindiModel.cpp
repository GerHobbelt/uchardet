/* -*- Mode: C++; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */
/* ***** BEGIN LICENSE BLOCK *****
 * Version: MPL 1.1/GPL 2.0/LGPL 2.1
 *
 * The contents of this file are subject to the Mozilla Public License Version
 * 1.1 (the "License"); you may not use this file except in compliance with
 * the License. You may obtain a copy of the License at
 * http://www.mozilla.org/MPL/
 *
 * Software distributed under the License is distributed on an "AS IS" basis,
 * WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
 * for the specific language governing rights and limitations under the
 * License.
 *
 * The Original Code is Mozilla Communicator client code.
 *
 * The Initial Developer of the Original Code is
 * Netscape Communications Corporation.
 * Portions created by the Initial Developer are Copyright (C) 1998
 * the Initial Developer. All Rights Reserved.
 *
 * Contributor(s):
 *
 * Alternatively, the contents of this file may be used under the terms of
 * either the GNU General Public License Version 2 or later (the "GPL"), or
 * the GNU Lesser General Public License Version 2.1 or later (the "LGPL"),
 * in which case the provisions of the GPL or the LGPL are applicable instead
 * of those above. If you wish to allow use of your version of this file only
 * under the terms of either the GPL or the LGPL, and not to allow others to
 * use your version of this file under the terms of the MPL, indicate your
 * decision by deleting the provisions above and replace them with the notice
 * and other provisions required by the GPL or the LGPL. If you do not delete
 * the provisions above, a recipient may use your version of this file under
 * the terms of any one of the MPL, the GPL or the LGPL.
 *
 * ***** END LICENSE BLOCK ***** */

#include "../nsSBCharSetProber.h"
#include "../nsLanguageDetector.h"

/********* Language model for: Hindi *********/

/**
 * Generated by BuildLangModel.py
 * On: 2021-03-19 22:31:01.819135
 **/

/* Character Mapping Table:
 * ILL: illegal character.
 * CTR: control character specific to the charset.
 * RET: carriage/return.
 * SYM: symbol (punctuation) that does not belong to word.
 * NUM: 0 - 9.
 *
 * Other characters are ordered by probabilities
 * (0 is the most common character in the language).
 *
 * Orders are generic to a language. So the codepoint with order X in
 * CHARSET1 maps to the same character as the codepoint with the same
 * order X in CHARSET2 for the same language.
 * As such, it is possible to get missing order. For instance the
 * ligature of 'o' and 'e' exists in ISO-8859-15 but not in ISO-8859-1
 * even though they are both used for French. Same for the euro sign.
 */
static const int Unicode_Char_size = 64;
static const unsigned int Unicode_CharOrder[] =
{
  2305, 41, 2306, 25, 2307, 57, 2309, 48, 2310, 22, 2311, 37, 2312, 20,2313, 31,
  2314, 52, 2319, 28, 2320, 53, 2321, 58, 2323, 56, 2324, 40, 2325, 18,2326,  4,
  2327, 10, 2328, 34, 2330, 47, 2331, 50, 2332, 14, 2334, 55, 2335, 26,2336, 44,
  2337, 45, 2338, 54, 2339, 49, 2340,  6, 2341, 35, 2342, 24, 2343, 23,2344,  8,
  2346,  5, 2347, 42, 2348, 46, 2349, 16, 2350,  9, 2351, 32, 2352, 13,2354, 29,
  2357,  0, 2358,  2, 2359, 33, 2360, 12, 2361, 19, 2364, 51, 2366,  3,2367,  1,
  2368, 17, 2369, 27, 2370, 43, 2371, 39, 2375, 15, 2376, 11, 2377, 30,2379, 21,
  2380, 38, 2381,  7, 2404, 36, 2406, 62, 2407, 59, 2408, 61, 2411, 60,2413, 63,
};


/* Model Table:
 * Total considered sequences: 2113 / 4096
 * - Positive sequences: first 1356 (0.9950083796268726)
 * - Probable sequences: next 397 (1753-1356) (0.00399414702204226)
 * - Neutral sequences: last 2343 (0.000997473351085132)
 * - Negative sequences: 1983 (off-ratio)
 * Negative sequences: TODO
 */
static const PRUint8 HindiLangModel[] =
{
  3,3,3,3,0,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,1,3,0,3,3,3,3,3,0,3,3,0,
   3,0,2,1,0,1,0,3,0,0,1,2,0,1,1,3,0,2,1,0,1,0,0,0,0,1,0,0,0,0,0,0,
  3,0,3,0,3,3,3,0,3,3,3,0,3,3,3,0,3,0,3,3,0,0,1,3,3,3,3,0,3,3,0,1,
   3,3,2,3,3,1,0,0,0,0,3,0,3,3,3,3,2,3,3,2,2,1,1,0,2,2,0,0,0,0,1,0,
  3,3,2,3,0,2,3,3,3,3,2,3,3,3,3,3,3,3,3,3,0,3,0,0,2,3,2,3,0,3,2,0,
   3,0,0,0,1,0,3,2,0,0,0,3,0,0,3,1,0,0,0,0,0,0,0,0,0,3,0,0,0,0,0,0,
  3,0,3,0,3,3,3,0,3,3,3,0,3,3,3,1,3,0,3,3,3,0,1,3,3,3,3,0,3,3,0,3,
   3,3,3,3,3,3,0,0,1,3,3,0,3,3,3,3,0,3,2,2,3,2,3,2,3,1,0,0,0,0,0,0,
  2,3,0,3,0,3,3,3,3,3,2,2,2,3,3,3,3,3,3,0,0,3,0,0,3,3,2,3,0,3,0,0,
   0,0,0,0,3,0,2,0,0,0,0,3,0,3,2,2,0,3,0,3,0,0,0,0,0,0,0,0,0,0,0,0,
  3,3,3,3,2,2,3,3,3,3,3,3,3,3,3,3,3,3,3,3,0,3,0,1,3,3,3,3,2,3,3,0,
   3,3,1,3,1,0,3,3,0,0,0,3,3,3,3,3,0,3,2,0,0,0,3,0,0,0,0,0,0,0,0,0,
  3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,3,3,3,3,3,0,3,0,1,3,3,3,3,1,3,0,0,
   3,0,0,3,2,0,3,3,0,0,0,3,0,1,3,3,0,1,0,1,0,0,0,1,0,3,0,0,0,0,0,0,
  3,0,3,0,3,3,3,0,3,3,3,0,3,3,3,1,3,0,3,3,0,0,0,3,3,0,3,1,0,3,0,0,
   3,3,3,3,0,0,0,0,0,0,3,0,3,3,3,3,0,3,3,0,0,0,2,3,0,0,0,0,0,0,0,0,
  3,3,3,3,0,3,3,3,3,3,3,3,3,3,3,3,2,3,3,3,3,3,2,3,3,3,3,3,3,3,3,0,
   3,3,2,1,3,1,3,3,0,0,3,3,0,3,3,3,0,1,0,0,3,1,0,0,1,3,0,0,0,0,0,0,
  3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,3,3,3,3,3,1,3,3,3,3,3,2,3,3,1,
   3,0,0,3,1,1,3,3,0,2,1,3,3,3,2,3,0,3,3,0,2,0,3,0,0,1,0,0,0,0,1,0,
  3,3,3,3,0,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,0,3,3,3,2,3,3,3,2,0,
   3,0,0,0,2,0,3,3,0,1,3,3,3,3,3,0,0,3,0,3,0,0,3,0,0,2,0,0,0,0,0,0,
  3,0,3,0,0,3,3,0,3,3,3,1,3,3,3,0,2,0,3,2,0,0,0,3,3,3,3,0,0,3,0,0,
   3,3,0,3,3,0,0,0,0,0,2,0,3,3,3,2,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
  3,3,2,3,2,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,1,3,0,0,3,3,3,3,2,3,3,1,
   2,0,2,0,0,1,3,3,0,2,3,3,0,3,3,3,0,0,0,0,1,0,1,0,0,2,0,0,0,0,1,0,
  3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,1,3,1,3,3,3,2,3,3,3,3,1,
   3,3,2,3,3,0,3,3,1,0,3,3,3,2,3,3,2,3,2,0,0,0,0,0,0,2,0,0,0,0,0,0,
  3,3,3,3,2,3,3,3,3,3,3,3,3,3,1,3,3,3,3,3,1,3,0,3,3,3,3,3,0,3,3,0,
   3,0,1,0,2,0,3,0,0,0,3,3,0,3,3,1,0,0,0,3,0,0,0,0,0,1,0,0,0,0,0,0,
  3,0,3,0,3,3,3,0,3,3,3,0,3,3,3,2,0,0,3,3,3,0,0,2,3,3,3,0,0,3,0,1,
   3,3,2,2,3,2,0,0,0,1,3,0,0,3,3,3,2,3,0,0,1,0,2,0,0,0,0,0,0,0,0,0,
  3,3,0,3,0,1,2,3,0,1,3,3,1,3,2,3,1,3,3,0,0,3,0,1,3,3,3,3,0,3,0,0,
   3,0,0,0,2,1,3,0,0,0,0,3,1,2,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
  3,0,3,0,3,3,3,0,3,3,3,0,3,3,3,0,2,0,3,2,2,0,3,3,3,3,3,0,3,3,0,0,
   3,3,3,2,3,2,0,0,1,0,3,0,3,3,3,3,0,3,3,0,0,0,3,0,3,1,2,0,0,1,1,0,
  3,3,3,3,0,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,0,0,3,3,3,3,0,3,3,0,
   2,2,1,3,3,0,3,3,0,0,2,3,3,3,3,2,0,3,2,3,0,0,1,0,0,0,0,0,0,1,0,0,
  3,3,2,3,1,2,3,3,3,3,3,3,3,3,3,3,1,3,3,2,1,3,0,0,3,3,3,3,0,3,3,0,
   3,0,0,3,2,0,2,2,0,1,2,3,1,3,3,3,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
  1,0,3,0,0,1,0,0,3,2,2,0,3,3,1,0,0,0,3,0,0,0,2,0,2,3,3,0,2,3,0,0,
   3,0,0,0,3,0,0,0,0,0,1,0,0,0,2,1,0,0,0,0,0,0,0,0,2,0,0,0,0,0,1,0,
  3,0,3,0,3,3,3,0,3,3,3,0,3,3,3,0,2,0,3,3,3,0,2,3,3,3,3,0,3,3,0,2,
   3,3,2,3,3,3,0,0,0,1,3,0,2,3,3,3,1,3,0,0,2,0,3,0,1,0,0,0,0,0,0,0,
  3,0,3,0,3,3,3,0,3,3,3,0,3,3,3,1,2,0,3,3,3,0,0,3,3,3,2,0,3,3,0,1,
   3,1,1,0,3,3,0,0,0,3,1,0,3,1,3,3,1,3,1,0,0,0,0,0,1,0,0,0,0,0,0,0,
  3,3,2,3,0,2,3,3,3,2,3,0,3,3,1,3,0,3,3,0,1,3,0,1,0,1,0,3,0,1,0,0,
   1,0,0,0,1,0,1,0,0,0,0,3,0,2,2,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
  3,3,3,3,0,3,3,3,3,3,3,3,3,3,1,3,2,3,3,3,1,3,0,0,3,3,0,3,0,3,0,0,
   3,0,0,0,1,0,3,3,0,0,2,3,0,3,3,2,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
  3,0,3,0,3,3,3,0,3,1,3,0,3,3,3,0,3,0,3,3,0,0,2,3,3,2,3,1,1,3,0,1,
   3,0,3,3,3,0,0,0,0,0,2,0,3,3,3,3,0,1,2,0,0,0,2,0,0,0,0,1,0,0,2,0,
  3,3,1,3,1,3,3,3,3,3,2,3,3,3,2,3,2,3,3,2,1,3,0,0,1,2,0,3,1,3,3,0,
   2,0,0,0,1,0,2,0,0,0,2,3,0,2,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
  3,0,3,0,3,3,3,1,3,3,3,0,3,3,3,1,3,0,3,3,3,0,3,3,3,3,3,1,3,3,0,1,
   3,3,2,2,0,3,0,0,0,3,3,0,2,3,3,3,2,3,3,1,0,1,2,1,3,2,0,0,0,0,0,0,
  3,0,3,0,0,2,2,0,3,3,3,0,3,1,3,0,0,0,3,2,1,0,1,2,0,3,3,0,1,3,0,0,
   3,0,0,2,3,0,0,0,0,3,3,0,0,3,1,3,0,1,0,0,0,0,0,0,1,0,0,0,0,0,0,0,
  3,3,2,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,1,3,1,2,3,3,3,3,0,3,3,1,
   3,0,3,1,2,1,3,0,0,0,1,3,0,3,3,3,2,0,2,0,0,0,0,0,0,1,0,0,0,0,0,0,
  2,0,2,0,0,2,0,0,3,3,3,0,3,3,3,0,0,0,3,0,0,0,0,0,0,3,3,0,0,3,0,2,
   3,0,0,0,0,2,0,0,0,0,2,0,0,3,3,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
  0,0,0,0,1,3,3,0,3,3,3,0,3,3,2,0,3,0,3,1,0,0,0,2,3,3,2,0,0,3,0,0,
   0,3,0,2,0,0,0,0,0,2,2,0,3,3,2,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
  3,3,3,3,1,3,3,3,3,3,3,0,3,3,3,3,3,3,3,3,0,3,0,3,3,3,3,3,0,3,2,0,
   3,0,1,3,2,1,3,0,0,0,2,3,1,2,3,3,1,3,0,1,0,0,0,0,0,3,0,0,0,0,0,0,
  2,3,1,3,0,2,3,3,2,3,2,2,3,3,3,3,2,3,3,1,0,3,0,3,3,0,2,2,0,0,0,0,
   3,2,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
  2,3,0,3,0,0,0,2,3,2,0,0,0,3,0,2,0,3,2,1,0,3,0,0,1,3,3,3,0,2,0,0,
   0,0,0,0,0,0,1,1,0,0,0,3,0,2,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
  3,3,2,3,0,2,2,3,3,3,1,0,2,3,0,3,0,3,3,2,2,3,0,1,0,2,0,3,0,3,2,0,
   2,0,0,0,2,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,
  3,0,2,0,1,3,2,0,2,3,2,0,3,2,3,0,2,0,3,3,0,0,2,0,3,0,0,0,2,2,0,2,
   3,0,1,0,1,3,0,0,0,0,2,0,0,1,3,2,2,0,1,0,0,0,0,0,1,0,0,2,0,2,0,0,
  3,0,2,0,0,3,3,0,3,3,2,0,3,3,3,0,0,0,3,0,0,0,0,1,0,3,3,0,2,3,0,0,
   3,1,0,2,1,0,0,0,0,1,2,0,0,3,3,3,0,3,1,1,0,0,0,0,1,0,1,0,0,0,0,0,
  2,0,2,0,3,3,3,0,3,3,3,0,3,3,3,0,1,0,3,3,0,0,0,3,3,3,3,0,0,3,0,0,
   0,1,0,3,1,0,0,0,0,1,1,0,0,3,2,1,0,2,1,1,0,0,0,0,0,0,0,0,0,0,0,0,
  1,0,3,0,1,3,3,0,2,0,2,0,1,0,3,0,2,0,3,3,0,0,0,0,3,3,0,0,0,0,0,0,
   0,3,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,0,0,0,0,0,0,0,0,0,
  0,0,0,0,0,3,0,0,0,0,0,0,3,3,1,0,0,0,1,0,0,0,0,1,3,0,1,0,0,0,0,0,
   0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
  3,0,1,1,3,2,2,0,1,0,3,0,3,0,0,0,0,0,3,2,0,0,0,3,3,0,3,0,0,0,0,1,
   1,0,0,0,1,0,0,0,0,3,1,0,1,2,1,3,0,0,1,0,0,0,1,0,0,0,0,0,0,0,0,0,
  2,3,1,3,0,0,2,3,2,0,3,3,3,3,0,3,0,3,1,1,0,3,1,0,0,2,2,3,0,3,3,1,
   0,0,0,0,1,0,2,0,0,0,0,3,0,3,2,0,0,1,0,3,0,0,0,0,0,0,0,0,0,0,0,0,
  3,0,2,0,3,3,3,0,3,3,3,0,3,3,3,0,3,0,3,3,0,0,2,2,3,3,3,0,3,3,0,1,
   2,3,1,2,0,0,0,0,0,3,3,0,3,3,3,3,1,3,2,0,0,0,3,0,2,0,0,0,0,0,1,0,
  3,3,2,3,0,1,3,2,3,3,1,0,1,1,0,3,3,3,3,3,0,3,0,0,0,3,0,1,0,2,0,0,
   1,0,0,0,0,0,1,0,0,0,1,3,0,0,3,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
  3,3,0,3,0,3,2,3,3,3,2,2,2,3,0,3,1,3,3,1,0,3,0,0,0,2,2,3,0,3,3,0,
   2,0,0,0,0,0,2,0,0,0,0,3,0,1,3,2,0,0,0,3,0,0,0,0,0,1,0,0,0,0,0,0,
  2,3,2,3,2,0,3,3,3,2,3,3,3,3,3,3,0,3,3,3,3,3,0,2,3,3,3,3,0,3,3,0,
   2,0,2,2,1,1,3,3,0,3,0,3,1,3,2,3,0,0,1,0,0,0,3,0,0,0,0,0,0,0,0,0,
  3,3,2,3,0,3,3,3,3,3,0,3,3,3,1,3,2,3,3,2,0,3,0,0,0,3,3,3,1,3,1,0,
   3,0,0,0,0,1,3,0,0,1,0,3,0,2,2,0,0,2,0,0,0,0,3,0,3,0,0,0,0,0,0,0,
  3,0,3,1,3,3,3,0,3,3,3,0,3,3,3,0,3,0,3,3,0,0,0,3,3,3,3,0,0,3,0,0,
   3,3,2,3,0,0,0,0,0,1,3,0,1,3,3,3,0,1,1,0,0,0,0,0,0,1,0,0,0,0,0,0,
  3,3,1,3,0,3,3,3,3,2,2,0,3,3,1,3,1,3,3,0,0,3,0,2,2,0,0,3,0,0,0,0,
   3,0,0,1,1,0,1,0,0,0,0,0,0,1,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
  3,3,0,3,0,2,3,1,1,1,0,0,0,1,2,3,0,3,1,3,0,3,0,0,2,1,2,3,0,3,0,0,
   0,0,0,0,0,0,1,0,0,0,0,3,3,3,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,
  3,3,1,3,1,2,3,3,3,3,3,3,3,3,3,3,1,3,3,2,2,3,0,1,2,1,0,3,0,3,2,0,
   2,0,0,0,2,0,3,0,0,1,3,3,0,1,3,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,
  0,0,0,0,2,3,1,0,1,1,0,0,2,2,0,0,0,0,0,0,0,0,0,0,2,3,1,0,0,1,0,0,
   0,1,0,0,0,0,0,0,0,3,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
  1,0,0,0,0,0,3,0,2,0,0,0,3,1,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,2,0,0,
   0,0,0,0,0,2,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
  0,2,0,3,0,0,2,0,2,0,0,0,0,0,0,3,0,3,2,2,0,0,0,0,0,3,0,0,0,3,0,0,
   0,0,0,0,0,0,0,0,0,2,0,2,0,0,1,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,
  0,1,0,3,0,0,1,2,0,0,0,0,0,0,0,1,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,
   0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
  3,0,2,0,0,1,1,0,1,2,1,0,2,3,1,0,0,0,2,0,2,0,1,1,1,3,2,0,0,3,0,0,
   0,0,0,1,0,1,0,0,0,2,0,0,0,2,2,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
  0,0,2,0,2,1,0,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,0,2,0,0,0,0,0,0,0,
   0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
  0,0,0,0,0,2,0,0,2,0,0,0,3,3,0,0,0,0,3,0,0,0,0,0,0,0,1,0,0,1,0,0,
   1,0,0,0,0,0,0,0,0,0,3,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
  1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,
   0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,3,3,3,3,3,
  2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
   0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,3,2,3,3,
  2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
   0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,3,3,3,2,
  1,0,1,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,
   0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,3,3,3,3,
  2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
   0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,3,3,3,3,
};


const LanguageModel HindiModel =
{
  "hi",
  Unicode_CharOrder,
  64,
  HindiLangModel,
  64,
  (float)0.7999999999999992,
};
