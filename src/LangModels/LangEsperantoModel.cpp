/* -*- Mode: C++; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */
/* ***** BEGIN LICENSE BLOCK *****
 * Version: MPL 1.1/GPL 2.0/LGPL 2.1
 *
 * The contents of this file are subject to the Mozilla Public License Version
 * 1.1 (the "License"); you may not use this file except in compliance with
 * the License. You may obtain a copy of the License at
 * http://www.mozilla.org/MPL/
 *
 * Software distributed under the License is distributed on an "AS IS" basis,
 * WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
 * for the specific language governing rights and limitations under the
 * License.
 *
 * The Original Code is Mozilla Communicator client code.
 *
 * The Initial Developer of the Original Code is
 * Netscape Communications Corporation.
 * Portions created by the Initial Developer are Copyright (C) 1998
 * the Initial Developer. All Rights Reserved.
 *
 * Contributor(s):
 *
 * Alternatively, the contents of this file may be used under the terms of
 * either the GNU General Public License Version 2 or later (the "GPL"), or
 * the GNU Lesser General Public License Version 2.1 or later (the "LGPL"),
 * in which case the provisions of the GPL or the LGPL are applicable instead
 * of those above. If you wish to allow use of your version of this file only
 * under the terms of either the GPL or the LGPL, and not to allow others to
 * use your version of this file under the terms of the MPL, indicate your
 * decision by deleting the provisions above and replace them with the notice
 * and other provisions required by the GPL or the LGPL. If you do not delete
 * the provisions above, a recipient may use your version of this file under
 * the terms of any one of the MPL, the GPL or the LGPL.
 *
 * ***** END LICENSE BLOCK ***** */

#include "../nsSBCharSetProber.h"
#include "../nsSBCharSetProber-generated.h"
#include "../nsLanguageDetector.h"

#include "../nsLanguageDetector-generated.h"

/********* Language model for: Esperanto *********/

/**
 * Generated by BuildLangModel.py
 * On: 2023-07-08 23:28:27.496197
 **/

/* Character Mapping Table:
 * ILL: illegal character.
 * CTR: control character specific to the charset.
 * RET: carriage/return.
 * SYM: symbol (punctuation) that does not belong to word.
 * NUM: 0 - 9.
 * IRR: irrelevant character (which does belong to a word)
 *
 * Other characters are ordered by probabilities
 * (0 is the most common character in the language).
 *
 * Orders are generic to a language. So the codepoint with order X in
 * CHARSET1 maps to the same character as the codepoint with the same
 * order X in CHARSET2 for the same language.
 * As such, it is possible to get missing order. For instance the
 * ligature of 'o' and 'e' exists in ISO-8859-15 but not in ISO-8859-1
 * even though they are both used for French. Same for the euro sign.
 */



#define IRR                     (-1)

#define EsperantoOrderWidth        33


static const unsigned char Iso_8859_3_CharToOrderMap[] =
{
  CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,RET,CTR,CTR,RET,CTR,CTR, /* 0X */
  CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR, /* 1X */
  SYM,SYM,SYM,SYM,SYM,SYM,SYM,SYM,SYM,SYM,SYM,SYM,SYM,SYM,SYM,SYM, /* 2X */
  NUM,NUM,NUM,NUM,NUM,NUM,NUM,NUM,NUM,NUM,SYM,SYM,SYM,SYM,SYM,SYM, /* 3X */
  SYM,  0, 18, 17, 11,  2, 19, 15, 20,  3, 10,  9,  6, 13,  4,  1, /* 4X */
   14,249,  5,  8,  7, 12, 16, 27, 29, 25, 21,SYM,SYM,SYM,SYM,SYM, /* 5X */
  SYM,  0, 18, 17, 11,  2, 19, 15, 20,  3, 10,  9,  6, 13,  4,  1, /* 6X */
   14,249,  5,  8,  7, 12, 16, 27, 29, 25, 21,SYM,SYM,SYM,SYM,CTR, /* 7X */
  CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR, /* 8X */
  CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR, /* 9X */
  SYM,249,SYM,SYM,SYM,ILL, 32,SYM,SYM,249,249,249, 28,SYM,ILL,249, /* AX */
  SYM,249,SYM,SYM,SYM,SYM, 32,SYM,SYM,249,249,249, 28,SYM,ILL,249, /* BX */
  249, 31,249,ILL,249,249, 24,249,249, 30,249,249,249,249,249,249, /* CX */
  ILL,249,249,249,249,249,249,SYM, 22,249,249,249,249, 23, 26,249, /* DX */
  249, 31,249,ILL,249,249, 24,249,249, 30,249,249,249,249,249,249, /* EX */
  ILL,249,249,249,249,249,249,SYM, 22,249,249,249,249, 23, 26,SYM, /* FX */
};
/* X0  X1  X2  X3  X4  X5  X6  X7  X8  X9  XA  XB  XC  XD  XE  XF */

#define Unicode_Char_size    66

static const PRUint32 Unicode_CharOrder[] =
{
   65,  0,  66, 18,  67, 17,  68, 11,  69,  2,  70, 19,  71, 15,  72, 20,
   73,  3,  74, 10,  75,  9,  76,  6,  77, 13,  78,  4,  79,  1,  80, 14,
   82,  5,  83,  8,  84,  7,  85, 12,  86, 16,  87, 27,  88, 29,  89, 25,
   90, 21,  97,  0,  98, 18,  99, 17, 100, 11, 101,  2, 102, 19, 103, 15,
  104, 20, 105,  3, 106, 10, 107,  9, 108,  6, 109, 13, 110,  4, 111,  1,
  112, 14, 114,  5, 115,  8, 116,  7, 117, 12, 118, 16, 119, 27, 120, 29,
  121, 25, 122, 21, 193, 31, 201, 30, 225, 31, 233, 30, 264, 24, 265, 24,
  284, 22, 285, 22, 292, 32, 293, 32, 308, 28, 309, 28, 348, 26, 349, 26,
  364, 23, 365, 23,
};

static const float OrderToRatio[] =
{
  0.126611558f,  0.096502938f,  0.091413667f,  0.084957520f,  0.071958892f,  0.061511082f,  0.058279625f,  0.057346519f, 
  0.053196888f,  0.040806798f,  0.035724994f,  0.035106890f,  0.029947619f,  0.028417407f,  0.026227791f,  0.015378879f, 
  0.014695674f,  0.014102303f,  0.011672585f,  0.011127981f,  0.007312253f,  0.006272279f,  0.005441373f,  0.004429866f, 
  0.003439592f,  0.001746046f,  0.001662045f,  0.001363377f,  0.001074741f,  0.000386869f,  0.000337402f,  0.000314069f, 
  0.000263435f, 
  0    /* value slot for out-of-bounds index values; range: 0..freq_count(33) */
};


/* Model Table:
 * Number of web pages processed for this model: 1035
 * Number of characters consumed for this model: 4285683
 * Total considered sequences: 1500 / 1089
 *
 * - Positive sequences: first 514 (0.9950178420355256)
 * - Probable sequences: next 305 (819-514) (0.003985668937053433)
 * - Neutral sequences: last 270 (0.0009964890274209992)
 * - Negative sequences: -411 (off-ratio, TODO)
 */
#define EsperantoUnicodeCharToOrderIsReduced  0


#define EsperantoFCMLowerBound  65
#define EsperantoFCMUpperBound  365


static const PRInt16 EsperantoUnicodeCharToOrder[] =
{
  0,18,17,11,2,19,15,20,3,10,9,6,13,4,1,14,IRR,5,8,7,
  12,16,27,29,25,21,IRR,IRR,IRR,IRR,IRR,IRR,0,18,17,11,2,19,15,20,
  3,10,9,6,13,4,1,14,IRR,5,8,7,12,16,27,29,25,21,IRR,IRR,
  IRR,IRR,IRR,IRR,IRR,IRR,IRR,IRR,IRR,IRR,IRR,IRR,IRR,IRR,IRR,IRR,IRR,IRR,IRR,IRR,
  IRR,IRR,IRR,IRR,IRR,IRR,IRR,IRR,IRR,IRR,IRR,IRR,IRR,IRR,IRR,IRR,IRR,IRR,IRR,IRR,
  IRR,IRR,IRR,IRR,IRR,IRR,IRR,IRR,IRR,IRR,IRR,IRR,IRR,IRR,IRR,IRR,IRR,IRR,IRR,IRR,
  IRR,IRR,IRR,IRR,IRR,IRR,IRR,IRR,31,IRR,IRR,IRR,IRR,IRR,IRR,IRR,30,IRR,IRR,IRR,
  IRR,IRR,IRR,IRR,IRR,IRR,IRR,IRR,IRR,IRR,IRR,IRR,IRR,IRR,IRR,IRR,IRR,IRR,IRR,IRR,
  31,IRR,IRR,IRR,IRR,IRR,IRR,IRR,30,IRR,IRR,IRR,IRR,IRR,IRR,IRR,IRR,IRR,IRR,IRR,
  IRR,IRR,IRR,IRR,IRR,IRR,IRR,IRR,IRR,IRR,IRR,IRR,IRR,IRR,IRR,IRR,IRR,IRR,IRR,24,
  24,IRR,IRR,IRR,IRR,IRR,IRR,IRR,IRR,IRR,IRR,IRR,IRR,IRR,IRR,IRR,IRR,IRR,IRR,22,
  22,IRR,IRR,IRR,IRR,IRR,IRR,32,32,IRR,IRR,IRR,IRR,IRR,IRR,IRR,IRR,IRR,IRR,IRR,
  IRR,IRR,IRR,28,28,IRR,IRR,IRR,IRR,IRR,IRR,IRR,IRR,IRR,IRR,IRR,IRR,IRR,IRR,IRR,
  IRR,IRR,IRR,IRR,IRR,IRR,IRR,IRR,IRR,IRR,IRR,IRR,IRR,IRR,IRR,IRR,IRR,IRR,IRR,IRR,
  IRR,IRR,IRR,26,26,IRR,IRR,IRR,IRR,IRR,IRR,IRR,IRR,IRR,IRR,IRR,IRR,IRR,IRR,23,
  23,
};



#define EsperantoUnicodeCharToOrderFirstTableChunkSize    58
#define EsperantoUnicodeCharToOrderSecondTableChunkOffset 128
#define EsperantoUnicodeCharToOrderSecondTableChunkSize   173


static const PRInt16 EsperantoUnicodeCharToOrder2[] =
{
  31,IRR,IRR,IRR,IRR,IRR,IRR,IRR,30,IRR,IRR,IRR,IRR,IRR,IRR,IRR,IRR,IRR,IRR,IRR,
  IRR,IRR,IRR,IRR,IRR,IRR,IRR,IRR,IRR,IRR,IRR,IRR,31,IRR,IRR,IRR,IRR,IRR,IRR,IRR,
  30,IRR,IRR,IRR,IRR,IRR,IRR,IRR,IRR,IRR,IRR,IRR,IRR,IRR,IRR,IRR,IRR,IRR,IRR,IRR,
  IRR,IRR,IRR,IRR,IRR,IRR,IRR,IRR,IRR,IRR,IRR,24,24,IRR,IRR,IRR,IRR,IRR,IRR,IRR,
  IRR,IRR,IRR,IRR,IRR,IRR,IRR,IRR,IRR,IRR,IRR,22,22,IRR,IRR,IRR,IRR,IRR,IRR,32,
  32,IRR,IRR,IRR,IRR,IRR,IRR,IRR,IRR,IRR,IRR,IRR,IRR,IRR,IRR,28,28,IRR,IRR,IRR,
  IRR,IRR,IRR,IRR,IRR,IRR,IRR,IRR,IRR,IRR,IRR,IRR,IRR,IRR,IRR,IRR,IRR,IRR,IRR,IRR,
  IRR,IRR,IRR,IRR,IRR,IRR,IRR,IRR,IRR,IRR,IRR,IRR,IRR,IRR,IRR,26,26,IRR,IRR,IRR,
  IRR,IRR,IRR,IRR,IRR,IRR,IRR,IRR,IRR,IRR,IRR,23,23,
};

static const PRUint8 EsperantoCompactedLangModel[] =
{
  3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,1,1,3,
  3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,3,3,3,3,1,3,1,1,2,
  3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,3,1,1,3,
  3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,1,3,2,3,2,1,3,2,2,2,
  3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,1,3,3,2,2,1,2,2,2,1,
  3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,1,3,3,3,3,2,2,3,2,3,
  3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,2,0,2,3,3,2,1,1,2,3,1,
  3,3,3,3,3,3,3,3,3,3,3,2,3,3,3,2,3,3,3,3,3,3,1,0,2,3,2,3,1,1,2,2,0,
  3,3,3,3,3,3,3,3,3,3,2,3,3,3,3,2,3,3,3,3,3,3,0,1,2,3,1,3,1,1,3,3,1,
  3,3,3,3,3,3,3,3,3,3,2,3,3,3,2,3,3,3,2,3,3,3,1,1,1,3,2,2,1,1,1,2,1,
  3,3,3,3,3,3,3,3,3,3,1,2,3,3,3,1,3,2,3,3,1,2,3,1,1,1,1,1,0,1,1,2,1,
  3,3,3,3,3,3,3,3,3,3,2,3,3,3,3,3,3,2,3,3,3,3,1,1,2,3,1,3,0,2,2,2,0,
  3,3,3,3,3,3,3,3,3,3,3,3,2,3,3,3,3,3,3,3,3,3,3,1,3,2,3,2,1,3,2,1,2,
  3,3,3,3,3,3,3,3,3,3,2,3,3,3,3,2,2,3,3,3,2,2,0,0,1,3,1,2,1,1,3,2,0,
  3,3,3,3,2,3,3,3,3,2,2,2,3,2,3,2,2,2,2,2,3,1,0,1,1,2,1,1,0,1,2,2,1,
  3,3,3,3,3,3,3,3,3,2,2,3,3,3,2,3,3,2,2,2,3,1,1,1,1,3,1,2,1,1,2,2,0,
  3,3,3,3,2,3,2,2,3,2,3,2,3,2,2,2,1,1,2,1,1,2,0,1,1,2,1,0,1,1,2,3,1,
  3,3,3,3,2,3,3,3,3,3,1,2,3,3,3,2,2,3,2,2,3,3,0,0,1,3,0,1,0,1,2,2,1,
  3,3,3,3,3,3,3,3,3,2,3,3,3,3,2,2,2,2,3,2,2,1,1,1,1,3,3,1,1,1,2,2,1,
  3,3,3,3,1,3,3,3,2,2,2,1,3,3,2,2,1,1,2,3,1,1,0,0,1,1,1,0,0,1,2,1,0,
  3,3,3,3,3,3,3,3,2,2,1,2,3,3,2,2,1,1,2,2,1,1,0,1,0,3,1,2,0,1,2,2,0,
  3,3,3,3,2,2,3,2,3,3,1,2,3,2,2,2,2,2,2,1,2,2,1,1,1,3,1,2,0,1,2,2,0,
  3,3,3,3,1,1,3,2,1,2,1,2,3,1,2,0,1,1,1,2,1,0,1,0,0,0,0,0,0,0,0,0,0,
  3,2,3,3,2,3,3,3,3,3,2,3,2,2,2,3,2,1,2,2,2,3,1,1,1,0,2,0,1,0,0,0,1,
  3,3,3,3,1,1,1,1,1,1,1,3,3,2,1,1,1,2,1,2,0,0,0,0,1,0,0,1,0,1,0,0,1,
  3,3,3,2,3,3,3,3,3,2,1,3,2,2,2,2,2,3,3,2,1,2,0,0,0,1,0,2,0,1,1,1,0,
  3,3,3,3,2,1,3,3,1,3,1,1,3,2,2,1,2,0,1,1,0,0,0,0,1,0,1,0,0,0,0,0,1,
  3,3,3,3,2,2,2,2,3,1,1,1,1,2,1,1,1,1,1,2,3,1,0,0,0,2,0,3,0,0,0,0,0,
  3,3,2,2,1,1,1,1,1,1,0,1,3,1,1,1,1,0,1,1,1,0,0,1,0,0,1,0,0,0,0,0,0,
  3,2,2,3,1,1,2,3,1,1,1,2,1,1,2,2,1,2,2,3,2,1,0,0,0,1,0,1,0,1,1,1,0,
  2,2,2,1,2,3,2,2,3,2,1,2,1,2,2,1,2,2,2,1,1,2,0,0,0,0,0,0,0,2,1,0,0,
  0,1,1,1,3,3,2,2,3,2,1,2,0,2,1,2,2,2,1,1,1,2,0,0,0,0,0,0,0,1,0,0,0,
  3,3,3,3,2,1,1,2,1,0,0,1,1,1,0,0,1,0,0,1,1,0,0,0,0,0,1,0,0,0,0,0,0,
};


const SequenceModel Iso_8859_3EsperantoModel =
{
  Iso_8859_3_CharToOrderMap,
  EsperantoCompactedLangModel,
  EsperantoOrderWidth,
  0.999003510972579f,
  PR_FALSE,
  "ISO-8859-3",
  "eo"
};

const LanguageModel EsperantoModel =
{
  "eo",
  Unicode_CharOrder,
  Unicode_Char_size,

  EsperantoFCMLowerBound,
  EsperantoFCMUpperBound,
  EsperantoUnicodeCharToOrderIsReduced,
  EsperantoUnicodeCharToOrder,
  EsperantoUnicodeCharToOrderFirstTableChunkSize,
  EsperantoUnicodeCharToOrderSecondTableChunkOffset,
  EsperantoUnicodeCharToOrderSecondTableChunkSize,
  EsperantoUnicodeCharToOrder2,
  OrderToRatio,
  EsperantoCompactedLangModel,
  EsperantoOrderWidth,
  5,
  0.4714445748787299f,
  19,
  0.034043348516444166f,
  0.9990309595926714f,
};
