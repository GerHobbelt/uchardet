/* -*- Mode: C++; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */
/* ***** BEGIN LICENSE BLOCK *****
 * Version: MPL 1.1/GPL 2.0/LGPL 2.1
 *
 * The contents of this file are subject to the Mozilla Public License Version
 * 1.1 (the "License"); you may not use this file except in compliance with
 * the License. You may obtain a copy of the License at
 * http://www.mozilla.org/MPL/
 *
 * Software distributed under the License is distributed on an "AS IS" basis,
 * WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
 * for the specific language governing rights and limitations under the
 * License.
 *
 * The Original Code is Mozilla Communicator client code.
 *
 * The Initial Developer of the Original Code is
 * Netscape Communications Corporation.
 * Portions created by the Initial Developer are Copyright (C) 1998
 * the Initial Developer. All Rights Reserved.
 *
 * Contributor(s):
 *
 * Alternatively, the contents of this file may be used under the terms of
 * either the GNU General Public License Version 2 or later (the "GPL"), or
 * the GNU Lesser General Public License Version 2.1 or later (the "LGPL"),
 * in which case the provisions of the GPL or the LGPL are applicable instead
 * of those above. If you wish to allow use of your version of this file only
 * under the terms of either the GPL or the LGPL, and not to allow others to
 * use your version of this file under the terms of the MPL, indicate your
 * decision by deleting the provisions above and replace them with the notice
 * and other provisions required by the GPL or the LGPL. If you do not delete
 * the provisions above, a recipient may use your version of this file under
 * the terms of any one of the MPL, the GPL or the LGPL.
 *
 * ***** END LICENSE BLOCK ***** */

#include "../nsSBCharSetProber.h"
#include "../nsSBCharSetProber-generated.h"
#include "../nsLanguageDetector.h"

#include "../nsLanguageDetector-generated.h"

/********* Language model for: Norwegian *********/

/**
 * Generated by BuildLangModel.py
 * On: 2023-07-08 23:28:37.984445
 **/

/* Character Mapping Table:
 * ILL: illegal character.
 * CTR: control character specific to the charset.
 * RET: carriage/return.
 * SYM: symbol (punctuation) that does not belong to word.
 * NUM: 0 - 9.
 * IRR: irrelevant character (which does belong to a word)
 *
 * Other characters are ordered by probabilities
 * (0 is the most common character in the language).
 *
 * Orders are generic to a language. So the codepoint with order X in
 * CHARSET1 maps to the same character as the codepoint with the same
 * order X in CHARSET2 for the same language.
 * As such, it is possible to get missing order. For instance the
 * ligature of 'o' and 'e' exists in ISO-8859-15 but not in ISO-8859-1
 * even though they are both used for French. Same for the euro sign.
 */



#define IRR                     (-1)

#define NorwegianOrderWidth        30


static const unsigned char Ibm865_CharToOrderMap[] =
{
  CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,RET,CTR,CTR,RET,CTR,CTR, /* 0X */
  CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR, /* 1X */
  SYM,SYM,SYM,SYM,SYM,SYM,SYM,SYM,SYM,SYM,SYM,SYM,SYM,SYM,SYM,SYM, /* 2X */
  NUM,NUM,NUM,NUM,NUM,NUM,NUM,NUM,NUM,NUM,SYM,SYM,SYM,SYM,SYM,SYM, /* 3X */
  SYM,  5, 17, 23,  9,  0, 14, 11, 18,  6, 21, 10,  8, 12,  2,  7, /* 4X */
   16, 29,  1,  4,  3, 15, 13, 25, 27, 20, 26,SYM,SYM,SYM,SYM,SYM, /* 5X */
  SYM,  5, 17, 23,  9,  0, 14, 11, 18,  6, 21, 10,  8, 12,  2,  7, /* 6X */
   16, 29,  1,  4,  3, 15, 13, 25, 27, 20, 26,SYM,SYM,SYM,SYM,CTR, /* 7X */
  249,249, 28,249,249,249, 19,249,249,249,249,249,249,249,249, 19, /* 8X */
   28, 24, 24,249,249,249,249,249,249,249,249, 22,SYM, 22,SYM,SYM, /* 9X */
  249,249,249,249,249,249,SYM,SYM,SYM,SYM,SYM,SYM,SYM,SYM,SYM,SYM, /* AX */
  SYM,SYM,SYM,SYM,SYM,SYM,SYM,SYM,SYM,SYM,SYM,SYM,SYM,SYM,SYM,SYM, /* BX */
  SYM,SYM,SYM,SYM,SYM,SYM,SYM,SYM,SYM,SYM,SYM,SYM,SYM,SYM,SYM,SYM, /* CX */
  SYM,SYM,SYM,SYM,SYM,SYM,SYM,SYM,SYM,SYM,SYM,SYM,SYM,SYM,SYM,SYM, /* DX */
  249,249,249,249,249,249,249,249,249,249,249,249,249,249,249,SYM, /* EX */
  SYM,SYM,SYM,SYM,SYM,SYM,SYM,SYM,SYM,SYM,SYM,SYM,SYM,SYM,SYM,SYM, /* FX */
};
/* X0  X1  X2  X3  X4  X5  X6  X7  X8  X9  XA  XB  XC  XD  XE  XF */

static const unsigned char Iso_8859_15_CharToOrderMap[] =
{
  CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,RET,CTR,CTR,RET,CTR,CTR, /* 0X */
  CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR, /* 1X */
  SYM,SYM,SYM,SYM,SYM,SYM,SYM,SYM,SYM,SYM,SYM,SYM,SYM,SYM,SYM,SYM, /* 2X */
  NUM,NUM,NUM,NUM,NUM,NUM,NUM,NUM,NUM,NUM,SYM,SYM,SYM,SYM,SYM,SYM, /* 3X */
  SYM,  5, 17, 23,  9,  0, 14, 11, 18,  6, 21, 10,  8, 12,  2,  7, /* 4X */
   16, 29,  1,  4,  3, 15, 13, 25, 27, 20, 26,SYM,SYM,SYM,SYM,SYM, /* 5X */
  SYM,  5, 17, 23,  9,  0, 14, 11, 18,  6, 21, 10,  8, 12,  2,  7, /* 6X */
   16, 29,  1,  4,  3, 15, 13, 25, 27, 20, 26,SYM,SYM,SYM,SYM,CTR, /* 7X */
  CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR, /* 8X */
  CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR, /* 9X */
  SYM,SYM,SYM,SYM,SYM,SYM,249,SYM,249,SYM,SYM,SYM,SYM,SYM,SYM,SYM, /* AX */
  SYM,SYM,SYM,SYM,249,249,SYM,SYM,249,SYM,SYM,SYM,249,249,249,SYM, /* BX */
  249,249,249,249,249, 19, 24,249,249, 28,249,249,249,249,249,249, /* CX */
  249,249,249,249,249,249,249,SYM, 22,249,249,249,249,249,249,249, /* DX */
  249,249,249,249,249, 19, 24,249,249, 28,249,249,249,249,249,249, /* EX */
  249,249,249,249,249,249,249,SYM, 22,249,249,249,249,249,249,249, /* FX */
};
/* X0  X1  X2  X3  X4  X5  X6  X7  X8  X9  XA  XB  XC  XD  XE  XF */

static const unsigned char Iso_8859_1_CharToOrderMap[] =
{
  CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,RET,CTR,CTR,RET,CTR,CTR, /* 0X */
  CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR, /* 1X */
  SYM,SYM,SYM,SYM,SYM,SYM,SYM,SYM,SYM,SYM,SYM,SYM,SYM,SYM,SYM,SYM, /* 2X */
  NUM,NUM,NUM,NUM,NUM,NUM,NUM,NUM,NUM,NUM,SYM,SYM,SYM,SYM,SYM,SYM, /* 3X */
  SYM,  5, 17, 23,  9,  0, 14, 11, 18,  6, 21, 10,  8, 12,  2,  7, /* 4X */
   16, 29,  1,  4,  3, 15, 13, 25, 27, 20, 26,SYM,SYM,SYM,SYM,SYM, /* 5X */
  SYM,  5, 17, 23,  9,  0, 14, 11, 18,  6, 21, 10,  8, 12,  2,  7, /* 6X */
   16, 29,  1,  4,  3, 15, 13, 25, 27, 20, 26,SYM,SYM,SYM,SYM,CTR, /* 7X */
  CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR, /* 8X */
  CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR, /* 9X */
  SYM,SYM,SYM,SYM,SYM,SYM,SYM,SYM,SYM,SYM,SYM,SYM,SYM,SYM,SYM,SYM, /* AX */
  SYM,SYM,SYM,SYM,SYM,249,SYM,SYM,SYM,SYM,SYM,SYM,SYM,SYM,SYM,SYM, /* BX */
  249,249,249,249,249, 19, 24,249,249, 28,249,249,249,249,249,249, /* CX */
  249,249,249,249,249,249,249,SYM, 22,249,249,249,249,249,249,249, /* DX */
  249,249,249,249,249, 19, 24,249,249, 28,249,249,249,249,249,249, /* EX */
  249,249,249,249,249,249,249,SYM, 22,249,249,249,249,249,249,249, /* FX */
};
/* X0  X1  X2  X3  X4  X5  X6  X7  X8  X9  XA  XB  XC  XD  XE  XF */

static const unsigned char Windows_1252_CharToOrderMap[] =
{
  CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,RET,CTR,CTR,RET,CTR,CTR, /* 0X */
  CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR, /* 1X */
  SYM,SYM,SYM,SYM,SYM,SYM,SYM,SYM,SYM,SYM,SYM,SYM,SYM,SYM,SYM,SYM, /* 2X */
  NUM,NUM,NUM,NUM,NUM,NUM,NUM,NUM,NUM,NUM,SYM,SYM,SYM,SYM,SYM,SYM, /* 3X */
  SYM,  5, 17, 23,  9,  0, 14, 11, 18,  6, 21, 10,  8, 12,  2,  7, /* 4X */
   16, 29,  1,  4,  3, 15, 13, 25, 27, 20, 26,SYM,SYM,SYM,SYM,SYM, /* 5X */
  SYM,  5, 17, 23,  9,  0, 14, 11, 18,  6, 21, 10,  8, 12,  2,  7, /* 6X */
   16, 29,  1,  4,  3, 15, 13, 25, 27, 20, 26,SYM,SYM,SYM,SYM,CTR, /* 7X */
  SYM,ILL,SYM,249,SYM,SYM,SYM,SYM,SYM,SYM,249,SYM,249,ILL,249,ILL, /* 8X */
  ILL,SYM,SYM,SYM,SYM,SYM,SYM,SYM,SYM,SYM,249,SYM,249,ILL,249,249, /* 9X */
  SYM,SYM,SYM,SYM,SYM,SYM,SYM,SYM,SYM,SYM,SYM,SYM,SYM,SYM,SYM,SYM, /* AX */
  SYM,SYM,SYM,SYM,SYM,249,SYM,SYM,SYM,SYM,SYM,SYM,SYM,SYM,SYM,SYM, /* BX */
  249,249,249,249,249, 19, 24,249,249, 28,249,249,249,249,249,249, /* CX */
  249,249,249,249,249,249,249,SYM, 22,249,249,249,249,249,249,249, /* DX */
  249,249,249,249,249, 19, 24,249,249, 28,249,249,249,249,249,249, /* EX */
  249,249,249,249,249,249,249,SYM, 22,249,249,249,249,249,249,249, /* FX */
};
/* X0  X1  X2  X3  X4  X5  X6  X7  X8  X9  XA  XB  XC  XD  XE  XF */

#define Unicode_Char_size    60

static const PRUint32 Unicode_CharOrder[] =
{
   65,  5,  66, 17,  67, 23,  68,  9,  69,  0,  70, 14,  71, 11,  72, 18,
   73,  6,  74, 21,  75, 10,  76,  8,  77, 12,  78,  2,  79,  7,  80, 16,
   81, 29,  82,  1,  83,  4,  84,  3,  85, 15,  86, 13,  87, 25,  88, 27,
   89, 20,  90, 26,  97,  5,  98, 17,  99, 23, 100,  9, 101,  0, 102, 14,
  103, 11, 104, 18, 105,  6, 106, 21, 107, 10, 108,  8, 109, 12, 110,  2,
  111,  7, 112, 16, 113, 29, 114,  1, 115,  4, 116,  3, 117, 15, 118, 13,
  119, 25, 120, 27, 121, 20, 122, 26, 197, 19, 198, 24, 201, 28, 216, 22,
  229, 19, 230, 24, 233, 28, 248, 22,
};

static const float OrderToRatio[] =
{
  0.151016431f,  0.085150251f,  0.081549983f,  0.077262199f,  0.067720502f,  0.064284380f,  0.063688678f,  0.054881745f, 
  0.052916368f,  0.040823822f,  0.036431314f,  0.035299092f,  0.033116476f,  0.023236744f,  0.020023219f,  0.018863720f, 
  0.018774827f,  0.016207904f,  0.014368925f,  0.009852455f,  0.008951110f,  0.008100908f,  0.007001320f,  0.005091957f, 
  0.001797577f,  0.001398413f,  0.000602034f,  0.000567694f,  0.000272035f,  0.000190936f, 
  0    /* value slot for out-of-bounds index values; range: 0..freq_count(30) */
};


/* Model Table:
 * Number of web pages processed for this model: 865
 * Number of characters consumed for this model: 4106083
 * Total considered sequences: 1334 / 900
 *
 * - Positive sequences: first 485 (0.9950135113611677)
 * - Probable sequences: next 202 (687-485) (0.003988115141958182)
 * - Neutral sequences: last 213 (0.0009983734968741498)
 * - Negative sequences: -434 (off-ratio, TODO)
 */
#define NorwegianUnicodeCharToOrderIsReduced  0


#define NorwegianFCMLowerBound  65
#define NorwegianFCMUpperBound  248


static const PRInt16 NorwegianUnicodeCharToOrder[] =
{
  5,17,23,9,0,14,11,18,6,21,10,8,12,2,7,16,29,1,4,3,
  15,13,25,27,20,26,IRR,IRR,IRR,IRR,IRR,IRR,5,17,23,9,0,14,11,18,
  6,21,10,8,12,2,7,16,29,1,4,3,15,13,25,27,20,26,IRR,IRR,
  IRR,IRR,IRR,IRR,IRR,IRR,IRR,IRR,IRR,IRR,IRR,IRR,IRR,IRR,IRR,IRR,IRR,IRR,IRR,IRR,
  IRR,IRR,IRR,IRR,IRR,IRR,IRR,IRR,IRR,IRR,IRR,IRR,IRR,IRR,IRR,IRR,IRR,IRR,IRR,IRR,
  IRR,IRR,IRR,IRR,IRR,IRR,IRR,IRR,IRR,IRR,IRR,IRR,IRR,IRR,IRR,IRR,IRR,IRR,IRR,IRR,
  IRR,IRR,IRR,IRR,IRR,IRR,IRR,IRR,IRR,IRR,IRR,IRR,19,24,IRR,IRR,28,IRR,IRR,IRR,
  IRR,IRR,IRR,IRR,IRR,IRR,IRR,IRR,IRR,IRR,IRR,22,IRR,IRR,IRR,IRR,IRR,IRR,IRR,IRR,
  IRR,IRR,IRR,IRR,19,24,IRR,IRR,28,IRR,IRR,IRR,IRR,IRR,IRR,IRR,IRR,IRR,IRR,IRR,
  IRR,IRR,IRR,22,
};



#define NorwegianUnicodeCharToOrderFirstTableChunkSize    58
#define NorwegianUnicodeCharToOrderSecondTableChunkOffset 132
#define NorwegianUnicodeCharToOrderSecondTableChunkSize   52


static const PRInt16 NorwegianUnicodeCharToOrder2[] =
{
  19,24,IRR,IRR,28,IRR,IRR,IRR,IRR,IRR,IRR,IRR,IRR,IRR,IRR,IRR,IRR,IRR,IRR,22,
  IRR,IRR,IRR,IRR,IRR,IRR,IRR,IRR,IRR,IRR,IRR,IRR,19,24,IRR,IRR,28,IRR,IRR,IRR,
  IRR,IRR,IRR,IRR,IRR,IRR,IRR,IRR,IRR,IRR,IRR,22,
};

static const PRUint8 NorwegianCompactedLangModel[] =
{
  3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,3,2,2,3,2,3,2,3,0,2,
  3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,2,2,2,2,2,
  3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,3,2,2,1,
  3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,3,1,2,1,
  3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,2,1,2,2,
  3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,1,3,3,1,3,0,3,3,3,2,2,
  3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,2,3,3,3,2,2,3,3,1,2,
  3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,1,3,3,1,3,0,3,2,3,1,1,
  3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,3,2,2,1,2,1,
  3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,3,3,3,3,3,3,2,2,2,2,0,2,1,
  3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,3,3,2,1,1,2,1,0,1,1,
  3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,3,3,3,3,3,2,1,1,2,1,1,1,1,
  3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,3,2,2,2,1,1,2,1,
  3,3,3,3,3,3,3,3,3,3,2,3,3,3,2,3,2,2,3,3,2,3,3,1,3,0,1,0,1,0,
  3,3,2,3,2,3,3,3,3,1,2,2,2,2,3,3,1,2,2,3,3,3,3,2,3,1,0,1,1,0,
  3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,3,3,2,1,2,2,1,3,1,2,2,2,1,1,
  3,3,3,3,3,3,3,3,3,3,2,3,2,2,3,3,3,2,3,3,3,2,2,2,1,1,1,1,2,1,
  3,3,3,2,3,3,3,3,3,2,1,1,2,1,2,3,1,3,2,3,3,3,3,3,3,2,0,0,1,0,
  3,3,3,3,3,3,3,3,3,2,2,1,3,3,2,3,1,2,2,3,3,3,3,2,3,2,1,0,1,1,
  3,3,3,3,3,1,2,1,3,3,3,3,2,3,2,1,3,2,1,1,0,0,1,0,0,0,0,0,0,0,
  3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,3,3,2,1,1,1,1,3,1,2,1,1,0,1,
  3,2,2,2,2,3,3,3,1,2,2,1,1,1,2,3,1,1,1,2,1,1,3,1,3,0,0,0,1,0,
  3,3,3,3,3,1,2,1,3,3,3,2,3,3,2,1,3,2,2,0,3,1,1,0,1,0,0,0,0,0,
  3,3,2,3,3,3,3,3,3,2,3,2,2,1,1,3,2,2,3,0,3,1,1,3,3,1,1,0,1,2,
  1,3,2,2,3,0,1,1,2,2,1,2,1,1,2,1,2,1,1,0,1,0,0,1,0,0,0,0,0,0,
  3,2,2,2,2,3,3,3,2,1,1,1,1,0,2,2,1,2,3,0,1,1,1,1,1,2,0,0,0,0,
  3,1,1,2,1,3,3,3,1,1,1,1,2,1,1,2,1,1,3,0,2,2,0,1,1,1,2,0,1,1,
  2,1,1,2,1,2,3,2,1,1,1,1,1,1,2,2,2,1,1,0,2,0,0,2,0,1,0,2,1,0,
  2,2,3,2,2,1,1,2,1,1,1,2,1,1,1,1,1,1,1,0,0,0,0,1,0,0,1,1,0,1,
  1,1,0,1,1,2,2,1,1,1,0,1,0,1,1,3,0,1,0,0,0,1,0,1,0,0,0,0,0,1,
};


const SequenceModel Ibm865NorwegianModel =
{
  Ibm865_CharToOrderMap,
  NorwegianCompactedLangModel,
  NorwegianOrderWidth,
  0.9990016265031259f,
  PR_TRUE,
  "IBM865",
  "no"
};

const SequenceModel Iso_8859_15NorwegianModel =
{
  Iso_8859_15_CharToOrderMap,
  NorwegianCompactedLangModel,
  NorwegianOrderWidth,
  0.9990016265031259f,
  PR_TRUE,
  "ISO-8859-15",
  "no"
};

const SequenceModel Iso_8859_1NorwegianModel =
{
  Iso_8859_1_CharToOrderMap,
  NorwegianCompactedLangModel,
  NorwegianOrderWidth,
  0.9990016265031259f,
  PR_TRUE,
  "ISO-8859-1",
  "no"
};

const SequenceModel Windows_1252NorwegianModel =
{
  Windows_1252_CharToOrderMap,
  NorwegianCompactedLangModel,
  NorwegianOrderWidth,
  0.9990016265031259f,
  PR_TRUE,
  "WINDOWS-1252",
  "no"
};

const LanguageModel NorwegianModel =
{
  "no",
  Unicode_CharOrder,
  Unicode_Char_size,

  NorwegianFCMLowerBound,
  NorwegianFCMUpperBound,
  NorwegianUnicodeCharToOrderIsReduced,
  NorwegianUnicodeCharToOrder,
  NorwegianUnicodeCharToOrderFirstTableChunkSize,
  NorwegianUnicodeCharToOrderSecondTableChunkOffset,
  NorwegianUnicodeCharToOrderSecondTableChunkSize,
  NorwegianUnicodeCharToOrder2,
  OrderToRatio,
  NorwegianCompactedLangModel,
  NorwegianOrderWidth,
  5,
  0.4626993657946027f,
  19,
  0.033973984451848634f,
  0.9994430214878754f,
};
