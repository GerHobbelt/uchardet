/* -*- Mode: C++; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */
/* ***** BEGIN LICENSE BLOCK *****
 * Version: MPL 1.1/GPL 2.0/LGPL 2.1
 *
 * The contents of this file are subject to the Mozilla Public License Version
 * 1.1 (the "License"); you may not use this file except in compliance with
 * the License. You may obtain a copy of the License at
 * http://www.mozilla.org/MPL/
 *
 * Software distributed under the License is distributed on an "AS IS" basis,
 * WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
 * for the specific language governing rights and limitations under the
 * License.
 *
 * The Original Code is Mozilla Communicator client code.
 *
 * The Initial Developer of the Original Code is
 * Netscape Communications Corporation.
 * Portions created by the Initial Developer are Copyright (C) 1998
 * the Initial Developer. All Rights Reserved.
 *
 * Contributor(s):
 *
 * Alternatively, the contents of this file may be used under the terms of
 * either the GNU General Public License Version 2 or later (the "GPL"), or
 * the GNU Lesser General Public License Version 2.1 or later (the "LGPL"),
 * in which case the provisions of the GPL or the LGPL are applicable instead
 * of those above. If you wish to allow use of your version of this file only
 * under the terms of either the GPL or the LGPL, and not to allow others to
 * use your version of this file under the terms of the MPL, indicate your
 * decision by deleting the provisions above and replace them with the notice
 * and other provisions required by the GPL or the LGPL. If you do not delete
 * the provisions above, a recipient may use your version of this file under
 * the terms of any one of the MPL, the GPL or the LGPL.
 *
 * ***** END LICENSE BLOCK ***** */

#include "../nsSBCharSetProber.h"
#include "../nsSBCharSetProber-generated.h"
#include "../nsLanguageDetector.h"

#include "../nsLanguageDetector-generated.h"

/********* Language model for: Croatian *********/

/**
 * Generated by BuildLangModel.py
 * On: 2023-07-06 20:55:34.320038
 **/

/* Character Mapping Table:
 * ILL: illegal character.
 * CTR: control character specific to the charset.
 * RET: carriage/return.
 * SYM: symbol (punctuation) that does not belong to word.
 * NUM: 0 - 9.
 *
 * Other characters are ordered by probabilities
 * (0 is the most common character in the language).
 *
 * Orders are generic to a language. So the codepoint with order X in
 * CHARSET1 maps to the same character as the codepoint with the same
 * order X in CHARSET2 for the same language.
 * As such, it is possible to get missing order. For instance the
 * ligature of 'o' and 'e' exists in ISO-8859-15 but not in ISO-8859-1
 * even though they are both used for French. Same for the euro sign.
 */
static const unsigned char Iso_8859_2_CharToOrderMap[] =
{
  CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,RET,CTR,CTR,RET,CTR,CTR, /* 0X */
  CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR, /* 1X */
  SYM,SYM,SYM,SYM,SYM,SYM,SYM,SYM,SYM,SYM,SYM,SYM,SYM,SYM,SYM,SYM, /* 2X */
  NUM,NUM,NUM,NUM,NUM,NUM,NUM,NUM,NUM,NUM,SYM,SYM,SYM,SYM,SYM,SYM, /* 3X */
  SYM,  0, 18, 19, 13,  3, 25, 16, 20,  1,  7, 10, 11, 14,  4,  2, /* 4X */
   15, 31,  5,  6,  8,  9, 12, 28, 29, 27, 17,SYM,SYM,SYM,SYM,SYM, /* 5X */
  SYM,  0, 18, 19, 13,  3, 25, 16, 20,  1,  7, 10, 11, 14,  4,  2, /* 6X */
   15, 31,  5,  6,  8,  9, 12, 28, 29, 27, 17,SYM,SYM,SYM,SYM,CTR, /* 7X */
  CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR, /* 8X */
  CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR, /* 9X */
  SYM, 75,SYM, 52,SYM, 78, 76,SYM,SYM, 22, 48, 85, 74,SYM, 23, 69, /* AX */
  SYM, 75,SYM, 52,SYM, 78, 76,SYM,SYM, 22, 48, 86, 74,SYM, 23, 69, /* BX */
   87, 32, 39, 40, 34, 88, 24, 43, 21, 30, 77, 59, 70, 38, 44, 89, /* CX */
   26, 71, 80, 37, 42, 62, 36,SYM, 63, 90, 49, 73, 33, 60, 83, 67, /* DX */
   91, 32, 39, 40, 34, 92, 24, 43, 21, 30, 77, 59, 70, 38, 44, 93, /* EX */
   26, 71, 80, 37, 42, 62, 36,SYM, 63, 94, 49, 73, 33, 60, 83,SYM, /* FX */
};
/* X0  X1  X2  X3  X4  X5  X6  X7  X8  X9  XA  XB  XC  XD  XE  XF */

static const unsigned char Iso_8859_13_CharToOrderMap[] =
{
  CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,RET,CTR,CTR,RET,CTR,CTR, /* 0X */
  CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR, /* 1X */
  SYM,SYM,SYM,SYM,SYM,SYM,SYM,SYM,SYM,SYM,SYM,SYM,SYM,SYM,SYM,SYM, /* 2X */
  NUM,NUM,NUM,NUM,NUM,NUM,NUM,NUM,NUM,NUM,SYM,SYM,SYM,SYM,SYM,SYM, /* 3X */
  SYM,  0, 18, 19, 13,  3, 25, 16, 20,  1,  7, 10, 11, 14,  4,  2, /* 4X */
   15, 31,  5,  6,  8,  9, 12, 28, 29, 27, 17,SYM,SYM,SYM,SYM,SYM, /* 5X */
  SYM,  0, 18, 19, 13,  3, 25, 16, 20,  1,  7, 10, 11, 14,  4,  2, /* 6X */
   15, 31,  5,  6,  8,  9, 12, 28, 29, 27, 17,SYM,SYM,SYM,SYM,CTR, /* 7X */
  CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR, /* 8X */
  CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR, /* 9X */
  SYM,SYM,SYM,SYM,SYM,SYM,SYM,SYM, 54,SYM, 95,SYM,SYM,SYM,SYM, 53, /* AX */
  SYM,SYM,SYM,SYM,SYM,SYM,SYM,SYM, 54,SYM, 96,SYM,SYM,SYM,SYM, 53, /* BX */
   75, 97, 35, 24, 34, 58, 77, 61, 21, 30, 74, 98, 84, 99, 46,100, /* CX */
   22, 71, 82, 37, 50, 45, 36,SYM,101, 52, 76, 55, 33, 69, 23, 67, /* DX */
   75,102, 35, 24, 34, 58, 77, 61, 21, 30, 74,103, 84,104, 46,105, /* EX */
   22, 71, 82, 37, 50, 45, 36,SYM,106, 52, 76, 55, 33, 69, 23,SYM, /* FX */
};
/* X0  X1  X2  X3  X4  X5  X6  X7  X8  X9  XA  XB  XC  XD  XE  XF */

static const unsigned char Iso_8859_16_CharToOrderMap[] =
{
  CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,RET,CTR,CTR,RET,CTR,CTR, /* 0X */
  CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR, /* 1X */
  SYM,SYM,SYM,SYM,SYM,SYM,SYM,SYM,SYM,SYM,SYM,SYM,SYM,SYM,SYM,SYM, /* 2X */
  NUM,NUM,NUM,NUM,NUM,NUM,NUM,NUM,NUM,NUM,SYM,SYM,SYM,SYM,SYM,SYM, /* 3X */
  SYM,  0, 18, 19, 13,  3, 25, 16, 20,  1,  7, 10, 11, 14,  4,  2, /* 4X */
   15, 31,  5,  6,  8,  9, 12, 28, 29, 27, 17,SYM,SYM,SYM,SYM,SYM, /* 5X */
  SYM,  0, 18, 19, 13,  3, 25, 16, 20,  1,  7, 10, 11, 14,  4,  2, /* 6X */
   15, 31,  5,  6,  8,  9, 12, 28, 29, 27, 17,SYM,SYM,SYM,SYM,CTR, /* 7X */
  CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR, /* 8X */
  CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR, /* 9X */
  SYM, 75, 75, 52,SYM,SYM, 22,SYM, 22,SYM, 51,SYM, 74,SYM, 74, 69, /* AX */
  SYM,SYM, 21, 52, 23,SYM,SYM,SYM, 23, 21, 51,SYM, 72, 72, 81, 69, /* BX */
   56, 32, 39, 40, 34, 24, 53, 43, 41, 30, 47, 59, 68, 38, 44, 64, /* CX */
   26, 71, 79, 37, 42, 62, 36, 76, 73, 65, 49, 66, 33, 77, 57, 67, /* DX */
   56, 32, 39, 40, 34, 24, 53, 43, 41, 30, 47, 59, 68, 38, 44, 64, /* EX */
   26, 71, 79, 37, 42, 62, 36, 76, 73, 65, 49, 66, 33, 77, 57, 81, /* FX */
};
/* X0  X1  X2  X3  X4  X5  X6  X7  X8  X9  XA  XB  XC  XD  XE  XF */

static const unsigned char Windows_1250_CharToOrderMap[] =
{
  CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,RET,CTR,CTR,RET,CTR,CTR, /* 0X */
  CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR, /* 1X */
  SYM,SYM,SYM,SYM,SYM,SYM,SYM,SYM,SYM,SYM,SYM,SYM,SYM,SYM,SYM,SYM, /* 2X */
  NUM,NUM,NUM,NUM,NUM,NUM,NUM,NUM,NUM,NUM,SYM,SYM,SYM,SYM,SYM,SYM, /* 3X */
  SYM,  0, 18, 19, 13,  3, 25, 16, 20,  1,  7, 10, 11, 14,  4,  2, /* 4X */
   15, 31,  5,  6,  8,  9, 12, 28, 29, 27, 17,SYM,SYM,SYM,SYM,SYM, /* 5X */
  SYM,  0, 18, 19, 13,  3, 25, 16, 20,  1,  7, 10, 11, 14,  4,  2, /* 6X */
   15, 31,  5,  6,  8,  9, 12, 28, 29, 27, 17,SYM,SYM,SYM,SYM,CTR, /* 7X */
  SYM,ILL,SYM,ILL,SYM,SYM,SYM,SYM,ILL,SYM, 22,SYM, 76,107, 23, 74, /* 8X */
  ILL,SYM,SYM,SYM,SYM,SYM,SYM,SYM,ILL,SYM, 22,SYM, 76,108, 23, 74, /* 9X */
  SYM,SYM,SYM, 52,SYM, 75,SYM,SYM,SYM,SYM, 48,SYM,SYM,SYM,SYM, 69, /* AX */
  SYM,SYM,SYM, 52,SYM,SYM,SYM,SYM,SYM, 75, 48,SYM, 78,SYM, 78, 69, /* BX */
  109, 32, 39, 40, 34,110, 24, 43, 21, 30, 77, 59, 70, 38, 44,111, /* CX */
   26, 71, 80, 37, 42, 62, 36,SYM, 63,112, 49, 73, 33, 60, 83, 67, /* DX */
  113, 32, 39, 40, 34,114, 24, 43, 21, 30, 77, 59, 70, 38, 44,115, /* EX */
   26, 71, 80, 37, 42, 62, 36,SYM, 63,116, 49, 73, 33, 60, 83,SYM, /* FX */
};
/* X0  X1  X2  X3  X4  X5  X6  X7  X8  X9  XA  XB  XC  XD  XE  XF */

static const unsigned char Ibm852_CharToOrderMap[] =
{
  CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,RET,CTR,CTR,RET,CTR,CTR, /* 0X */
  CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR, /* 1X */
  SYM,SYM,SYM,SYM,SYM,SYM,SYM,SYM,SYM,SYM,SYM,SYM,SYM,SYM,SYM,SYM, /* 2X */
  NUM,NUM,NUM,NUM,NUM,NUM,NUM,NUM,NUM,NUM,SYM,SYM,SYM,SYM,SYM,SYM, /* 3X */
  SYM,  0, 18, 19, 13,  3, 25, 16, 20,  1,  7, 10, 11, 14,  4,  2, /* 4X */
   15, 31,  5,  6,  8,  9, 12, 28, 29, 27, 17,SYM,SYM,SYM,SYM,SYM, /* 5X */
  SYM,  0, 18, 19, 13,  3, 25, 16, 20,  1,  7, 10, 11, 14,  4,  2, /* 6X */
   15, 31,  5,  6,  8,  9, 12, 28, 29, 27, 17,SYM,SYM,SYM,SYM,CTR, /* 7X */
   43, 33, 30, 39, 34,117, 24, 43, 52, 59, 62, 62, 44, 74, 34, 24, /* 8X */
   30,118,119, 42, 36, 78, 78, 76, 76, 36, 33,120,121, 52,SYM, 21, /* 9X */
   32, 38, 37, 49, 75, 75, 23, 23, 77, 77,SYM, 74, 21, 48,SYM,SYM, /* AX */
  SYM,SYM,SYM,SYM,SYM, 32, 39, 70, 48,SYM,SYM,SYM,SYM, 69, 69,SYM, /* BX */
  SYM,SYM,SYM,SYM,SYM,SYM, 40, 40,SYM,SYM,SYM,SYM,SYM,SYM,SYM,SYM, /* CX */
   26, 26,122, 59,123, 80, 38, 44, 70,SYM,SYM,SYM,SYM, 83,124,SYM, /* DX */
   37, 67, 42, 71, 71, 80, 22, 22,125, 49,126, 73, 60, 60, 83,SYM, /* EX */
  SYM,SYM,SYM,SYM,SYM,SYM,SYM,SYM,SYM,SYM,SYM, 73, 63, 63,SYM,SYM, /* FX */
};
/* X0  X1  X2  X3  X4  X5  X6  X7  X8  X9  XA  XB  XC  XD  XE  XF */

static const unsigned char Maccentraleurope_CharToOrderMap[] =
{
  CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,RET,CTR,CTR,RET,CTR,CTR, /* 0X */
  CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR, /* 1X */
  SYM,SYM,SYM,SYM,SYM,SYM,SYM,SYM,SYM,SYM,SYM,SYM,SYM,SYM,SYM,SYM, /* 2X */
  NUM,NUM,NUM,NUM,NUM,NUM,NUM,NUM,NUM,NUM,SYM,SYM,SYM,SYM,SYM,SYM, /* 3X */
  SYM,  0, 18, 19, 13,  3, 25, 16, 20,  1,  7, 10, 11, 14,  4,  2, /* 4X */
   15, 31,  5,  6,  8,  9, 12, 28, 29, 27, 17,SYM,SYM,SYM,SYM,SYM, /* 5X */
  SYM,  0, 18, 19, 13,  3, 25, 16, 20,  1,  7, 10, 11, 14,  4,  2, /* 6X */
   15, 31,  5,  6,  8,  9, 12, 28, 29, 27, 17,SYM,SYM,SYM,SYM,CTR, /* 7X */
   34, 35, 35, 30, 75, 36, 33, 32, 75, 21, 34, 21, 24, 24, 30, 74, /* 8X */
   74,127, 38,128, 61, 61,129, 37,130, 42, 36, 45, 49, 70, 70, 33, /* 9X */
  SYM,SYM, 77,SYM,SYM,SYM,SYM, 67,SYM,SYM,SYM, 77,SYM,SYM, 84,131, /* AX */
  132, 46,SYM,SYM, 46,133,SYM,SYM, 52,134,135, 78, 78,136,137, 82, /* BX */
   82, 71,SYM,SYM, 71, 80,SYM,SYM,SYM,SYM,SYM, 80, 62, 45, 62, 50, /* CX */
  SYM,SYM,SYM,SYM,SYM,SYM,SYM,SYM, 50,138,139, 63,SYM,SYM, 63,140, /* DX */
  141, 22,SYM,SYM, 22, 76, 76, 32,142,143, 38, 23, 23, 55, 37, 42, /* EX */
   55,144, 49,145, 73, 73,146,147, 60, 60,148, 69, 52, 69, 84,SYM, /* FX */
};
/* X0  X1  X2  X3  X4  X5  X6  X7  X8  X9  XA  XB  XC  XD  XE  XF */

static const int Unicode_Char_size = 64;
static const unsigned int Unicode_CharOrder[] =
{
  65,  0, 66, 18, 67, 19, 68, 13, 69,  3, 70, 25, 71, 16, 72, 20,
  73,  1, 74,  7, 75, 10, 76, 11, 77, 14, 78,  4, 79,  2, 80, 15,
  81, 31, 82,  5, 83,  6, 84,  8, 85,  9, 86, 12, 87, 28, 88, 29,
  89, 27, 90, 17, 97,  0, 98, 18, 99, 19, 100, 13, 101,  3, 102, 25,
  103, 16, 104, 20, 105,  1, 106,  7, 107, 10, 108, 11, 109, 14, 110,  4,
  111,  2, 112, 15, 113, 31, 114,  5, 115,  6, 116,  8, 117,  9, 118, 12,
  119, 28, 120, 29, 121, 27, 122, 17, 201, 30, 233, 30, 262, 24, 263, 24,
  268, 21, 269, 21, 272, 26, 273, 26, 352, 22, 353, 22, 381, 23, 382, 23,
};


/* Model Table:
 * Number of web pages processed for this model: 1027
 * Number of characters consumed for this model: 4092342
 * Total considered sequences: 1631 / 1024
 *
 * - Positive sequences: first 501 (0.9950126609233998)
 * - Probable sequences: next 267 (768-501) (0.003989514364214575)
 * - Neutral sequences: last 256 (0.000997824712385631)
 * - Negative sequences: -607 (off-ratio, TODO)
 */


#define CroatianFCMLowerBound  97
#define CroatianFCMUpperBound  382


static const PRUint8 CroatianFrequentCharMapping[] =
{
  1,19,20,14,4,26,17,21,2,8,11,12,15,5,3,16,32,6,7,9,
  10,13,29,30,28,18,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
  0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
  0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
  0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
  0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
  0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,31,0,0,0,
  0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
  0,0,0,0,0,0,25,0,0,0,0,0,22,0,0,0,27,0,0,0,
  0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
  0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
  0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
  0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,23,0,0,0,
  0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
  0,0,0,0,0,24,
};

static const PRUint8 CroatianCompactedLangModel[] =
{
  0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
  
  0,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,1,2,
  
  0,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,2,3,1,2,
  
  0,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,1,2,
  
  0,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,0,2,
  
  0,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,3,3,3,3,3,3,3,2,2,1,3,2,3,2,2,2,2,
  
  0,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,3,3,3,3,1,2,2,
  
  0,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,2,3,3,3,1,0,0,0,3,0,3,3,1,2,2,
  
  0,3,3,3,3,3,2,3,2,2,3,3,2,3,3,3,3,2,3,3,3,2,3,2,1,0,2,0,1,1,1,1,0,
  
  0,3,3,3,3,3,3,3,3,3,3,3,3,3,2,3,3,2,3,2,3,3,1,1,0,0,2,0,3,2,1,2,1,
  
  0,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,2,2,1,
  
  0,3,3,3,3,3,3,3,2,3,3,2,3,3,2,3,2,2,1,2,3,3,2,3,0,2,2,0,3,3,1,1,1,
  
  0,3,3,3,3,3,2,3,3,3,3,3,3,3,3,3,3,3,2,3,3,3,2,2,2,0,3,0,3,2,2,2,1,
  
  0,3,3,3,3,3,3,3,3,1,3,3,3,1,3,1,1,2,1,1,3,1,2,3,0,1,1,1,2,1,0,1,1,
  
  0,3,3,3,3,3,3,3,3,3,3,2,3,3,3,3,2,3,3,3,2,3,1,2,3,0,2,0,3,3,0,2,1,
  
  0,3,3,3,3,3,3,3,3,2,3,3,3,2,3,3,3,2,2,3,3,2,3,2,0,2,2,0,3,2,1,2,1,
  
  0,3,3,3,3,3,3,3,3,3,3,2,3,1,2,2,3,1,2,2,3,3,2,3,1,3,2,0,2,2,1,2,1,
  
  0,3,3,3,3,3,3,3,2,2,3,2,3,3,3,3,2,3,2,3,3,3,0,1,1,0,2,1,2,2,1,1,1,
  
  0,3,3,3,3,3,3,2,3,2,3,2,3,3,3,3,1,3,2,3,1,3,0,0,1,0,1,0,2,2,1,1,1,
  
  0,3,3,3,3,3,3,3,3,2,3,2,3,2,3,2,1,1,3,3,2,2,1,0,1,1,1,0,3,2,1,2,1,
  
  0,3,3,3,3,2,3,2,3,3,3,3,3,3,2,2,2,2,2,2,3,3,0,0,0,0,2,0,3,1,1,2,2,
  
  0,3,3,3,3,3,3,3,1,3,3,2,3,3,2,3,2,1,1,2,2,2,1,1,1,0,2,0,3,2,1,2,1,
  
  0,3,3,3,3,3,1,0,3,1,3,3,3,3,0,1,0,0,0,0,2,1,0,0,0,1,0,0,0,0,0,0,0,
  
  0,3,3,3,3,3,1,1,2,3,3,3,3,3,1,2,3,1,0,1,2,2,2,0,0,3,0,0,0,0,0,0,0,
  
  0,3,3,2,3,3,2,1,3,0,3,1,2,1,3,2,1,1,0,3,0,0,0,0,0,0,0,2,0,0,0,0,0,
  
  0,3,3,3,3,3,1,1,0,0,3,2,2,0,1,1,0,1,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,
  
  0,3,3,3,3,2,3,3,1,3,3,2,3,1,1,2,1,2,2,2,2,1,0,1,1,0,3,0,2,1,1,1,1,
  
  0,3,3,2,3,1,0,1,0,0,3,0,0,0,0,2,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,
  
  0,3,2,3,3,3,3,3,3,2,3,2,3,2,2,2,2,2,1,2,2,2,0,0,0,0,1,0,1,2,2,1,1,
  
  0,3,3,3,3,3,2,2,1,2,3,1,2,1,1,2,1,1,1,2,1,3,1,0,0,0,1,0,2,2,1,1,0,
  
  0,3,3,2,2,1,1,1,0,2,2,1,1,2,1,1,2,1,1,1,2,1,0,0,0,0,2,0,2,2,2,0,1,
  
  0,2,1,2,2,2,2,2,1,2,1,1,2,2,2,2,2,2,0,1,2,0,0,0,0,0,1,0,0,0,1,1,0,
  
  0,2,2,1,1,1,1,1,1,1,3,0,1,1,1,1,1,0,1,1,1,0,0,0,0,0,1,0,0,1,0,0,1,
  
};


const SequenceModel Iso_8859_2CroatianModel =
{
  Iso_8859_2_CharToOrderMap,
  CroatianFCMLowerBound,
  CroatianFCMUpperBound,
  CroatianFrequentCharMapping,
  CroatianCompactedLangModel,
  32,
  (float)0.9990021752876144,
  PR_TRUE,
  "ISO-8859-2",
  "hr"
};

const SequenceModel Iso_8859_13CroatianModel =
{
  Iso_8859_13_CharToOrderMap,
  CroatianFCMLowerBound,
  CroatianFCMUpperBound,
  CroatianFrequentCharMapping,
  CroatianCompactedLangModel,
  32,
  (float)0.9990021752876144,
  PR_TRUE,
  "ISO-8859-13",
  "hr"
};

const SequenceModel Iso_8859_16CroatianModel =
{
  Iso_8859_16_CharToOrderMap,
  CroatianFCMLowerBound,
  CroatianFCMUpperBound,
  CroatianFrequentCharMapping,
  CroatianCompactedLangModel,
  32,
  (float)0.9990021752876144,
  PR_TRUE,
  "ISO-8859-16",
  "hr"
};

const SequenceModel Windows_1250CroatianModel =
{
  Windows_1250_CharToOrderMap,
  CroatianFCMLowerBound,
  CroatianFCMUpperBound,
  CroatianFrequentCharMapping,
  CroatianCompactedLangModel,
  32,
  (float)0.9990021752876144,
  PR_TRUE,
  "WINDOWS-1250",
  "hr"
};

const SequenceModel Ibm852CroatianModel =
{
  Ibm852_CharToOrderMap,
  CroatianFCMLowerBound,
  CroatianFCMUpperBound,
  CroatianFrequentCharMapping,
  CroatianCompactedLangModel,
  32,
  (float)0.9990021752876144,
  PR_TRUE,
  "IBM852",
  "hr"
};

const SequenceModel MaccentraleuropeCroatianModel =
{
  Maccentraleurope_CharToOrderMap,
  CroatianFCMLowerBound,
  CroatianFCMUpperBound,
  CroatianFrequentCharMapping,
  CroatianCompactedLangModel,
  32,
  (float)0.9990021752876144,
  PR_TRUE,
  "MacCentralEurope",
  "hr"
};

const LanguageModel CroatianModel =
{
  "hr",
  Unicode_CharOrder,
  64,
  CroatianFCMLowerBound,
  CroatianFCMUpperBound,
  CroatianFrequentCharMapping,
  CroatianCompactedLangModel,
  32,
  5,
  (float)0.45042081038192805,
  20,
  (float)0.03462907059087437,
  (float)0.9993570918559594,
};
