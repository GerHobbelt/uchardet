/* -*- Mode: C++; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */
/* ***** BEGIN LICENSE BLOCK *****
 * Version: MPL 1.1/GPL 2.0/LGPL 2.1
 *
 * The contents of this file are subject to the Mozilla Public License Version
 * 1.1 (the "License"); you may not use this file except in compliance with
 * the License. You may obtain a copy of the License at
 * http://www.mozilla.org/MPL/
 *
 * Software distributed under the License is distributed on an "AS IS" basis,
 * WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
 * for the specific language governing rights and limitations under the
 * License.
 *
 * The Original Code is Mozilla Communicator client code.
 *
 * The Initial Developer of the Original Code is
 * Netscape Communications Corporation.
 * Portions created by the Initial Developer are Copyright (C) 1998
 * the Initial Developer. All Rights Reserved.
 *
 * Contributor(s):
 *
 * Alternatively, the contents of this file may be used under the terms of
 * either the GNU General Public License Version 2 or later (the "GPL"), or
 * the GNU Lesser General Public License Version 2.1 or later (the "LGPL"),
 * in which case the provisions of the GPL or the LGPL are applicable instead
 * of those above. If you wish to allow use of your version of this file only
 * under the terms of either the GPL or the LGPL, and not to allow others to
 * use your version of this file under the terms of the MPL, indicate your
 * decision by deleting the provisions above and replace them with the notice
 * and other provisions required by the GPL or the LGPL. If you do not delete
 * the provisions above, a recipient may use your version of this file under
 * the terms of any one of the MPL, the GPL or the LGPL.
 *
 * ***** END LICENSE BLOCK ***** */

#include "../nsSBCharSetProber.h"
#include "../nsSBCharSetProber-generated.h"
#include "../nsLanguageDetector.h"

#include "../nsLanguageDetector-generated.h"

/********* Language model for: Croatian *********/

/**
 * Generated by BuildLangModel.py
 * On: 2023-07-06 22:42:40.493875
 **/

/* Character Mapping Table:
 * ILL: illegal character.
 * CTR: control character specific to the charset.
 * RET: carriage/return.
 * SYM: symbol (punctuation) that does not belong to word.
 * NUM: 0 - 9.
 *
 * Other characters are ordered by probabilities
 * (0 is the most common character in the language).
 *
 * Orders are generic to a language. So the codepoint with order X in
 * CHARSET1 maps to the same character as the codepoint with the same
 * order X in CHARSET2 for the same language.
 * As such, it is possible to get missing order. For instance the
 * ligature of 'o' and 'e' exists in ISO-8859-15 but not in ISO-8859-1
 * even though they are both used for French. Same for the euro sign.
 */
static const unsigned char Iso_8859_2_CharToOrderMap[] =
{
  CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,RET,CTR,CTR,RET,CTR,CTR, /* 0X */
  CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR, /* 1X */
  SYM,SYM,SYM,SYM,SYM,SYM,SYM,SYM,SYM,SYM,SYM,SYM,SYM,SYM,SYM,SYM, /* 2X */
  NUM,NUM,NUM,NUM,NUM,NUM,NUM,NUM,NUM,NUM,SYM,SYM,SYM,SYM,SYM,SYM, /* 3X */
  SYM,  0, 18, 19, 13,  3, 25, 16, 20,  1,  7, 10, 11, 14,  4,  2, /* 4X */
   15, 31,  5,  6,  8,  9, 12, 28, 29, 27, 17,SYM,SYM,SYM,SYM,SYM, /* 5X */
  SYM,  0, 18, 19, 13,  3, 25, 16, 20,  1,  7, 10, 11, 14,  4,  2, /* 6X */
   15, 31,  5,  6,  8,  9, 12, 28, 29, 27, 17,SYM,SYM,SYM,SYM,CTR, /* 7X */
  CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR, /* 8X */
  CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR, /* 9X */
  SYM, 73,SYM, 55,SYM, 78, 74,SYM,SYM, 22, 49, 85, 71,SYM, 23, 69, /* AX */
  SYM, 73,SYM, 55,SYM, 78, 74,SYM,SYM, 22, 49, 86, 71,SYM, 23, 69, /* BX */
   87, 32, 37, 40, 34, 88, 24, 45, 21, 30, 77, 60, 72, 39, 43, 89, /* CX */
   26, 70, 80, 38, 41, 62, 36,SYM, 65, 90, 50, 76, 33, 59, 83, 66, /* DX */
   91, 32, 37, 40, 34, 92, 24, 45, 21, 30, 77, 60, 72, 39, 43, 93, /* EX */
   26, 70, 80, 38, 41, 62, 36,SYM, 65, 94, 50, 76, 33, 59, 83,SYM, /* FX */
};
/* X0  X1  X2  X3  X4  X5  X6  X7  X8  X9  XA  XB  XC  XD  XE  XF */

static const unsigned char Iso_8859_13_CharToOrderMap[] =
{
  CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,RET,CTR,CTR,RET,CTR,CTR, /* 0X */
  CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR, /* 1X */
  SYM,SYM,SYM,SYM,SYM,SYM,SYM,SYM,SYM,SYM,SYM,SYM,SYM,SYM,SYM,SYM, /* 2X */
  NUM,NUM,NUM,NUM,NUM,NUM,NUM,NUM,NUM,NUM,SYM,SYM,SYM,SYM,SYM,SYM, /* 3X */
  SYM,  0, 18, 19, 13,  3, 25, 16, 20,  1,  7, 10, 11, 14,  4,  2, /* 4X */
   15, 31,  5,  6,  8,  9, 12, 28, 29, 27, 17,SYM,SYM,SYM,SYM,SYM, /* 5X */
  SYM,  0, 18, 19, 13,  3, 25, 16, 20,  1,  7, 10, 11, 14,  4,  2, /* 6X */
   15, 31,  5,  6,  8,  9, 12, 28, 29, 27, 17,SYM,SYM,SYM,SYM,CTR, /* 7X */
  CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR, /* 8X */
  CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR, /* 9X */
  SYM,SYM,SYM,SYM,SYM,SYM,SYM,SYM, 57,SYM, 95,SYM,SYM,SYM,SYM, 53, /* AX */
  SYM,SYM,SYM,SYM,SYM,SYM,SYM,SYM, 57,SYM, 96,SYM,SYM,SYM,SYM, 53, /* BX */
   73, 97, 35, 24, 34, 58, 77, 61, 21, 30, 71, 98, 84, 99, 46,100, /* CX */
   22, 70, 82, 38, 48, 44, 36,SYM,101, 55, 74, 51, 33, 69, 23, 66, /* DX */
   73,102, 35, 24, 34, 58, 77, 61, 21, 30, 71,103, 84,104, 46,105, /* EX */
   22, 70, 82, 38, 48, 44, 36,SYM,106, 55, 74, 51, 33, 69, 23,SYM, /* FX */
};
/* X0  X1  X2  X3  X4  X5  X6  X7  X8  X9  XA  XB  XC  XD  XE  XF */

static const unsigned char Iso_8859_16_CharToOrderMap[] =
{
  CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,RET,CTR,CTR,RET,CTR,CTR, /* 0X */
  CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR, /* 1X */
  SYM,SYM,SYM,SYM,SYM,SYM,SYM,SYM,SYM,SYM,SYM,SYM,SYM,SYM,SYM,SYM, /* 2X */
  NUM,NUM,NUM,NUM,NUM,NUM,NUM,NUM,NUM,NUM,SYM,SYM,SYM,SYM,SYM,SYM, /* 3X */
  SYM,  0, 18, 19, 13,  3, 25, 16, 20,  1,  7, 10, 11, 14,  4,  2, /* 4X */
   15, 31,  5,  6,  8,  9, 12, 28, 29, 27, 17,SYM,SYM,SYM,SYM,SYM, /* 5X */
  SYM,  0, 18, 19, 13,  3, 25, 16, 20,  1,  7, 10, 11, 14,  4,  2, /* 6X */
   15, 31,  5,  6,  8,  9, 12, 28, 29, 27, 17,SYM,SYM,SYM,SYM,CTR, /* 7X */
  CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR, /* 8X */
  CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR, /* 9X */
  SYM, 73, 73, 55,SYM,SYM, 22,SYM, 22,SYM, 52,SYM, 71,SYM, 71, 69, /* AX */
  SYM,SYM, 21, 55, 23,SYM,SYM,SYM, 23, 21, 52,SYM, 75, 75, 81, 69, /* BX */
   54, 32, 37, 40, 34, 24, 53, 45, 42, 30, 47, 60, 68, 39, 43, 63, /* CX */
   26, 70, 79, 38, 41, 62, 36, 74, 76, 64, 50, 67, 33, 77, 56, 66, /* DX */
   54, 32, 37, 40, 34, 24, 53, 45, 42, 30, 47, 60, 68, 39, 43, 63, /* EX */
   26, 70, 79, 38, 41, 62, 36, 74, 76, 64, 50, 67, 33, 77, 56, 81, /* FX */
};
/* X0  X1  X2  X3  X4  X5  X6  X7  X8  X9  XA  XB  XC  XD  XE  XF */

static const unsigned char Windows_1250_CharToOrderMap[] =
{
  CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,RET,CTR,CTR,RET,CTR,CTR, /* 0X */
  CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR, /* 1X */
  SYM,SYM,SYM,SYM,SYM,SYM,SYM,SYM,SYM,SYM,SYM,SYM,SYM,SYM,SYM,SYM, /* 2X */
  NUM,NUM,NUM,NUM,NUM,NUM,NUM,NUM,NUM,NUM,SYM,SYM,SYM,SYM,SYM,SYM, /* 3X */
  SYM,  0, 18, 19, 13,  3, 25, 16, 20,  1,  7, 10, 11, 14,  4,  2, /* 4X */
   15, 31,  5,  6,  8,  9, 12, 28, 29, 27, 17,SYM,SYM,SYM,SYM,SYM, /* 5X */
  SYM,  0, 18, 19, 13,  3, 25, 16, 20,  1,  7, 10, 11, 14,  4,  2, /* 6X */
   15, 31,  5,  6,  8,  9, 12, 28, 29, 27, 17,SYM,SYM,SYM,SYM,CTR, /* 7X */
  SYM,ILL,SYM,ILL,SYM,SYM,SYM,SYM,ILL,SYM, 22,SYM, 74,107, 23, 71, /* 8X */
  ILL,SYM,SYM,SYM,SYM,SYM,SYM,SYM,ILL,SYM, 22,SYM, 74,108, 23, 71, /* 9X */
  SYM,SYM,SYM, 55,SYM, 73,SYM,SYM,SYM,SYM, 49,SYM,SYM,SYM,SYM, 69, /* AX */
  SYM,SYM,SYM, 55,SYM,SYM,SYM,SYM,SYM, 73, 49,SYM, 78,SYM, 78, 69, /* BX */
  109, 32, 37, 40, 34,110, 24, 45, 21, 30, 77, 60, 72, 39, 43,111, /* CX */
   26, 70, 80, 38, 41, 62, 36,SYM, 65,112, 50, 76, 33, 59, 83, 66, /* DX */
  113, 32, 37, 40, 34,114, 24, 45, 21, 30, 77, 60, 72, 39, 43,115, /* EX */
   26, 70, 80, 38, 41, 62, 36,SYM, 65,116, 50, 76, 33, 59, 83,SYM, /* FX */
};
/* X0  X1  X2  X3  X4  X5  X6  X7  X8  X9  XA  XB  XC  XD  XE  XF */

static const unsigned char Ibm852_CharToOrderMap[] =
{
  CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,RET,CTR,CTR,RET,CTR,CTR, /* 0X */
  CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR, /* 1X */
  SYM,SYM,SYM,SYM,SYM,SYM,SYM,SYM,SYM,SYM,SYM,SYM,SYM,SYM,SYM,SYM, /* 2X */
  NUM,NUM,NUM,NUM,NUM,NUM,NUM,NUM,NUM,NUM,SYM,SYM,SYM,SYM,SYM,SYM, /* 3X */
  SYM,  0, 18, 19, 13,  3, 25, 16, 20,  1,  7, 10, 11, 14,  4,  2, /* 4X */
   15, 31,  5,  6,  8,  9, 12, 28, 29, 27, 17,SYM,SYM,SYM,SYM,SYM, /* 5X */
  SYM,  0, 18, 19, 13,  3, 25, 16, 20,  1,  7, 10, 11, 14,  4,  2, /* 6X */
   15, 31,  5,  6,  8,  9, 12, 28, 29, 27, 17,SYM,SYM,SYM,SYM,CTR, /* 7X */
   45, 33, 30, 37, 34,117, 24, 45, 55, 60, 62, 62, 43, 71, 34, 24, /* 8X */
   30,118,119, 41, 36, 78, 78, 74, 74, 36, 33,120,121, 55,SYM, 21, /* 9X */
   32, 39, 38, 50, 73, 73, 23, 23, 77, 77,SYM, 71, 21, 49,SYM,SYM, /* AX */
  SYM,SYM,SYM,SYM,SYM, 32, 37, 72, 49,SYM,SYM,SYM,SYM, 69, 69,SYM, /* BX */
  SYM,SYM,SYM,SYM,SYM,SYM, 40, 40,SYM,SYM,SYM,SYM,SYM,SYM,SYM,SYM, /* CX */
   26, 26,122, 60,123, 80, 39, 43, 72,SYM,SYM,SYM,SYM, 83,124,SYM, /* DX */
   38, 66, 41, 70, 70, 80, 22, 22,125, 50,126, 76, 59, 59, 83,SYM, /* EX */
  SYM,SYM,SYM,SYM,SYM,SYM,SYM,SYM,SYM,SYM,SYM, 76, 65, 65,SYM,SYM, /* FX */
};
/* X0  X1  X2  X3  X4  X5  X6  X7  X8  X9  XA  XB  XC  XD  XE  XF */

static const unsigned char Maccentraleurope_CharToOrderMap[] =
{
  CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,RET,CTR,CTR,RET,CTR,CTR, /* 0X */
  CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR, /* 1X */
  SYM,SYM,SYM,SYM,SYM,SYM,SYM,SYM,SYM,SYM,SYM,SYM,SYM,SYM,SYM,SYM, /* 2X */
  NUM,NUM,NUM,NUM,NUM,NUM,NUM,NUM,NUM,NUM,SYM,SYM,SYM,SYM,SYM,SYM, /* 3X */
  SYM,  0, 18, 19, 13,  3, 25, 16, 20,  1,  7, 10, 11, 14,  4,  2, /* 4X */
   15, 31,  5,  6,  8,  9, 12, 28, 29, 27, 17,SYM,SYM,SYM,SYM,SYM, /* 5X */
  SYM,  0, 18, 19, 13,  3, 25, 16, 20,  1,  7, 10, 11, 14,  4,  2, /* 6X */
   15, 31,  5,  6,  8,  9, 12, 28, 29, 27, 17,SYM,SYM,SYM,SYM,CTR, /* 7X */
   34, 35, 35, 30, 73, 36, 33, 32, 73, 21, 34, 21, 24, 24, 30, 71, /* 8X */
   71,127, 39,128, 61, 61,129, 38,130, 41, 36, 44, 50, 72, 72, 33, /* 9X */
  SYM,SYM, 77,SYM,SYM,SYM,SYM, 66,SYM,SYM,SYM, 77,SYM,SYM, 84,131, /* AX */
  132, 46,SYM,SYM, 46,133,SYM,SYM, 55,134,135, 78, 78,136,137, 82, /* BX */
   82, 70,SYM,SYM, 70, 80,SYM,SYM,SYM,SYM,SYM, 80, 62, 44, 62, 48, /* CX */
  SYM,SYM,SYM,SYM,SYM,SYM,SYM,SYM, 48,138,139, 65,SYM,SYM, 65,140, /* DX */
  141, 22,SYM,SYM, 22, 74, 74, 32,142,143, 39, 23, 23, 51, 38, 41, /* EX */
   51,144, 50,145, 76, 76,146,147, 59, 59,148, 69, 55, 69, 84,SYM, /* FX */
};
/* X0  X1  X2  X3  X4  X5  X6  X7  X8  X9  XA  XB  XC  XD  XE  XF */

#define Unicode_Char_size    64

static const unsigned int Unicode_CharOrder[] =
{
  65,  0, 66, 18, 67, 19, 68, 13, 69,  3, 70, 25, 71, 16, 72, 20,
  73,  1, 74,  7, 75, 10, 76, 11, 77, 14, 78,  4, 79,  2, 80, 15,
  81, 31, 82,  5, 83,  6, 84,  8, 85,  9, 86, 12, 87, 28, 88, 29,
  89, 27, 90, 17, 97,  0, 98, 18, 99, 19, 100, 13, 101,  3, 102, 25,
  103, 16, 104, 20, 105,  1, 106,  7, 107, 10, 108, 11, 109, 14, 110,  4,
  111,  2, 112, 15, 113, 31, 114,  5, 115,  6, 116,  8, 117,  9, 118, 12,
  119, 28, 120, 29, 121, 27, 122, 17, 201, 30, 233, 30, 262, 24, 263, 24,
  268, 21, 269, 21, 272, 26, 273, 26, 352, 22, 353, 22, 381, 23, 382, 23,
};

static const float OrderToRatio[] =
{
  0.114790639,  0.114790639,  0.096752785,  0.096752785,  0.086873117,  0.086873117,  0.085281628,  0.085281628, 
  0.067321623,  0.067321623,  0.054761076,  0.054761076,  0.050495807,  0.050495807,  0.048892568,  0.048892568, 
  0.044322759,  0.044322759,  0.042342762,  0.042342762,  0.037731091,  0.037731091,  0.037144045,  0.037144045, 
  0.032490023,  0.032490023,  0.032137501,  0.032137501,  0.030750181,  0.030750181,  0.028467847,  0.028467847, 
  0.018638855,  0.018638855,  0.017494138,  0.017494138,  0.015506307,  0.015506307,  0.012763736,  0.012763736, 
  0.009960699,  0.009960699,  0.008595901,  0.008595901,  0.006705013,  0.006705013,  0.004723302,  0.004723302, 
  0.004422679,  0.004422679,  0.004013607,  0.004013607,  0.001902394,  0.001902394,  0.001783662,  0.001783662, 
  0.001576556,  0.001576556,  0.000433063,  0.000433063,  0.000160104,  0.000160104,  0.000159859,  0.000159859, 
};


/* Model Table:
 * Number of web pages processed for this model: 1050
 * Number of characters consumed for this model: 4084854
 * Total considered sequences: 1637 / 1024
 *
 * - Positive sequences: first 495 (0.9950274932845835)
 * - Probable sequences: next 262 (757-495) (0.003976217772555302)
 * - Neutral sequences: last 267 (0.0009962889428611899)
 * - Negative sequences: -613 (off-ratio, TODO)
 */


#define CroatianUnicodeAlphabetWidth         32
#define CroatianUnicodeCharToOrderIsReduced  0


#define CroatianFCMLowerBound  97
#define CroatianFCMUpperBound  382


static const PRUint8 CroatianUnicodeCharToOrder[] =
{
  1,19,20,14,4,26,17,21,2,8,11,12,15,5,3,16,32,6,7,9,
  10,13,29,30,28,18,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
  0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
  0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
  0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
  0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
  0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,31,0,0,0,
  0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
  0,0,0,0,0,0,25,0,0,0,0,0,22,0,0,0,27,0,0,0,
  0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
  0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
  0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
  0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,23,0,0,0,
  0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
  0,0,0,0,0,24,
};

static const PRUint8 CroatianCompactedLangModel[] =
{
  0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
  0,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,1,2,
  0,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,2,3,1,2,
  0,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,1,2,
  0,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,0,2,
  0,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,3,3,3,3,3,3,3,2,2,1,3,2,3,2,2,2,2,
  0,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,3,3,3,3,1,2,2,
  0,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,2,3,3,3,1,0,0,0,3,0,3,3,1,2,2,
  0,3,3,3,3,3,2,3,2,2,3,3,2,3,3,3,3,2,3,3,3,2,3,2,1,0,2,0,1,1,1,1,0,
  0,3,3,3,3,3,3,3,3,3,3,3,3,3,2,3,3,2,3,2,3,3,1,1,0,0,2,0,3,2,1,2,1,
  0,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,2,1,1,
  0,3,3,3,3,3,3,3,2,3,3,2,3,3,2,3,2,2,1,2,3,3,2,3,0,2,2,0,3,2,1,1,1,
  0,3,3,3,3,3,2,3,3,3,3,3,3,3,3,3,3,3,2,3,3,2,2,2,2,0,3,0,3,2,2,2,1,
  0,3,3,3,3,3,3,3,3,1,3,3,3,1,3,1,1,2,1,1,3,1,2,3,0,1,1,1,2,1,0,1,1,
  0,3,3,3,3,3,3,3,3,2,3,2,3,3,3,3,2,3,3,3,2,2,1,2,3,0,2,0,3,3,0,2,1,
  0,3,3,3,3,3,3,3,3,2,3,3,3,2,3,3,3,2,2,3,3,2,3,2,0,2,2,0,3,2,1,2,1,
  0,3,3,3,3,3,3,3,3,3,3,2,3,1,2,2,3,1,2,2,3,3,2,3,1,3,2,0,2,2,1,2,1,
  0,3,3,3,3,3,3,3,2,2,3,2,3,3,3,3,2,3,2,3,3,3,0,1,1,0,2,1,2,2,1,1,1,
  0,3,3,3,3,3,3,2,3,1,3,2,3,3,3,3,1,3,2,3,1,3,0,0,1,0,1,0,2,2,1,1,1,
  0,3,3,3,3,3,3,3,3,2,3,2,3,2,3,2,1,1,3,3,2,2,1,0,1,1,1,0,3,2,1,1,1,
  0,3,3,3,3,2,3,2,3,3,3,3,3,2,2,2,2,2,2,2,3,3,0,0,0,0,2,0,2,1,1,2,2,
  0,3,3,3,3,3,3,3,1,3,3,2,3,3,2,3,2,1,1,2,2,1,1,1,1,0,2,0,3,2,1,2,1,
  0,3,3,3,3,3,1,0,3,1,3,3,3,3,0,1,0,0,0,0,2,1,0,0,0,1,0,0,0,0,0,0,0,
  0,3,3,3,3,3,1,1,2,3,3,3,3,3,1,2,3,1,0,1,2,2,2,0,0,3,0,0,0,0,0,0,0,
  0,3,3,2,3,3,2,1,3,0,3,1,2,1,3,2,1,1,0,3,0,0,0,0,0,0,0,2,0,0,0,0,0,
  0,3,3,3,3,3,1,1,0,0,3,2,2,0,1,1,0,1,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,
  0,3,3,3,3,2,3,3,1,3,3,2,3,1,1,2,1,2,2,2,2,1,0,1,1,0,3,0,2,1,1,1,1,
  0,3,3,2,3,1,0,1,0,0,3,0,0,0,0,2,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,
  0,3,2,3,3,3,3,3,3,2,3,2,3,2,2,2,2,2,1,2,2,2,0,0,0,0,1,0,1,2,2,1,1,
  0,3,3,3,3,3,2,2,1,2,3,1,2,1,1,2,1,1,1,2,1,3,1,0,0,0,1,0,2,2,1,1,0,
  0,3,3,2,2,1,1,1,0,2,2,1,1,2,1,1,2,1,1,1,2,1,0,0,0,0,2,0,2,2,2,0,1,
  0,2,1,2,2,2,2,2,1,2,1,1,2,2,2,2,1,2,0,1,2,0,0,0,0,0,1,0,0,0,1,1,0,
  0,2,2,1,1,1,1,1,1,1,3,0,1,1,1,1,1,0,1,1,1,0,0,0,0,0,1,0,0,1,0,0,1,
};


const SequenceModel Iso_8859_2CroatianModel =
{
  Iso_8859_2_CharToOrderMap,
  CroatianFCMLowerBound,
  CroatianFCMUpperBound,
  CroatianUnicodeCharToOrder,
  CroatianCompactedLangModel,
  32,
  (float)0.9990037110571388,
  PR_TRUE,
  "ISO-8859-2",
  "hr"
};

const SequenceModel Iso_8859_13CroatianModel =
{
  Iso_8859_13_CharToOrderMap,
  CroatianFCMLowerBound,
  CroatianFCMUpperBound,
  CroatianUnicodeCharToOrder,
  CroatianCompactedLangModel,
  32,
  (float)0.9990037110571388,
  PR_TRUE,
  "ISO-8859-13",
  "hr"
};

const SequenceModel Iso_8859_16CroatianModel =
{
  Iso_8859_16_CharToOrderMap,
  CroatianFCMLowerBound,
  CroatianFCMUpperBound,
  CroatianUnicodeCharToOrder,
  CroatianCompactedLangModel,
  32,
  (float)0.9990037110571388,
  PR_TRUE,
  "ISO-8859-16",
  "hr"
};

const SequenceModel Windows_1250CroatianModel =
{
  Windows_1250_CharToOrderMap,
  CroatianFCMLowerBound,
  CroatianFCMUpperBound,
  CroatianUnicodeCharToOrder,
  CroatianCompactedLangModel,
  32,
  (float)0.9990037110571388,
  PR_TRUE,
  "WINDOWS-1250",
  "hr"
};

const SequenceModel Ibm852CroatianModel =
{
  Ibm852_CharToOrderMap,
  CroatianFCMLowerBound,
  CroatianFCMUpperBound,
  CroatianUnicodeCharToOrder,
  CroatianCompactedLangModel,
  32,
  (float)0.9990037110571388,
  PR_TRUE,
  "IBM852",
  "hr"
};

const SequenceModel MaccentraleuropeCroatianModel =
{
  Maccentraleurope_CharToOrderMap,
  CroatianFCMLowerBound,
  CroatianFCMUpperBound,
  CroatianUnicodeCharToOrder,
  CroatianCompactedLangModel,
  32,
  (float)0.9990037110571388,
  PR_TRUE,
  "MacCentralEurope",
  "hr"
};

const LanguageModel CroatianModel =
{
  "hr",
  Unicode_CharOrder,
  64,
  CroatianFCMLowerBound,
  CroatianFCMUpperBound,
  CroatianUnicodeCharToOrderIsReduced,

  CroatianUnicodeCharToOrder,
  OrderToRatio,
  CroatianCompactedLangModel,
  32,
  5,
  (float)0.4510197916498362,
  20,
  (float)0.03447614039571549,
  (float)0.9993953272258932,
};
