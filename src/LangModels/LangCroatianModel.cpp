/* -*- Mode: C++; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */
/* ***** BEGIN LICENSE BLOCK *****
 * Version: MPL 1.1/GPL 2.0/LGPL 2.1
 *
 * The contents of this file are subject to the Mozilla Public License Version
 * 1.1 (the "License"); you may not use this file except in compliance with
 * the License. You may obtain a copy of the License at
 * http://www.mozilla.org/MPL/
 *
 * Software distributed under the License is distributed on an "AS IS" basis,
 * WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
 * for the specific language governing rights and limitations under the
 * License.
 *
 * The Original Code is Mozilla Communicator client code.
 *
 * The Initial Developer of the Original Code is
 * Netscape Communications Corporation.
 * Portions created by the Initial Developer are Copyright (C) 1998
 * the Initial Developer. All Rights Reserved.
 *
 * Contributor(s):
 *
 * Alternatively, the contents of this file may be used under the terms of
 * either the GNU General Public License Version 2 or later (the "GPL"), or
 * the GNU Lesser General Public License Version 2.1 or later (the "LGPL"),
 * in which case the provisions of the GPL or the LGPL are applicable instead
 * of those above. If you wish to allow use of your version of this file only
 * under the terms of either the GPL or the LGPL, and not to allow others to
 * use your version of this file under the terms of the MPL, indicate your
 * decision by deleting the provisions above and replace them with the notice
 * and other provisions required by the GPL or the LGPL. If you do not delete
 * the provisions above, a recipient may use your version of this file under
 * the terms of any one of the MPL, the GPL or the LGPL.
 *
 * ***** END LICENSE BLOCK ***** */

#include "../nsSBCharSetProber.h"
#include "../nsSBCharSetProber-generated.h"
#include "../nsLanguageDetector.h"

#include "../nsLanguageDetector-generated.h"

/********* Language model for: Croatian *********/

/**
 * Generated by BuildLangModel.py
 * On: 2023-06-20 03:07:21.222934
 **/

/* Character Mapping Table:
 * ILL: illegal character.
 * CTR: control character specific to the charset.
 * RET: carriage/return.
 * SYM: symbol (punctuation) that does not belong to word.
 * NUM: 0 - 9.
 *
 * Other characters are ordered by probabilities
 * (0 is the most common character in the language).
 *
 * Orders are generic to a language. So the codepoint with order X in
 * CHARSET1 maps to the same character as the codepoint with the same
 * order X in CHARSET2 for the same language.
 * As such, it is possible to get missing order. For instance the
 * ligature of 'o' and 'e' exists in ISO-8859-15 but not in ISO-8859-1
 * even though they are both used for French. Same for the euro sign.
 */
static const unsigned char Iso_8859_2_CharToOrderMap[] =
{
  CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,RET,CTR,CTR,RET,CTR,CTR, /* 0X */
  CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR, /* 1X */
  SYM,SYM,SYM,SYM,SYM,SYM,SYM,SYM,SYM,SYM,SYM,SYM,SYM,SYM,SYM,SYM, /* 2X */
  NUM,NUM,NUM,NUM,NUM,NUM,NUM,NUM,NUM,NUM,SYM,SYM,SYM,SYM,SYM,SYM, /* 3X */
  SYM,  0, 18, 19, 12,  2, 23, 16, 20,  1,  6, 11, 10, 13,  4,  3, /* 4X */
   15, 30,  5,  7,  8,  9, 14, 28, 29, 26, 17,SYM,SYM,SYM,SYM,SYM, /* 5X */
  SYM,  0, 18, 19, 12,  2, 23, 16, 20,  1,  6, 11, 10, 13,  4,  3, /* 6X */
   15, 30,  5,  7,  8,  9, 14, 28, 29, 26, 17,SYM,SYM,SYM,SYM,CTR, /* 7X */
  CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR, /* 8X */
  CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR, /* 9X */
  SYM, 68,SYM, 48,SYM, 70, 71,SYM,SYM, 22, 50, 72, 73,SYM, 24, 74, /* AX */
  SYM, 68,SYM, 48,SYM, 75, 76,SYM,SYM, 22, 50, 77, 78,SYM, 24, 79, /* BX */
   80, 32, 46, 81, 40, 82, 25, 39, 21, 31, 57, 34, 64, 33, 69, 83, /* CX */
   27, 56, 84, 35, 43, 67, 38,SYM, 63, 85, 42, 65, 36, 54, 86, 87, /* DX */
   88, 32, 46, 89, 40, 90, 25, 39, 21, 31, 57, 34, 64, 33, 69, 91, /* EX */
   27, 56, 92, 35, 43, 67, 38,SYM, 63, 93, 42, 65, 36, 54, 94,SYM, /* FX */
};
/*X0  X1  X2  X3  X4  X5  X6  X7  X8  X9  XA  XB  XC  XD  XE  XF */

static const unsigned char Iso_8859_13_CharToOrderMap[] =
{
  CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,RET,CTR,CTR,RET,CTR,CTR, /* 0X */
  CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR, /* 1X */
  SYM,SYM,SYM,SYM,SYM,SYM,SYM,SYM,SYM,SYM,SYM,SYM,SYM,SYM,SYM,SYM, /* 2X */
  NUM,NUM,NUM,NUM,NUM,NUM,NUM,NUM,NUM,NUM,SYM,SYM,SYM,SYM,SYM,SYM, /* 3X */
  SYM,  0, 18, 19, 12,  2, 23, 16, 20,  1,  6, 11, 10, 13,  4,  3, /* 4X */
   15, 30,  5,  7,  8,  9, 14, 28, 29, 26, 17,SYM,SYM,SYM,SYM,SYM, /* 5X */
  SYM,  0, 18, 19, 12,  2, 23, 16, 20,  1,  6, 11, 10, 13,  4,  3, /* 6X */
   15, 30,  5,  7,  8,  9, 14, 28, 29, 26, 17,SYM,SYM,SYM,SYM,CTR, /* 7X */
  CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR, /* 8X */
  CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR, /* 9X */
  SYM,SYM,SYM,SYM,SYM,SYM,SYM,SYM, 45,SYM, 95,SYM,SYM,SYM,SYM, 55, /* AX */
  SYM,SYM,SYM,SYM,SYM,SYM,SYM,SYM, 45,SYM, 96,SYM,SYM,SYM,SYM, 55, /* BX */
   68, 97, 52, 25, 40, 49, 57, 59, 21, 31, 98, 99,100,101, 58,102, /* CX */
   22, 56,103, 35, 37,104, 38,SYM,105, 48,106, 44, 36,107, 24,108, /* DX */
   68,109, 52, 25, 40, 49, 57, 59, 21, 31,110,111,112,113, 58,114, /* EX */
   22, 56,115, 35, 37,116, 38,SYM,117, 48,118, 44, 36,119, 24,SYM, /* FX */
};
/*X0  X1  X2  X3  X4  X5  X6  X7  X8  X9  XA  XB  XC  XD  XE  XF */

static const unsigned char Iso_8859_16_CharToOrderMap[] =
{
  CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,RET,CTR,CTR,RET,CTR,CTR, /* 0X */
  CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR, /* 1X */
  SYM,SYM,SYM,SYM,SYM,SYM,SYM,SYM,SYM,SYM,SYM,SYM,SYM,SYM,SYM,SYM, /* 2X */
  NUM,NUM,NUM,NUM,NUM,NUM,NUM,NUM,NUM,NUM,SYM,SYM,SYM,SYM,SYM,SYM, /* 3X */
  SYM,  0, 18, 19, 12,  2, 23, 16, 20,  1,  6, 11, 10, 13,  4,  3, /* 4X */
   15, 30,  5,  7,  8,  9, 14, 28, 29, 26, 17,SYM,SYM,SYM,SYM,SYM, /* 5X */
  SYM,  0, 18, 19, 12,  2, 23, 16, 20,  1,  6, 11, 10, 13,  4,  3, /* 6X */
   15, 30,  5,  7,  8,  9, 14, 28, 29, 26, 17,SYM,SYM,SYM,SYM,CTR, /* 7X */
  CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR, /* 8X */
  CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR, /* 9X */
  SYM, 68, 68, 48,SYM,SYM, 22,SYM, 22,SYM, 61,SYM,120,SYM,121,122, /* AX */
  SYM,SYM, 21, 48, 24,SYM,SYM,SYM, 24, 21, 61,SYM, 62, 62,123,124, /* BX */
   51, 32, 46,125, 40, 25, 55, 39, 41, 31, 47, 34,126, 33, 69, 60, /* CX */
   27, 56, 53, 35, 43, 67, 38,127, 65,128, 42, 66, 36, 57,129,130, /* DX */
   51, 32, 46,131, 40, 25, 55, 39, 41, 31, 47, 34,132, 33, 69, 60, /* EX */
   27, 56, 53, 35, 43, 67, 38,133, 65,134, 42, 66, 36, 57,135,136, /* FX */
};
/*X0  X1  X2  X3  X4  X5  X6  X7  X8  X9  XA  XB  XC  XD  XE  XF */

static const unsigned char Windows_1250_CharToOrderMap[] =
{
  CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,RET,CTR,CTR,RET,CTR,CTR, /* 0X */
  CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR, /* 1X */
  SYM,SYM,SYM,SYM,SYM,SYM,SYM,SYM,SYM,SYM,SYM,SYM,SYM,SYM,SYM,SYM, /* 2X */
  NUM,NUM,NUM,NUM,NUM,NUM,NUM,NUM,NUM,NUM,SYM,SYM,SYM,SYM,SYM,SYM, /* 3X */
  SYM,  0, 18, 19, 12,  2, 23, 16, 20,  1,  6, 11, 10, 13,  4,  3, /* 4X */
   15, 30,  5,  7,  8,  9, 14, 28, 29, 26, 17,SYM,SYM,SYM,SYM,SYM, /* 5X */
  SYM,  0, 18, 19, 12,  2, 23, 16, 20,  1,  6, 11, 10, 13,  4,  3, /* 6X */
   15, 30,  5,  7,  8,  9, 14, 28, 29, 26, 17,SYM,SYM,SYM,SYM,CTR, /* 7X */
  SYM,ILL,SYM,ILL,SYM,SYM,SYM,SYM,ILL,SYM, 22,SYM,137,138, 24,139, /* 8X */
  ILL,SYM,SYM,SYM,SYM,SYM,SYM,SYM,ILL,SYM, 22,SYM,140,141, 24,142, /* 9X */
  SYM,SYM,SYM, 48,SYM, 68,SYM,SYM,SYM,SYM, 50,SYM,SYM,SYM,SYM,143, /* AX */
  SYM,SYM,SYM, 48,SYM,SYM,SYM,SYM,SYM, 68, 50,SYM,144,SYM,145,146, /* BX */
  147, 32, 46,148, 40,149, 25, 39, 21, 31, 57, 34, 64, 33, 69,150, /* CX */
   27, 56,151, 35, 43, 67, 38,SYM, 63,152, 42, 65, 36, 54,153,154, /* DX */
  155, 32, 46,156, 40,157, 25, 39, 21, 31, 57, 34, 64, 33, 69,158, /* EX */
   27, 56,159, 35, 43, 67, 38,SYM, 63,160, 42, 65, 36, 54,161,SYM, /* FX */
};
/*X0  X1  X2  X3  X4  X5  X6  X7  X8  X9  XA  XB  XC  XD  XE  XF */

static const unsigned char Ibm852_CharToOrderMap[] =
{
  CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,RET,CTR,CTR,RET,CTR,CTR, /* 0X */
  CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR, /* 1X */
  SYM,SYM,SYM,SYM,SYM,SYM,SYM,SYM,SYM,SYM,SYM,SYM,SYM,SYM,SYM,SYM, /* 2X */
  NUM,NUM,NUM,NUM,NUM,NUM,NUM,NUM,NUM,NUM,SYM,SYM,SYM,SYM,SYM,SYM, /* 3X */
  SYM,  0, 18, 19, 12,  2, 23, 16, 20,  1,  6, 11, 10, 13,  4,  3, /* 4X */
   15, 30,  5,  7,  8,  9, 14, 28, 29, 26, 17,SYM,SYM,SYM,SYM,SYM, /* 5X */
  SYM,  0, 18, 19, 12,  2, 23, 16, 20,  1,  6, 11, 10, 13,  4,  3, /* 6X */
   15, 30,  5,  7,  8,  9, 14, 28, 29, 26, 17,SYM,SYM,SYM,SYM,CTR, /* 7X */
   39, 36, 31, 46, 40,162, 25, 39, 48, 34, 67, 67, 69,163, 40, 25, /* 8X */
   31,164,165, 43, 38,166,167,168,169, 38, 36,170,171, 48,SYM, 21, /* 9X */
   32, 33, 35, 42, 68, 68, 24, 24, 57, 57,SYM,172, 21, 50,SYM,SYM, /* AX */
  SYM,SYM,SYM,SYM,SYM, 32, 46, 64, 50,SYM,SYM,SYM,SYM,173,174,SYM, /* BX */
  SYM,SYM,SYM,SYM,SYM,SYM,175,176,SYM,SYM,SYM,SYM,SYM,SYM,SYM,SYM, /* CX */
   27, 27,177, 34,178,179, 33, 69, 64,SYM,SYM,SYM,SYM,180,181,SYM, /* DX */
   35,182, 43, 56, 56,183, 22, 22,184, 42,185, 65, 54, 54,186,SYM, /* EX */
  SYM,SYM,SYM,SYM,SYM,SYM,SYM,SYM,SYM,SYM,SYM, 65, 63, 63,SYM,SYM, /* FX */
};
/*X0  X1  X2  X3  X4  X5  X6  X7  X8  X9  XA  XB  XC  XD  XE  XF */

static const unsigned char Maccentraleurope_CharToOrderMap[] =
{
  CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,RET,CTR,CTR,RET,CTR,CTR, /* 0X */
  CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR, /* 1X */
  SYM,SYM,SYM,SYM,SYM,SYM,SYM,SYM,SYM,SYM,SYM,SYM,SYM,SYM,SYM,SYM, /* 2X */
  NUM,NUM,NUM,NUM,NUM,NUM,NUM,NUM,NUM,NUM,SYM,SYM,SYM,SYM,SYM,SYM, /* 3X */
  SYM,  0, 18, 19, 12,  2, 23, 16, 20,  1,  6, 11, 10, 13,  4,  3, /* 4X */
   15, 30,  5,  7,  8,  9, 14, 28, 29, 26, 17,SYM,SYM,SYM,SYM,SYM, /* 5X */
  SYM,  0, 18, 19, 12,  2, 23, 16, 20,  1,  6, 11, 10, 13,  4,  3, /* 6X */
   15, 30,  5,  7,  8,  9, 14, 28, 29, 26, 17,SYM,SYM,SYM,SYM,CTR, /* 7X */
   40, 52, 52, 31, 68, 38, 36, 32, 68, 21, 40, 21, 25, 25, 31,187, /* 8X */
  188,189, 33,190, 59, 59,191, 35,192, 43, 38,193, 42, 64, 64, 36, /* 9X */
  SYM,SYM, 57,SYM,SYM,SYM,SYM,194,SYM,SYM,SYM, 57,SYM,SYM,195,196, /* AX */
  197, 58,SYM,SYM, 58,198,SYM,SYM, 48,199,200,201,202,203,204,205, /* BX */
  206, 56,SYM,SYM, 56,207,SYM,SYM,SYM,SYM,SYM,208, 67,209, 67, 37, /* CX */
  SYM,SYM,SYM,SYM,SYM,SYM,SYM,SYM, 37,210,211, 63,SYM,SYM, 63,212, /* DX */
  213, 22,SYM,SYM, 22,214,215, 32,216,217, 33, 24, 24, 44, 35, 43, /* EX */
   44,218, 42,219, 65, 65,220,221, 54, 54,222,223, 48,224,225,SYM, /* FX */
};
/*X0  X1  X2  X3  X4  X5  X6  X7  X8  X9  XA  XB  XC  XD  XE  XF */

static const int Unicode_Char_size = 62;
static const unsigned int Unicode_CharOrder[] =
{
  65,  0, 66, 18, 67, 19, 68, 12, 69,  2, 70, 23, 71, 16,72, 20,
  73,  1, 74,  6, 75, 11, 76, 10, 77, 13, 78,  4, 79,  3,80, 15,
  81, 30, 82,  5, 83,  7, 84,  8, 85,  9, 86, 14, 87, 28,88, 29,
  89, 26, 90, 17, 97,  0, 98, 18, 99, 19, 100, 12, 101,  2,102, 23,
  103, 16, 104, 20, 105,  1, 106,  6, 107, 11, 108, 10, 109, 13,110,  4,
  111,  3, 112, 15, 113, 30, 114,  5, 115,  7, 116,  8, 117,  9,118, 14,
  119, 28, 120, 29, 121, 26, 122, 17, 262, 25, 263, 25, 268, 21,269, 21,
  272, 27, 273, 27, 352, 22, 353, 22, 381, 24, 382, 24,
};


/* Model Table:
 * Total considered sequences: 1119 / 961
 * - Positive sequences: first 486 (0.995024106176241)
 * - Probable sequences: next 202 (688-486) (0.003979105894637236)
 * - Neutral sequences: last 273 (0.000996787929121723)
 * - Negative sequences: -158 (off-ratio)
 * Negative sequences: TODO
 */
static const PRUint8 CroatianLangModel[] =
{
  3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,
  3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,2,1,3,2,
  3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,
  3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,1,
  3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,3,2,0,3,2,2,1,2,
  3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,1,3,3,2,1,2,
  3,3,3,3,3,2,2,3,2,3,2,3,2,3,3,3,2,2,3,2,1,3,2,1,1,0,0,0,1,0,0,
  3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,2,3,3,3,1,0,3,0,0,3,0,3,0,2,
  3,3,3,3,3,3,3,3,3,3,3,3,2,3,3,3,2,3,2,3,3,1,1,3,0,0,3,0,3,1,0,
  3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,3,2,2,2,
  3,3,3,3,3,2,3,3,3,3,3,3,3,3,3,3,3,2,3,3,2,1,1,3,1,0,3,0,2,1,1,
  3,3,3,3,3,3,1,3,3,3,3,2,1,3,3,2,2,1,1,3,3,2,2,2,0,2,3,0,2,0,0,
  3,3,3,3,3,3,3,3,2,3,3,1,3,3,3,2,3,2,3,2,2,1,1,3,3,0,3,0,3,0,1,
  3,3,3,3,3,3,3,3,2,3,3,3,3,3,1,3,2,2,3,3,1,3,1,2,0,2,3,0,1,1,1,
  3,3,3,3,3,3,3,3,1,3,3,3,3,0,2,1,1,1,1,3,1,2,3,0,0,0,2,0,0,0,0,
  3,3,3,3,3,3,3,3,3,3,3,2,2,2,0,3,2,1,2,3,3,2,2,2,0,3,2,0,1,1,0,
  3,3,3,3,3,3,2,3,3,3,3,1,3,3,3,2,3,2,2,2,3,0,0,1,0,0,2,1,1,1,1,
  3,3,3,3,3,3,3,2,1,3,3,2,3,3,3,2,3,2,3,1,2,0,0,1,0,0,2,0,1,1,1,
  3,3,3,3,3,3,3,2,2,3,3,1,2,2,2,1,0,3,3,2,2,1,0,2,0,0,3,0,1,0,1,
  3,3,3,3,2,3,3,2,3,3,3,3,3,2,2,1,2,2,2,3,3,0,0,2,0,0,3,0,2,0,2,
  3,3,3,3,3,3,1,2,3,3,3,2,2,2,3,1,2,1,2,2,1,0,1,2,0,0,3,0,2,1,1,
  3,3,3,3,3,1,3,1,0,3,3,3,0,0,3,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,
  3,3,3,2,3,1,1,0,3,3,3,3,0,2,2,3,0,0,0,1,1,2,0,0,0,3,0,0,0,0,0,
  3,3,3,3,2,3,1,3,3,3,3,2,1,2,0,1,2,1,1,2,0,0,0,3,0,0,2,0,1,0,0,
  3,3,3,2,3,3,3,0,0,3,2,1,3,2,1,0,0,0,3,0,0,0,0,0,0,0,0,2,0,0,0,
  3,3,3,3,3,0,0,0,0,3,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
  3,2,3,3,3,3,3,3,2,3,3,1,3,2,1,2,2,1,2,2,1,0,0,1,0,0,1,0,2,1,0,
  3,3,3,2,0,0,0,1,0,3,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
  3,3,3,3,2,2,1,3,2,2,2,1,1,1,0,0,1,0,1,2,3,0,0,2,0,0,2,0,2,0,0,
  3,3,2,2,1,1,0,0,2,2,1,0,1,1,1,2,1,1,1,1,1,0,0,2,0,0,2,0,1,2,1,
  2,2,1,0,0,2,0,1,0,3,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,1,0,0,
};


const SequenceModel Iso_8859_2CroatianModel =
{
  Iso_8859_2_CharToOrderMap,
  CroatianLangModel,
  31,
  (float)0.9990032120708783,
  PR_TRUE,
  "ISO-8859-2",
  "hr"
};

const SequenceModel Iso_8859_13CroatianModel =
{
  Iso_8859_13_CharToOrderMap,
  CroatianLangModel,
  31,
  (float)0.9990032120708783,
  PR_TRUE,
  "ISO-8859-13",
  "hr"
};

const SequenceModel Iso_8859_16CroatianModel =
{
  Iso_8859_16_CharToOrderMap,
  CroatianLangModel,
  31,
  (float)0.9990032120708783,
  PR_TRUE,
  "ISO-8859-16",
  "hr"
};

const SequenceModel Windows_1250CroatianModel =
{
  Windows_1250_CharToOrderMap,
  CroatianLangModel,
  31,
  (float)0.9990032120708783,
  PR_TRUE,
  "WINDOWS-1250",
  "hr"
};

const SequenceModel Ibm852CroatianModel =
{
  Ibm852_CharToOrderMap,
  CroatianLangModel,
  31,
  (float)0.9990032120708783,
  PR_TRUE,
  "IBM852",
  "hr"
};

const SequenceModel MaccentraleuropeCroatianModel =
{
  Maccentraleurope_CharToOrderMap,
  CroatianLangModel,
  31,
  (float)0.9990032120708783,
  PR_TRUE,
  "MacCentralEurope",
  "hr"
};

const LanguageModel CroatianModel =
{
  "hr",
  Unicode_CharOrder,
  62,
  CroatianLangModel,
  31,
  5,
  (float)0.45107721011025415,
  20,
  (float)0.03384901293207753,
  (float)0.9992879278920985,
};
