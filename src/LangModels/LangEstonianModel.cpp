/* -*- Mode: C++; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */
/* ***** BEGIN LICENSE BLOCK *****
 * Version: MPL 1.1/GPL 2.0/LGPL 2.1
 *
 * The contents of this file are subject to the Mozilla Public License Version
 * 1.1 (the "License"); you may not use this file except in compliance with
 * the License. You may obtain a copy of the License at
 * http://www.mozilla.org/MPL/
 *
 * Software distributed under the License is distributed on an "AS IS" basis,
 * WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
 * for the specific language governing rights and limitations under the
 * License.
 *
 * The Original Code is Mozilla Communicator client code.
 *
 * The Initial Developer of the Original Code is
 * Netscape Communications Corporation.
 * Portions created by the Initial Developer are Copyright (C) 1998
 * the Initial Developer. All Rights Reserved.
 *
 * Contributor(s):
 *
 * Alternatively, the contents of this file may be used under the terms of
 * either the GNU General Public License Version 2 or later (the "GPL"), or
 * the GNU Lesser General Public License Version 2.1 or later (the "LGPL"),
 * in which case the provisions of the GPL or the LGPL are applicable instead
 * of those above. If you wish to allow use of your version of this file only
 * under the terms of either the GPL or the LGPL, and not to allow others to
 * use your version of this file under the terms of the MPL, indicate your
 * decision by deleting the provisions above and replace them with the notice
 * and other provisions required by the GPL or the LGPL. If you do not delete
 * the provisions above, a recipient may use your version of this file under
 * the terms of any one of the MPL, the GPL or the LGPL.
 *
 * ***** END LICENSE BLOCK ***** */

#include "../nsSBCharSetProber.h"
#include "../nsSBCharSetProber-generated.h"
#include "../nsLanguageDetector.h"

#include "../nsLanguageDetector-generated.h"

/********* Language model for: Estonian *********/

/**
 * Generated by BuildLangModel.py
 * On: 2023-07-06 22:42:27.984756
 **/

/* Character Mapping Table:
 * ILL: illegal character.
 * CTR: control character specific to the charset.
 * RET: carriage/return.
 * SYM: symbol (punctuation) that does not belong to word.
 * NUM: 0 - 9.
 *
 * Other characters are ordered by probabilities
 * (0 is the most common character in the language).
 *
 * Orders are generic to a language. So the codepoint with order X in
 * CHARSET1 maps to the same character as the codepoint with the same
 * order X in CHARSET2 for the same language.
 * As such, it is possible to get missing order. For instance the
 * ligature of 'o' and 'e' exists in ISO-8859-15 but not in ISO-8859-1
 * even though they are both used for French. Same for the euro sign.
 */
static const unsigned char Iso_8859_4_CharToOrderMap[] =
{
  CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,RET,CTR,CTR,RET,CTR,CTR, /* 0X */
  CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR, /* 1X */
  SYM,SYM,SYM,SYM,SYM,SYM,SYM,SYM,SYM,SYM,SYM,SYM,SYM,SYM,SYM,SYM, /* 2X */
  NUM,NUM,NUM,NUM,NUM,NUM,NUM,NUM,NUM,NUM,SYM,SYM,SYM,SYM,SYM,SYM, /* 3X */
  SYM,  0, 19, 22, 11,  2, 23, 14, 17,  1, 16,  9,  5, 12,  7,  8, /* 4X */
   15, 30, 10,  3,  4,  6, 13, 26, 28, 25, 27,SYM,SYM,SYM,SYM,SYM, /* 5X */
  SYM,  0, 19, 22, 11,  2, 23, 14, 17,  1, 16,  9,  5, 12,  7,  8, /* 6X */
   15, 30, 10,  3,  4,  6, 13, 26, 28, 25, 27,SYM,SYM,SYM,SYM,CTR, /* 7X */
  CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR, /* 8X */
  CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR, /* 9X */
  SYM, 72, 82, 83,SYM, 84, 63,SYM,SYM, 29, 46, 81, 85,SYM, 32,SYM, /* AX */
  SYM, 72,SYM, 86,SYM, 87, 63,SYM,SYM, 29, 46, 81, 88, 89, 32, 90, /* BX */
   35, 33, 50, 42, 18, 47, 48, 91, 52, 31, 75, 60, 51, 36, 62, 39, /* CX */
   70, 64, 43, 65, 59, 20, 24,SYM, 55, 78, 54, 79, 21, 77, 44, 49, /* DX */
   35, 33, 50, 42, 18, 47, 48, 92, 52, 31, 75, 60, 51, 36, 62, 39, /* EX */
   70, 64, 43, 65, 59, 20, 24,SYM, 55, 78, 54, 79, 21, 77, 44,SYM, /* FX */
};
/* X0  X1  X2  X3  X4  X5  X6  X7  X8  X9  XA  XB  XC  XD  XE  XF */

static const unsigned char Iso_8859_13_CharToOrderMap[] =
{
  CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,RET,CTR,CTR,RET,CTR,CTR, /* 0X */
  CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR, /* 1X */
  SYM,SYM,SYM,SYM,SYM,SYM,SYM,SYM,SYM,SYM,SYM,SYM,SYM,SYM,SYM,SYM, /* 2X */
  NUM,NUM,NUM,NUM,NUM,NUM,NUM,NUM,NUM,NUM,SYM,SYM,SYM,SYM,SYM,SYM, /* 3X */
  SYM,  0, 19, 22, 11,  2, 23, 14, 17,  1, 16,  9,  5, 12,  7,  8, /* 4X */
   15, 30, 10,  3,  4,  6, 13, 26, 28, 25, 27,SYM,SYM,SYM,SYM,SYM, /* 5X */
  SYM,  0, 19, 22, 11,  2, 23, 14, 17,  1, 16,  9,  5, 12,  7,  8, /* 6X */
   15, 30, 10,  3,  4,  6, 13, 26, 28, 25, 27,SYM,SYM,SYM,SYM,CTR, /* 7X */
  CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR, /* 8X */
  CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR, /* 9X */
  SYM,SYM,SYM,SYM,SYM,SYM,SYM,SYM, 55,SYM, 93,SYM,SYM,SYM,SYM, 48, /* AX */
  SYM,SYM,SYM,SYM,SYM,SYM,SYM,SYM, 55,SYM, 94,SYM,SYM,SYM,SYM, 48, /* BX */
   72, 95, 35, 53, 18, 47, 75, 46, 52, 31, 80, 51, 81, 65, 39, 63, /* CX */
   29, 58, 64, 34, 43, 20, 24,SYM, 78, 40, 66, 44, 21, 74, 32, 49, /* DX */
   72, 96, 35, 53, 18, 47, 75, 46, 52, 31, 80, 51, 81, 65, 39, 63, /* EX */
   29, 58, 64, 34, 43, 20, 24,SYM, 78, 40, 66, 44, 21, 74, 32,SYM, /* FX */
};
/* X0  X1  X2  X3  X4  X5  X6  X7  X8  X9  XA  XB  XC  XD  XE  XF */

static const unsigned char Iso_8859_15_CharToOrderMap[] =
{
  CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,RET,CTR,CTR,RET,CTR,CTR, /* 0X */
  CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR, /* 1X */
  SYM,SYM,SYM,SYM,SYM,SYM,SYM,SYM,SYM,SYM,SYM,SYM,SYM,SYM,SYM,SYM, /* 2X */
  NUM,NUM,NUM,NUM,NUM,NUM,NUM,NUM,NUM,NUM,SYM,SYM,SYM,SYM,SYM,SYM, /* 3X */
  SYM,  0, 19, 22, 11,  2, 23, 14, 17,  1, 16,  9,  5, 12,  7,  8, /* 4X */
   15, 30, 10,  3,  4,  6, 13, 26, 28, 25, 27,SYM,SYM,SYM,SYM,SYM, /* 5X */
  SYM,  0, 19, 22, 11,  2, 23, 14, 17,  1, 16,  9,  5, 12,  7,  8, /* 6X */
   15, 30, 10,  3,  4,  6, 13, 26, 28, 25, 27,SYM,SYM,SYM,SYM,CTR, /* 7X */
  CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR, /* 8X */
  CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR, /* 9X */
  SYM,SYM,SYM,SYM,SYM,SYM, 29,SYM, 29,SYM,SYM,SYM,SYM,SYM,SYM,SYM, /* AX */
  SYM,SYM,SYM,SYM, 32, 76,SYM,SYM, 32,SYM,SYM,SYM, 73, 73, 97,SYM, /* BX */
   37, 33, 50, 42, 18, 47, 48, 38, 41, 31, 57, 60, 45, 36, 62, 67, /* CX */
   71, 61, 56, 34, 59, 20, 24,SYM, 55, 69, 54, 79, 21, 68, 98, 49, /* DX */
   37, 33, 50, 42, 18, 47, 48, 38, 41, 31, 57, 60, 45, 36, 62, 67, /* EX */
   71, 61, 56, 34, 59, 20, 24,SYM, 55, 69, 54, 79, 21, 68, 99,100, /* FX */
};
/* X0  X1  X2  X3  X4  X5  X6  X7  X8  X9  XA  XB  XC  XD  XE  XF */

static const unsigned char Windows_1252_CharToOrderMap[] =
{
  CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,RET,CTR,CTR,RET,CTR,CTR, /* 0X */
  CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR, /* 1X */
  SYM,SYM,SYM,SYM,SYM,SYM,SYM,SYM,SYM,SYM,SYM,SYM,SYM,SYM,SYM,SYM, /* 2X */
  NUM,NUM,NUM,NUM,NUM,NUM,NUM,NUM,NUM,NUM,SYM,SYM,SYM,SYM,SYM,SYM, /* 3X */
  SYM,  0, 19, 22, 11,  2, 23, 14, 17,  1, 16,  9,  5, 12,  7,  8, /* 4X */
   15, 30, 10,  3,  4,  6, 13, 26, 28, 25, 27,SYM,SYM,SYM,SYM,SYM, /* 5X */
  SYM,  0, 19, 22, 11,  2, 23, 14, 17,  1, 16,  9,  5, 12,  7,  8, /* 6X */
   15, 30, 10,  3,  4,  6, 13, 26, 28, 25, 27,SYM,SYM,SYM,SYM,CTR, /* 7X */
  SYM,ILL,SYM,101,SYM,SYM,SYM,SYM,SYM,SYM, 29,SYM, 73,ILL, 32,ILL, /* 8X */
  ILL,SYM,SYM,SYM,SYM,SYM,SYM,SYM,SYM,SYM, 29,SYM, 73,ILL, 32,102, /* 9X */
  SYM,SYM,SYM,SYM,SYM,SYM,SYM,SYM,SYM,SYM,SYM,SYM,SYM,SYM,SYM,SYM, /* AX */
  SYM,SYM,SYM,SYM,SYM, 76,SYM,SYM,SYM,SYM,SYM,SYM,SYM,SYM,SYM,SYM, /* BX */
   37, 33, 50, 42, 18, 47, 48, 38, 41, 31, 57, 60, 45, 36, 62, 67, /* CX */
   71, 61, 56, 34, 59, 20, 24,SYM, 55, 69, 54, 79, 21, 68,103, 49, /* DX */
   37, 33, 50, 42, 18, 47, 48, 38, 41, 31, 57, 60, 45, 36, 62, 67, /* EX */
   71, 61, 56, 34, 59, 20, 24,SYM, 55, 69, 54, 79, 21, 68,104,105, /* FX */
};
/* X0  X1  X2  X3  X4  X5  X6  X7  X8  X9  XA  XB  XC  XD  XE  XF */

static const unsigned char Windows_1257_CharToOrderMap[] =
{
  CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,RET,CTR,CTR,RET,CTR,CTR, /* 0X */
  CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR, /* 1X */
  SYM,SYM,SYM,SYM,SYM,SYM,SYM,SYM,SYM,SYM,SYM,SYM,SYM,SYM,SYM,SYM, /* 2X */
  NUM,NUM,NUM,NUM,NUM,NUM,NUM,NUM,NUM,NUM,SYM,SYM,SYM,SYM,SYM,SYM, /* 3X */
  SYM,  0, 19, 22, 11,  2, 23, 14, 17,  1, 16,  9,  5, 12,  7,  8, /* 4X */
   15, 30, 10,  3,  4,  6, 13, 26, 28, 25, 27,SYM,SYM,SYM,SYM,SYM, /* 5X */
  SYM,  0, 19, 22, 11,  2, 23, 14, 17,  1, 16,  9,  5, 12,  7,  8, /* 6X */
   15, 30, 10,  3,  4,  6, 13, 26, 28, 25, 27,SYM,SYM,SYM,SYM,CTR, /* 7X */
  SYM,ILL,SYM,ILL,SYM,SYM,SYM,SYM,ILL,SYM,ILL,SYM,ILL,SYM,SYM,SYM, /* 8X */
  ILL,SYM,SYM,SYM,SYM,SYM,SYM,SYM,ILL,SYM,ILL,SYM,ILL,SYM,SYM,ILL, /* 9X */
  SYM,ILL,SYM,SYM,SYM,ILL,SYM,SYM, 55,SYM,106,SYM,SYM,SYM,SYM, 48, /* AX */
  SYM,SYM,SYM,SYM,SYM, 76,SYM,SYM, 55,SYM,107,SYM,SYM,SYM,SYM, 48, /* BX */
   72,108, 35, 53, 18, 47, 75, 46, 52, 31, 80, 51, 81, 65, 39, 63, /* CX */
   29, 58, 64, 34, 43, 20, 24,SYM, 78, 40, 66, 44, 21, 74, 32, 49, /* DX */
   72,109, 35, 53, 18, 47, 75, 46, 52, 31, 80, 51, 81, 65, 39, 63, /* EX */
   29, 58, 64, 34, 43, 20, 24,SYM, 78, 40, 66, 44, 21, 74, 32,SYM, /* FX */
};
/* X0  X1  X2  X3  X4  X5  X6  X7  X8  X9  XA  XB  XC  XD  XE  XF */

#define Unicode_Char_size    66

static const unsigned int Unicode_CharOrder[] =
{
  65,  0, 66, 19, 67, 22, 68, 11, 69,  2, 70, 23, 71, 14, 72, 17,
  73,  1, 74, 16, 75,  9, 76,  5, 77, 12, 78,  7, 79,  8, 80, 15,
  81, 30, 82, 10, 83,  3, 84,  4, 85,  6, 86, 13, 87, 26, 88, 28,
  89, 25, 90, 27, 97,  0, 98, 19, 99, 22, 100, 11, 101,  2, 102, 23,
  103, 14, 104, 17, 105,  1, 106, 16, 107,  9, 108,  5, 109, 12, 110,  7,
  111,  8, 112, 15, 113, 30, 114, 10, 115,  3, 116,  4, 117,  6, 118, 13,
  119, 26, 120, 28, 121, 25, 122, 27, 196, 18, 201, 31, 213, 20, 214, 24,
  220, 21, 228, 18, 233, 31, 245, 20, 246, 24, 252, 21, 352, 29, 353, 29,
  381, 32, 382, 32,
};

static const float OrderToRatio[] =
{
  0.126801244,  0.126801244,  0.104768940,  0.104768940,  0.098866095,  0.098866095,  0.087641009,  0.087641009, 
  0.069356282,  0.069356282,  0.061559184,  0.061559184,  0.053737823,  0.053737823,  0.051987679,  0.051987679, 
  0.044930734,  0.044930734,  0.043617085,  0.043617085,  0.042130896,  0.042130896,  0.038569093,  0.038569093, 
  0.034592362,  0.034592362,  0.023470211,  0.023470211,  0.018577357,  0.018577357,  0.017858281,  0.017858281, 
  0.016930883,  0.016930883,  0.015757667,  0.015757667,  0.010033243,  0.010033243,  0.009322010,  0.009322010, 
  0.009036732,  0.009036732,  0.006036170,  0.006036170,  0.004226961,  0.004226961,  0.003277016,  0.003277016, 
  0.001959936,  0.001959936,  0.001159247,  0.001159247,  0.001025431,  0.001025431,  0.000802650,  0.000802650, 
  0.000557811,  0.000557811,  0.000258809,  0.000258809,  0.000184793,  0.000184793,  0.000170333,  0.000170333, 
  0.000148766,  0.000148766, 
};


/* Model Table:
 * Number of web pages processed for this model: 1012
 * Number of characters consumed for this model: 4080236
 * Total considered sequences: 1657 / 1089
 *
 * - Positive sequences: first 509 (0.9950072332102391)
 * - Probable sequences: next 286 (795-509) (0.003996854651661885)
 * - Neutral sequences: last 294 (0.00099591213809902)
 * - Negative sequences: -568 (off-ratio, TODO)
 */


#define EstonianUnicodeAlphabetWidth         33
#define EstonianUnicodeCharToOrderIsReduced  0


#define EstonianFCMLowerBound  97
#define EstonianFCMUpperBound  382


static const PRUint8 EstonianUnicodeCharToOrder[] =
{
  1,20,23,12,3,24,15,18,2,17,10,6,13,8,9,16,31,11,4,5,
  7,14,27,29,26,28,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
  0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
  0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
  0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
  0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
  0,0,0,0,0,0,0,0,0,0,0,19,0,0,0,0,32,0,0,0,
  0,0,0,0,0,0,0,0,21,25,0,0,0,0,0,22,0,0,0,0,
  0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
  0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
  0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
  0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
  0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,30,0,0,0,
  0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
  0,0,0,0,0,33,
};

static const PRUint8 EstonianCompactedLangModel[] =
{
  0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
  0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
  0,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,
  3,2,3,3,3,3,3,1,3,3,3,3,2,2,0,2,
  0,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,
  3,2,3,3,3,3,3,2,2,2,3,3,2,2,1,2,
  0,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,
  3,2,3,2,2,3,3,1,3,3,3,3,2,2,0,2,
  0,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,3,3,
  3,3,3,3,3,3,3,3,3,2,2,1,0,2,2,1,
  0,3,3,3,3,3,3,3,3,3,3,3,2,3,3,2,3,3,
  3,3,2,3,3,3,2,3,3,2,3,1,3,1,2,1,
  0,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,
  3,3,3,3,3,3,3,3,3,2,2,1,2,2,2,2,
  0,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,
  3,1,3,2,2,3,3,0,2,2,2,2,2,1,1,1,
  0,3,3,3,3,3,3,3,3,3,3,3,3,2,3,3,2,3,
  3,3,3,3,3,3,3,2,3,2,3,1,2,2,2,1,
  0,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,
  3,0,3,1,2,3,3,1,3,3,2,3,2,2,1,1,
  0,3,3,3,3,3,3,3,3,3,3,3,2,3,3,2,3,3,
  3,3,2,3,3,1,2,3,3,2,0,0,2,0,1,0,
  0,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,
  3,3,3,3,3,3,3,3,3,3,3,1,1,2,3,1,
  0,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,
  2,1,2,1,3,2,2,2,3,3,2,0,0,1,2,3,
  0,3,3,3,3,3,3,3,3,3,3,2,2,3,2,2,3,3,
  2,3,3,3,3,2,2,3,3,2,1,1,1,0,2,1,
  0,3,3,3,3,2,3,3,3,3,3,3,2,2,2,3,3,2,
  2,3,1,3,3,1,1,2,2,0,0,0,1,0,1,0,
  0,3,3,3,3,3,3,3,3,3,3,3,2,3,2,3,3,2,
  3,1,2,1,3,2,2,2,2,2,2,1,1,1,2,0,
  0,3,3,3,3,3,3,3,3,3,3,3,2,3,2,1,3,2,
  3,3,2,3,3,2,2,3,2,1,1,0,1,0,2,0,
  0,3,3,3,1,2,1,3,2,3,1,1,1,2,1,1,2,2,
  0,3,1,3,3,1,1,2,1,1,1,0,0,0,1,0,
  0,3,3,3,2,3,3,3,3,3,3,3,3,3,3,1,1,3,
  3,3,2,3,3,1,2,2,3,2,2,0,0,0,2,0,
  0,2,3,3,3,3,3,2,3,3,3,3,3,3,3,3,3,1,
  3,3,3,0,0,2,1,0,1,1,0,0,0,1,0,0,
  0,3,3,3,3,2,3,3,3,3,2,3,2,2,1,1,1,3,
  2,2,3,1,3,2,1,2,3,2,1,0,0,0,2,0,
  0,1,3,3,3,3,3,3,3,2,2,3,3,3,3,3,3,3,
  3,0,3,3,0,0,0,1,0,0,1,0,1,1,0,0,
  0,3,1,2,3,3,3,0,3,2,3,3,3,3,2,3,3,1,
  3,1,3,1,3,2,2,1,1,0,1,1,0,0,0,1,
  0,3,3,3,3,3,3,3,2,3,3,3,2,2,1,1,2,0,
  3,1,2,0,0,3,1,0,3,1,3,1,0,2,2,0,
  0,3,3,3,2,3,3,3,2,3,1,3,2,2,1,2,1,2,
  1,2,1,0,3,2,3,3,1,1,1,0,0,0,2,0,
  0,2,3,3,3,3,3,0,3,1,3,3,3,3,3,2,2,2,
  2,0,2,1,1,1,1,3,0,2,1,0,0,0,0,0,
  0,3,2,3,3,2,3,2,3,3,2,2,2,2,2,2,2,1,
  1,0,2,0,0,2,1,1,2,1,2,1,0,0,1,0,
  0,3,3,3,2,2,2,2,2,3,1,2,1,1,0,1,1,0,
  2,1,1,1,1,1,1,1,2,2,1,0,0,1,0,0,
  0,3,3,3,2,2,1,3,2,3,2,1,2,2,1,1,2,2,
  2,1,2,1,1,1,1,1,2,2,3,0,0,1,1,0,
  0,3,3,2,1,3,1,1,1,2,1,1,0,0,2,1,2,0,
  1,0,1,1,0,2,2,0,1,1,1,2,0,0,0,0,
  0,2,3,3,1,2,1,2,2,2,2,1,0,1,2,0,1,1,
  0,0,0,1,1,0,0,0,0,0,0,0,1,0,0,0,
  0,2,2,1,1,1,1,3,1,1,0,1,1,0,0,1,1,0,
  0,0,1,0,0,1,0,0,0,0,1,1,0,1,0,0,
  0,2,1,2,2,2,2,1,2,2,1,2,2,2,2,2,1,1,
  1,0,2,0,0,2,1,0,0,0,1,1,0,0,0,0,
  0,2,3,2,1,0,0,2,2,2,1,1,1,1,1,0,0,1,
  0,2,0,1,1,0,1,1,1,0,0,0,0,0,0,1,
};


const SequenceModel Iso_8859_4EstonianModel =
{
  Iso_8859_4_CharToOrderMap,
  EstonianFCMLowerBound,
  EstonianFCMUpperBound,
  EstonianUnicodeCharToOrder,
  EstonianCompactedLangModel,
  33,
  (float)0.999004087861901,
  PR_TRUE,
  "ISO-8859-4",
  "et"
};

const SequenceModel Iso_8859_13EstonianModel =
{
  Iso_8859_13_CharToOrderMap,
  EstonianFCMLowerBound,
  EstonianFCMUpperBound,
  EstonianUnicodeCharToOrder,
  EstonianCompactedLangModel,
  33,
  (float)0.999004087861901,
  PR_TRUE,
  "ISO-8859-13",
  "et"
};

const SequenceModel Iso_8859_15EstonianModel =
{
  Iso_8859_15_CharToOrderMap,
  EstonianFCMLowerBound,
  EstonianFCMUpperBound,
  EstonianUnicodeCharToOrder,
  EstonianCompactedLangModel,
  33,
  (float)0.999004087861901,
  PR_TRUE,
  "ISO-8859-15",
  "et"
};

const SequenceModel Windows_1252EstonianModel =
{
  Windows_1252_CharToOrderMap,
  EstonianFCMLowerBound,
  EstonianFCMUpperBound,
  EstonianUnicodeCharToOrder,
  EstonianCompactedLangModel,
  33,
  (float)0.999004087861901,
  PR_TRUE,
  "WINDOWS-1252",
  "et"
};

const SequenceModel Windows_1257EstonianModel =
{
  Windows_1257_CharToOrderMap,
  EstonianFCMLowerBound,
  EstonianFCMUpperBound,
  EstonianUnicodeCharToOrder,
  EstonianCompactedLangModel,
  33,
  (float)0.999004087861901,
  PR_TRUE,
  "WINDOWS-1257",
  "et"
};

const LanguageModel EstonianModel =
{
  "et",
  Unicode_CharOrder,
  66,
  EstonianFCMLowerBound,
  EstonianFCMUpperBound,
  EstonianUnicodeCharToOrderIsReduced,

  EstonianUnicodeCharToOrder,
  OrderToRatio,
  EstonianCompactedLangModel,
  33,
  4,
  (float)0.4180772876863005,
  18,
  (float)0.038166664869385004,
  (float)0.9993527335183553,
};
