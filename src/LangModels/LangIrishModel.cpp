/* -*- Mode: C++; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */
/* ***** BEGIN LICENSE BLOCK *****
 * Version: MPL 1.1/GPL 2.0/LGPL 2.1
 *
 * The contents of this file are subject to the Mozilla Public License Version
 * 1.1 (the "License"); you may not use this file except in compliance with
 * the License. You may obtain a copy of the License at
 * http://www.mozilla.org/MPL/
 *
 * Software distributed under the License is distributed on an "AS IS" basis,
 * WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
 * for the specific language governing rights and limitations under the
 * License.
 *
 * The Original Code is Mozilla Communicator client code.
 *
 * The Initial Developer of the Original Code is
 * Netscape Communications Corporation.
 * Portions created by the Initial Developer are Copyright (C) 1998
 * the Initial Developer. All Rights Reserved.
 *
 * Contributor(s):
 *
 * Alternatively, the contents of this file may be used under the terms of
 * either the GNU General Public License Version 2 or later (the "GPL"), or
 * the GNU Lesser General Public License Version 2.1 or later (the "LGPL"),
 * in which case the provisions of the GPL or the LGPL are applicable instead
 * of those above. If you wish to allow use of your version of this file only
 * under the terms of either the GPL or the LGPL, and not to allow others to
 * use your version of this file under the terms of the MPL, indicate your
 * decision by deleting the provisions above and replace them with the notice
 * and other provisions required by the GPL or the LGPL. If you do not delete
 * the provisions above, a recipient may use your version of this file under
 * the terms of any one of the MPL, the GPL or the LGPL.
 *
 * ***** END LICENSE BLOCK ***** */

#include "../nsSBCharSetProber.h"
#include "../nsSBCharSetProber-generated.h"
#include "../nsLanguageDetector.h"

#include "../nsLanguageDetector-generated.h"

/********* Language model for: Irish *********/

/**
 * Generated by BuildLangModel.py
 * On: 2023-07-06 21:01:23.591988
 **/

/* Character Mapping Table:
 * ILL: illegal character.
 * CTR: control character specific to the charset.
 * RET: carriage/return.
 * SYM: symbol (punctuation) that does not belong to word.
 * NUM: 0 - 9.
 *
 * Other characters are ordered by probabilities
 * (0 is the most common character in the language).
 *
 * Orders are generic to a language. So the codepoint with order X in
 * CHARSET1 maps to the same character as the codepoint with the same
 * order X in CHARSET2 for the same language.
 * As such, it is possible to get missing order. For instance the
 * ligature of 'o' and 'e' exists in ISO-8859-15 but not in ISO-8859-1
 * even though they are both used for French. Same for the euro sign.
 */
static const unsigned char Iso_8859_15_CharToOrderMap[] =
{
  CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,RET,CTR,CTR,RET,CTR,CTR, /* 0X */
  CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR, /* 1X */
  SYM,SYM,SYM,SYM,SYM,SYM,SYM,SYM,SYM,SYM,SYM,SYM,SYM,SYM,SYM,SYM, /* 2X */
  NUM,NUM,NUM,NUM,NUM,NUM,NUM,NUM,NUM,NUM,SYM,SYM,SYM,SYM,SYM,SYM, /* 3X */
  SYM,  0, 15,  8, 11,  5, 19, 12,  3,  1, 27, 25,  9, 13,  2, 10, /* 4X */
   20, 30,  4,  6,  7, 14, 24, 26, 28, 23, 29,SYM,SYM,SYM,SYM,SYM, /* 5X */
  SYM,  0, 15,  8, 11,  5, 19, 12,  3,  1, 27, 25,  9, 13,  2, 10, /* 6X */
   20, 30,  4,  6,  7, 14, 24, 26, 28, 23, 29,SYM,SYM,SYM,SYM,CTR, /* 7X */
  CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR, /* 8X */
  CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR, /* 9X */
  SYM,SYM,SYM,SYM,SYM,SYM, 38,SYM, 38,SYM,SYM,SYM,SYM,SYM,SYM,SYM, /* AX */
  SYM,SYM,SYM,SYM, 46, 65,SYM,SYM, 46,SYM,SYM,SYM, 54, 54, 62,SYM, /* BX */
   31, 17, 47, 48, 36, 53, 44, 41, 37, 18, 49, 39, 43, 16, 58, 60, /* CX */
   42, 33, 35, 21, 45, 52, 34,SYM, 51, 40, 22, 57, 32, 55, 61, 50, /* DX */
   31, 17, 47, 48, 36, 53, 44, 41, 37, 18, 49, 39, 43, 16, 58, 60, /* EX */
   42, 33, 35, 21, 45, 52, 34,SYM, 51, 40, 22, 57, 32, 55, 61, 62, /* FX */
};
/* X0  X1  X2  X3  X4  X5  X6  X7  X8  X9  XA  XB  XC  XD  XE  XF */

static const unsigned char Iso_8859_1_CharToOrderMap[] =
{
  CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,RET,CTR,CTR,RET,CTR,CTR, /* 0X */
  CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR, /* 1X */
  SYM,SYM,SYM,SYM,SYM,SYM,SYM,SYM,SYM,SYM,SYM,SYM,SYM,SYM,SYM,SYM, /* 2X */
  NUM,NUM,NUM,NUM,NUM,NUM,NUM,NUM,NUM,NUM,SYM,SYM,SYM,SYM,SYM,SYM, /* 3X */
  SYM,  0, 15,  8, 11,  5, 19, 12,  3,  1, 27, 25,  9, 13,  2, 10, /* 4X */
   20, 30,  4,  6,  7, 14, 24, 26, 28, 23, 29,SYM,SYM,SYM,SYM,SYM, /* 5X */
  SYM,  0, 15,  8, 11,  5, 19, 12,  3,  1, 27, 25,  9, 13,  2, 10, /* 6X */
   20, 30,  4,  6,  7, 14, 24, 26, 28, 23, 29,SYM,SYM,SYM,SYM,CTR, /* 7X */
  CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR, /* 8X */
  CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR, /* 9X */
  SYM,SYM,SYM,SYM,SYM,SYM,SYM,SYM,SYM,SYM,SYM,SYM,SYM,SYM,SYM,SYM, /* AX */
  SYM,SYM,SYM,SYM,SYM, 66,SYM,SYM,SYM,SYM,SYM,SYM,SYM,SYM,SYM,SYM, /* BX */
   31, 17, 47, 48, 36, 53, 44, 41, 37, 18, 49, 39, 43, 16, 58, 60, /* CX */
   42, 33, 35, 21, 45, 52, 34,SYM, 51, 40, 22, 57, 32, 55, 61, 50, /* DX */
   31, 17, 47, 48, 36, 53, 44, 41, 37, 18, 49, 39, 43, 16, 58, 60, /* EX */
   42, 33, 35, 21, 45, 52, 34,SYM, 51, 40, 22, 57, 32, 55, 61, 62, /* FX */
};
/* X0  X1  X2  X3  X4  X5  X6  X7  X8  X9  XA  XB  XC  XD  XE  XF */

static const unsigned char Iso_8859_9_CharToOrderMap[] =
{
  CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,RET,CTR,CTR,RET,CTR,CTR, /* 0X */
  CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR, /* 1X */
  SYM,SYM,SYM,SYM,SYM,SYM,SYM,SYM,SYM,SYM,SYM,SYM,SYM,SYM,SYM,SYM, /* 2X */
  NUM,NUM,NUM,NUM,NUM,NUM,NUM,NUM,NUM,NUM,SYM,SYM,SYM,SYM,SYM,SYM, /* 3X */
  SYM,  0, 15,  8, 11,  5, 19, 12,  3,  1, 27, 25,  9, 13,  2, 10, /* 4X */
   20, 30,  4,  6,  7, 14, 24, 26, 28, 23, 29,SYM,SYM,SYM,SYM,SYM, /* 5X */
  SYM,  0, 15,  8, 11,  5, 19, 12,  3,  1, 27, 25,  9, 13,  2, 10, /* 6X */
   20, 30,  4,  6,  7, 14, 24, 26, 28, 23, 29,SYM,SYM,SYM,SYM,CTR, /* 7X */
  CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR, /* 8X */
  CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR, /* 9X */
  SYM,SYM,SYM,SYM,SYM,SYM,SYM,SYM,SYM,SYM,SYM,SYM,SYM,SYM,SYM,SYM, /* AX */
  SYM,SYM,SYM,SYM,SYM, 67,SYM,SYM,SYM,SYM,SYM,SYM,SYM,SYM,SYM,SYM, /* BX */
   31, 17, 47, 48, 36, 53, 44, 41, 37, 18, 49, 39, 43, 16, 58, 60, /* CX */
   63, 33, 35, 21, 45, 52, 34,SYM, 51, 40, 22, 57, 32, 64, 59, 50, /* DX */
   31, 17, 47, 48, 36, 53, 44, 41, 37, 18, 49, 39, 43, 16, 58, 60, /* EX */
   63, 33, 35, 21, 45, 52, 34,SYM, 51, 40, 22, 57, 32, 56, 59, 62, /* FX */
};
/* X0  X1  X2  X3  X4  X5  X6  X7  X8  X9  XA  XB  XC  XD  XE  XF */

static const unsigned char Windows_1252_CharToOrderMap[] =
{
  CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,RET,CTR,CTR,RET,CTR,CTR, /* 0X */
  CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR,CTR, /* 1X */
  SYM,SYM,SYM,SYM,SYM,SYM,SYM,SYM,SYM,SYM,SYM,SYM,SYM,SYM,SYM,SYM, /* 2X */
  NUM,NUM,NUM,NUM,NUM,NUM,NUM,NUM,NUM,NUM,SYM,SYM,SYM,SYM,SYM,SYM, /* 3X */
  SYM,  0, 15,  8, 11,  5, 19, 12,  3,  1, 27, 25,  9, 13,  2, 10, /* 4X */
   20, 30,  4,  6,  7, 14, 24, 26, 28, 23, 29,SYM,SYM,SYM,SYM,SYM, /* 5X */
  SYM,  0, 15,  8, 11,  5, 19, 12,  3,  1, 27, 25,  9, 13,  2, 10, /* 6X */
   20, 30,  4,  6,  7, 14, 24, 26, 28, 23, 29,SYM,SYM,SYM,SYM,CTR, /* 7X */
  SYM,ILL,SYM, 68,SYM,SYM,SYM,SYM,SYM,SYM, 38,SYM, 54,ILL, 46,ILL, /* 8X */
  ILL,SYM,SYM,SYM,SYM,SYM,SYM,SYM,SYM,SYM, 38,SYM, 54,ILL, 46, 62, /* 9X */
  SYM,SYM,SYM,SYM,SYM,SYM,SYM,SYM,SYM,SYM,SYM,SYM,SYM,SYM,SYM,SYM, /* AX */
  SYM,SYM,SYM,SYM,SYM, 69,SYM,SYM,SYM,SYM,SYM,SYM,SYM,SYM,SYM,SYM, /* BX */
   31, 17, 47, 48, 36, 53, 44, 41, 37, 18, 49, 39, 43, 16, 58, 60, /* CX */
   42, 33, 35, 21, 45, 52, 34,SYM, 51, 40, 22, 57, 32, 55, 61, 50, /* DX */
   31, 17, 47, 48, 36, 53, 44, 41, 37, 18, 49, 39, 43, 16, 58, 60, /* EX */
   42, 33, 35, 21, 45, 52, 34,SYM, 51, 40, 22, 57, 32, 55, 61, 62, /* FX */
};
/* X0  X1  X2  X3  X4  X5  X6  X7  X8  X9  XA  XB  XC  XD  XE  XF */

static const int Unicode_Char_size = 62;
static const unsigned int Unicode_CharOrder[] =
{
  65,  0, 66, 15, 67,  8, 68, 11, 69,  5, 70, 19, 71, 12, 72,  3,
  73,  1, 74, 27, 75, 25, 76,  9, 77, 13, 78,  2, 79, 10, 80, 20,
  81, 30, 82,  4, 83,  6, 84,  7, 85, 14, 86, 24, 87, 26, 88, 28,
  89, 23, 90, 29, 97,  0, 98, 15, 99,  8, 100, 11, 101,  5, 102, 19,
  103, 12, 104,  3, 105,  1, 106, 27, 107, 25, 108,  9, 109, 13, 110,  2,
  111, 10, 112, 20, 113, 30, 114,  4, 115,  6, 116,  7, 117, 14, 118, 24,
  119, 26, 120, 28, 121, 23, 122, 29, 193, 17, 201, 18, 205, 16, 211, 21,
  218, 22, 225, 17, 233, 18, 237, 16, 243, 21, 250, 22,
};


/* Model Table:
 * Number of web pages processed for this model: 4125
 * Number of characters consumed for this model: 4114075
 * Total considered sequences: 1268 / 961
 *
 * - Positive sequences: first 477 (0.9950530357805096)
 * - Probable sequences: next 172 (649-477) (0.003947098045376407)
 * - Neutral sequences: last 312 (0.0009998661741139614)
 * - Negative sequences: -307 (off-ratio, TODO)
 */


#define IrishFCMLowerBound  97
#define IrishFCMUpperBound  250


static const PRUint8 IrishFrequentCharMapping[] =
{
  1,16,9,12,6,20,13,4,2,28,26,10,14,3,11,21,31,5,7,8,
  15,25,27,29,24,30,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
  0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
  0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
  0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
  0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
  0,0,0,0,0,0,0,0,18,0,0,0,0,0,0,0,19,0,0,0,
  17,0,0,0,0,0,22,0,0,0,0,0,0,23,
};

static const PRUint8 IrishCompactedLangModel[] =
{
  0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
  0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
  
  0,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,
  3,3,1,1,3,3,1,0,3,3,3,3,2,3,3,2,
  
  0,3,3,3,2,3,3,3,3,3,3,3,3,3,3,3,
  3,1,2,2,3,3,3,3,2,3,3,1,2,3,3,2,
  
  0,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,
  3,3,3,3,3,2,3,3,3,3,3,2,2,1,2,2,
  
  0,3,3,3,1,3,3,3,3,3,3,3,3,3,3,3,
  3,3,3,3,3,3,3,3,3,1,1,2,1,0,1,1,
  
  0,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,
  3,3,3,3,3,3,3,3,3,3,3,2,1,1,2,1,
  
  0,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,
  3,1,3,1,3,3,2,1,3,3,3,3,2,3,2,2,
  
  0,3,3,3,3,3,3,3,3,3,3,3,2,3,3,3,
  3,3,3,3,3,3,3,3,3,2,3,3,1,1,2,2,
  
  0,3,3,3,3,3,3,3,3,3,3,3,2,2,3,3,
  3,3,3,3,2,3,3,3,3,2,2,3,2,1,3,1,
  
  0,3,3,3,3,3,3,3,3,3,3,3,2,3,3,3,
  2,3,3,3,2,2,3,3,3,1,3,1,1,1,2,2,
  
  0,3,3,2,2,3,3,3,3,3,3,3,3,3,3,3,
  3,3,3,3,3,3,3,3,3,3,3,2,2,1,2,1,
  
  0,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,
  3,3,1,1,3,3,0,2,3,3,3,3,2,3,2,2,
  
  0,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,
  3,3,3,3,3,2,3,3,3,2,2,3,2,1,1,0,
  
  0,3,3,3,3,3,3,3,3,3,3,3,2,3,3,3,
  2,3,3,3,2,1,3,2,3,1,1,2,1,1,1,1,
  
  0,3,3,3,3,3,3,3,3,3,3,3,2,2,3,3,
  3,3,3,3,2,3,3,3,3,1,1,2,1,1,1,1,
  
  0,3,3,3,2,3,3,3,3,3,3,2,3,3,3,2,
  3,3,2,1,3,3,1,1,2,2,3,1,2,2,2,1,
  
  0,3,3,3,3,3,3,2,2,2,3,3,2,1,1,3,
  3,3,3,3,1,3,3,2,3,1,1,1,1,0,0,0,
  
  0,2,1,3,1,3,1,3,3,3,3,3,3,3,2,1,
  3,0,1,1,2,1,1,3,0,1,1,0,0,0,0,0,
  
  0,1,3,3,1,3,2,3,3,3,3,1,3,3,3,1,
  3,2,1,0,3,3,0,1,1,1,1,0,0,0,1,0,
  
  0,3,3,2,0,2,2,2,2,2,2,2,2,1,2,1,
  2,1,1,1,1,1,1,2,0,1,0,0,1,1,1,0,
  
  0,3,3,2,3,3,3,2,3,2,3,3,1,2,2,3,
  1,3,3,3,3,1,3,2,2,0,1,1,1,0,1,0,
  
  0,3,3,1,3,3,3,3,3,2,3,3,2,1,2,3,
  2,3,3,3,2,3,3,2,2,1,1,1,1,1,1,0,
  
  0,1,3,3,1,3,2,3,3,3,3,0,3,3,3,1,
  2,1,1,0,2,2,0,1,0,2,1,1,0,0,1,0,
  
  0,2,3,3,0,3,0,3,3,3,3,1,3,2,2,1,
  2,1,1,0,1,3,1,1,0,0,0,0,0,0,0,1,
  
  0,3,2,3,1,3,3,3,2,2,3,3,3,2,2,2,
  3,0,1,0,2,2,1,1,1,1,2,2,1,1,1,1,
  
  0,3,3,1,1,2,3,2,1,1,2,3,1,1,0,2,
  1,3,2,3,1,1,3,0,2,1,1,1,1,0,0,0,
  
  0,3,3,2,2,2,3,3,2,1,3,3,1,1,3,3,
  1,1,1,1,1,1,1,1,2,1,3,2,1,1,0,0,
  
  0,3,3,3,3,2,3,2,2,2,2,3,2,1,1,2,
  1,0,1,0,1,1,1,0,2,0,1,3,0,0,0,0,
  
  0,3,3,1,1,2,3,2,1,1,1,3,1,1,1,3,
  1,1,1,1,1,1,1,1,1,1,1,0,1,0,0,0,
  
  0,3,2,1,1,1,2,1,3,2,1,2,1,1,1,1,
  1,0,1,1,2,2,0,1,1,1,1,1,0,1,0,0,
  
  0,3,2,1,2,1,3,1,1,1,1,3,1,2,1,2,
  2,0,1,1,1,1,1,1,2,1,1,1,1,0,2,0,
  
  0,1,1,0,0,0,0,1,1,1,0,0,0,0,0,3,
  1,0,0,0,0,0,0,0,0,1,0,0,0,1,0,1,
  
};


const SequenceModel Iso_8859_15IrishModel =
{
  Iso_8859_15_CharToOrderMap,
  IrishFCMLowerBound,
  IrishFCMUpperBound,
  IrishFrequentCharMapping,
  IrishCompactedLangModel,
  31,
  (float)0.999000133825886,
  PR_TRUE,
  "ISO-8859-15",
  "ga"
};

const SequenceModel Iso_8859_1IrishModel =
{
  Iso_8859_1_CharToOrderMap,
  IrishFCMLowerBound,
  IrishFCMUpperBound,
  IrishFrequentCharMapping,
  IrishCompactedLangModel,
  31,
  (float)0.999000133825886,
  PR_TRUE,
  "ISO-8859-1",
  "ga"
};

const SequenceModel Iso_8859_9IrishModel =
{
  Iso_8859_9_CharToOrderMap,
  IrishFCMLowerBound,
  IrishFCMUpperBound,
  IrishFrequentCharMapping,
  IrishCompactedLangModel,
  31,
  (float)0.999000133825886,
  PR_TRUE,
  "ISO-8859-9",
  "ga"
};

const SequenceModel Windows_1252IrishModel =
{
  Windows_1252_CharToOrderMap,
  IrishFCMLowerBound,
  IrishFCMUpperBound,
  IrishFrequentCharMapping,
  IrishCompactedLangModel,
  31,
  (float)0.999000133825886,
  PR_TRUE,
  "WINDOWS-1252",
  "ga"
};

const LanguageModel IrishModel =
{
  "ga",
  Unicode_CharOrder,
  62,
  IrishFCMLowerBound,
  IrishFCMUpperBound,
  IrishFrequentCharMapping,
  IrishCompactedLangModel,
  31,
  4,
  (float)0.40995169023413525,
  19,
  (float)0.03492887222522681,
  (float)0.9996757472821959,
};
